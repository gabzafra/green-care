{"version":3,"sources":["globalStyles/colors.js","fontStyles/StyledCloseBtn.js","fontStyles/PageTitle.js","services/AuthService.js","components/Login/StyledLogin.js","components/Login/Login.js","components/Signup/StyledSignup.js","components/Signup/Signup.js","services/PlantService.js","services/TaskService.js","components/PlantCard/StyledPlantCard.js","fontStyles/StyledButton.js","fontStyles/ModalButtons.js","components/Main/Main.js","fontStyles/ImageLoader.js","services/UserService.js","services/GeoService.js","fontStyles/LoadingOverlay.js","fontStyles/FormRange.js","fontStyles/MutableTextInput.js","components/PlantDetail/PlantDetail.js","guards/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["colors","green","white","red","blue","gray","StyledButton","styled","button","props","btnColor","CloseBtn","HeaderWrapper","div","LogoImg","img","PageTitle","src","alt","AuthService","signup","user","instance","post","then","res","Promise","resolve","data","catch","error","console","login","loggedInUser","get","logout","upload","picture","this","axios","create","baseURL","process","withCredentials","StyledLogin","StyledInput","input","StyledLabel","label","Login","username","password","handleChange","placeholder","htmlFor","type","name","value","onChange","className","state","e","target","setState","handleLogin","setUser","history","preventDefault","authService","push","onSubmit","Component","StyledSignup","StyledError","p","Signup","passwordR","SignUp","handleSignUp","Fragment","PlantService","getPlantById","plantId","getUserPlants","userId","createPlant","plant","deletePlant","delete","updatePlant","put","uploadPlantImage","TaskService","createTasks","taskArr","createTask","task","updateTask","deleteTask","CardContainer","PlantPortrait","PlantInfo","ControlButtons","PlantCard","id","common_name","to","pathname","flavour","onClick","GenericBtn","Button","clicked","BtnWrapper","Buttons","updateHandler","Main","updatePlants","plantService","plants","message","find","taskService","map","key","ModalButtons","InputField","CustomLabel","Loader","handleUpload","UserService","getUsers","getUserByIdDeep","getUserByIdShallow","updateUser","uploadUserImage","GeoService","calcDistance","lat1","lng1","lat2","lng2","dLat","toRad","dLng","a","Math","sin","cos","atan2","sqrt","PI","getUserLocationArr","locations","radius","resultArr","length","currentLoc","pop","nextLoc","LoadingOverlay","Label","RangeInput","RangeWrapper","NumberBoard","labelText","forHtml","step","min","max","StaticField","Input","FormWrapper","form","ButtonsWrapper","PlantDetail","toggleInfo","infoToggle","uploadData","FormData","append","files","loadingFlag","secure_url","handleUpdate","getPlant","params","match","userService","geoService","waterInterval","fertilizerInterval","location","navigator","geolocation","getCurrentPosition","position","doCreate","coords","latitude","longitude","currentPosition","newTasks","begin_day","Date","day_interval","newPlant","scientific_name","soils_adaptation","temperature_minimun","shade_tolerance","year_rain_range","ph_range","fertilizer_req","perennial","tasks","coordinates","_id","createNewPlant","join","MutableTextInput","ImageLoader","FormRange","PrivateRoute","component","redirectPath","rest","render","App","fetchUser","response","flag","exact","path","React","Boolean","window","hostname","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f1d3f82.chunk.js","sourcesContent":["const colors = {\n    green : `#6AA76F`,\n    white : `#FFFFFF`,\n    red : `#A78F6A`,\n    blue: `#1B8ECF`,\n    gray: `#A0A0A0`\n}\n\nexport default colors;","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\n\nconst StyledButton = styled.button`\n        border: none;\n        background-color: ${colors.green};\n        background-image: ${props => props.btnColor === \"white\" ? \"url(../images/close_w.svg)\" :\"url(./images/close_g.svg)\"};\n        background-position: center;\n        background-repeat: no-repeat;\n        width: 10vw;\n        height: 5vh;\n        margin-right: 1rem;\n        margin-top: 1rem;\n`;\n\nconst CloseBtn = props => {\n    const { btnColor } = props;\n    return (\n        <StyledButton btnColor={btnColor} />\n    );\n};\n\nexport default CloseBtn;","import React from \"react\";\nimport styled from \"styled-components\";\nimport CloseBtn from \"./StyledCloseBtn\";\n\nconst HeaderWrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: space-between;\n  padding-left: 1rem;\n  box-sizing: border-box;\n`;\n\nconst LogoImg = styled.img`\n  width: 70vw;\n  height: 10vh;\n`;\n\nconst PageTitle = props => {\n  return (\n    <HeaderWrapper>\n      <LogoImg src={props.src} alt={props.alt} />\n      <CloseBtn btnColor={\"white\"} />\n    </HeaderWrapper>\n  );\n};\nexport default PageTitle;\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true    \n    })\n  }\n\n  signup = (user) => {\n    return this.instance.post('/signup', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  login = (user) => {\n    return this.instance.post('/login', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  loggedInUser = () => {\n    return this.instance.get('/loggedin')\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  logout = () => {\n    return this.instance.post('/logout')\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error))\n  }\n\n  upload = (picture) => {\n    return this.instance.post('/upload', picture)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n}\n\nexport default AuthService;","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../globalStyles/colors\";\n\nconst StyledLogin = styled.div`\n  display: flex;\n  align-items: center;\n  flex-flow: column;\n  width: 100vw;\n  height: 50vh;\n  margin: 0 auto;\n  .button-box {\n    display: flex;\n    flex-direction: column;\n    margin-top: 2rem;\n    button {\n      background: ${colors.white};\n      color: ${colors.green};\n      font-size: 1.2rem;\n      font-weight: 600;\n      border: none;\n      border-radius: 25px;\n      height: 50px;\n      min-width: 230px;\n      max-width: 350px;\n      padding: 10px;\n      margin: .5rem;\n      box-sizing: border-box;\n      input {\n        color: ${colors.white};\n        font-size: 1.2rem;\n        font-weight: 600;\n      }\n    }\n    .btn-green {\n      background: ${colors.green};\n      border: 1px solid ${colors.white};\n    }\n  }\n`;\n\nconst StyledInput = styled.input`\n  color: ${colors.gray};\n  font-size: 1.2rem;\n  border: none;\n  border-radius: 22px;\n  height: 50px;\n  min-width: 230px;\n  max-width: 350px;\n  padding: 10px;\n  margin: 5px;\n  box-sizing: border-box;\n  ::placeholder {\n    color: ${colors.gray};\n  }\n`;\n\nconst StyledLabel = styled.label`\n  font-family: \"Encode Sans\";\n  font-weight: 400;\n  font-size: 2em;\n  color: ${colors.white};\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst Login = props => {\n  const { username, password, handleChange, placeholder } = props;\n  return (\n    <StyledLogin>\n      <StyledLabel htmlFor=\"username\">User name: </StyledLabel>\n      <StyledInput\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        placeholder={placeholder}\n      />\n      <StyledLabel htmlFor=\"password\">Password: </StyledLabel>\n      <StyledInput\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n      />\n      <div className={\"button-box\"}>\n        <button className={\"btn-green\"}>\n          <input type=\"submit\" value=\"Enter\" />\n        </button>\n        <button>New user</button>\n      </div>\n    </StyledLogin>\n  );\n};\n\nexport default Login;\n","import React, { Component } from 'react'\nimport PageTitle from '../../fontStyles/PageTitle'\nimport AuthService from '../../services/AuthService';\nimport './Login.css';\nimport StyledLogin from './StyledLogin';\n\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  state = {\n    // username: '',\n    // password: ''\n    username: 'bob',\n    password: '12345678'\n  }\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({...this.state, [name]:value})\n  }\n  handleLogin = (e) => {\n    const { setUser, history } = this.props;\n    e.preventDefault()\n    this.authService.login(this.state)\n    .then(\n      (user) => {\n        setUser(user)\n        history.push(\"/main\")\n      },\n      (error) => {\n        console.error(error)\n      }\n    )\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <div className=\"login-wrapper\">\n        <PageTitle src=\"./images/green_care_w.svg\" alt=\"green care logo\"/>\n        <img src=\"./images/leaf_w.svg\" alt=\"green care\"></img>\n        <form onSubmit={this.handleLogin}>\n          <StyledLogin username={username} password={password} handleChange={this.handleChange} handleLogin={this.handleLogin} placeholder={\"User name\"}></StyledLogin>\n        </form>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../globalStyles/colors\";\n\nconst StyledSignup = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: column;\n  width: 100vw;\n  height: 50vh;\n  .button-box {\n    display: flex;\n    flex-direction: column;\n    margin-top: 2rem;\n    button {\n      background: ${colors.white};\n      color: ${colors.green};\n      font-size: 1.2rem;\n      font-weight: 600;\n      border: none;\n      border-radius: 25px;\n      height: 50px;\n      min-width: 230px;\n      max-width: 350px;\n      padding: 10px;\n      margin: .5rem;\n      box-sizing: border-box;\n      input {\n        color: ${colors.white};\n        font-size: 1.2rem;\n        font-weight: 600;\n      }\n    }\n    .btn-green {\n      background: ${colors.green};\n      border: 1px solid ${colors.white};\n    }\n\n    .btn-red {\n      background: ${colors.red};\n      border: 1px solid ${colors.white};\n      color: ${colors.white};\n    }\n  }\n`;\n\nconst StyledInput = styled.input`\n  color: ${colors.gray};\n  font-size: 1.2rem;\n  border: none;\n  border-radius: 22px;\n  height: 50px;\n  min-width: 230px;\n  max-width: 350px;\n  padding: 10px;\n  margin: 5px;\n  box-sizing: border-box;\n  ::placeholder {\n    color: ${colors.gray};\n  }\n`;\n\nconst StyledLabel = styled.label`\n  font-family: \"Encode Sans\";\n  font-weight: 400;\n  font-size: 2em;\n  color: ${colors.white};\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst StyledError = styled.p`\n  font-family: \"Roboto\";\n  font-weight: 300;\n  font-size: 1em;\n  font-style: italic;\n  color: ${colors.white};\n  background-color: ${colors.red} ;\n  padding: 2px 5px;\n  border-radius: 5px;\n`;\n\nconst Signup = props => {\n  const { username, password, passwordR, handleChange, placeholder, error } = props;\n  return (\n    <StyledSignup>\n      <StyledLabel htmlFor=\"username\">New user name: </StyledLabel>\n      <StyledInput\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        placeholder={placeholder}\n      />\n      <StyledLabel htmlFor=\"password\">New password: </StyledLabel>\n      <StyledInput\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n      />\n      <StyledLabel htmlFor=\"passwordR\">Repeat password: </StyledLabel>\n      <StyledInput\n        type=\"password\"\n        name=\"passwordR\"\n        value={passwordR}\n        onChange={handleChange}\n      />\n      {error && <StyledError>{error}</StyledError>}\n      <div className={\"button-box\"}>\n        <button className={\"btn-green\"}>\n          <input type=\"submit\" value=\"Create User\" />\n        </button>\n        <button className={\"btn-red\"}>Cancel</button>\n      </div>\n    </StyledSignup>\n  );\n};\n\nexport default Signup;","import React, { Component } from \"react\";\nimport \"./Signup.css\";\nimport PageTitle from \"../../fontStyles/PageTitle\";\nimport Signup from \"./StyledSignup\";\nimport AuthService from \"../../services/AuthService\";\n\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  state = {\n    username: \"\",\n    password: \"\",\n    passwordR: \"\",\n    error: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n  handleSignUp = e => {\n    e.preventDefault();\n    if (this.state.password === this.state.passwordR) {\n      const { history, setUser } = this.props;\n      this.authService.signup(this.state).then(\n        user => {\n          setUser(user);\n          history.push(\"/\");\n        },\n        error => {\n          this.setState({ ...this.state, error: error });\n        }\n      );\n    } else {\n      this.setState({ ...this.state, error: \"Password don't match\" });\n    }\n  };\n\n  render() {\n    const { username, password, passwordR, error } = this.state;\n    return (\n      <React.Fragment>\n        <PageTitle src=\"./images/green_care_w.svg\" alt=\"green care logo\"/>\n        <form className=\"form-wrapper\" onSubmit={this.handleSignUp}>\n          <Signup\n            username={username}\n            password={password}\n            passwordR={passwordR}\n            handleChange={this.handleChange}\n            placeholder={\"User name\"}\n            error={error}\n          ></Signup>\n          {/* <label htmlFor=\"username\">Username: </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            required\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type=\"password\"\n            value={password}\n            name=\"password\"\n            required\n            onChange={this.handleChange}\n          />\n          <input type=\"file\" name=\"picture\" onChange={this.handleUpload} />\n          <input type=\"submit\" value=\"Create account\" /> */}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n","import axios from \"axios\";\n\nclass PlantService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/plants`,\n      withCredentials: true\n    });\n  }\n\n  getPlantById = plantId => {\n    return this.instance\n      .get(`/${plantId}`)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  getUserPlants = userId => {\n    return this.instance\n      .get(`/user/${userId}`)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  createPlant = plant => {\n    return this.instance\n      .post(\"/create\", plant)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  deletePlant = plantId => {\n    return this.instance\n      .delete(`/delete/${plantId}`)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  updatePlant = plant => {\n    return this.instance\n      .put(`/update`, plant)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  uploadPlantImage = picture => {\n    return this.instance\n      .post(\"/upload\", picture)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n}\n\nexport default PlantService;\n","import axios from \"axios\";\n\nclass TaskService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/tasks`,\n      withCredentials: true\n    });\n  }\n\n  createTasks = taskArr => {\n    return this.instance\n      .post(\"/multicreate\", taskArr)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  createTask = (plantId, task) => {\n    task.plantId = plantId;\n    return this.instance\n      .post(\"/create\", task)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  updateTask = (task) => {\n    return this.instance\n      .put(\"/update\", task)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  deleteTask = (task) => {\n    return this.instance\n      .put(\"/delete\", task)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n}\n\nexport default TaskService;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./StyledPlantCard.css\";\nimport colors from \"../../globalStyles/colors\";\nimport { Link } from \"react-router-dom\";\n\nconst CardContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 2rem 1rem;\n`;\n\nconst PlantPortrait = styled.img`\n  width: 140px;\n  height: 140px;\n  border-radius: 50%;\n  border: 8px solid ${colors.white};\n  box-sizing: border-box;\n`;\n\nconst PlantInfo = styled.div`\n  color: ${colors.white};\n\n  h2 {\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n  p {\n    font-size: 1rem;\n    font-family: \"Roboto\";\n    font-style: italic;\n  }\n`;\n\nconst ControlButtons = styled.div`\n  display: flex;\n  button {\n    border: none;\n    background-color: ${colors.green};\n    background-position: center-top;\n    background-repeat: no-repeat;\n    background-size: cover;\n    width: 2rem;\n    height: 2rem;\n    margin-top: 2rem;\n  }\n  .btn-edit {\n    background-image: url(./images/edit_w.svg);\n  }\n  .btn-delete {\n    background-image: url(./images/trash_w.svg);\n    margin-left: 2rem;\n  }\n`;\n\nconst PlantCard = props => {\n  const { id, picture, name, common_name, deletePlant } = props.plant;\n  return (\n    <CardContainer>\n      <Link\n        to={{\n          pathname: `/plant-detail/${id}`,\n          state: {\n            flavour: \"readonly\"\n          }\n        }}\n      >\n        <PlantPortrait id={id} src={picture}></PlantPortrait>\n      </Link>\n      <div className=\"side-wrapper\">\n        <Link\n          to={{\n            pathname: `/plant-detail/${id}`,\n            state: {\n              flavour: \"readonly\"\n            }\n          }}\n        >\n          <PlantInfo id={id}>\n            <h2>{name}</h2>\n            <p>{common_name}</p>\n          </PlantInfo>\n        </Link>\n        <ControlButtons>\n          <Link\n            to={{\n              pathname: `/plant-update/${id}`,\n              state: {\n                flavour: \"update\"\n              }\n            }}\n          >\n            <button className=\"btn-edit\"></button>\n          </Link>\n          <button\n            className=\"btn-delete\"\n            id={id}\n            onClick={e => deletePlant(e)}\n          ></button>\n        </ControlButtons>\n      </div>\n    </CardContainer>\n  );\n};\n\nexport default PlantCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\n\nconst GenericBtn = styled.button`\n  border: none;\n  background-color: ${colors.green};\n  background-image: url(${props => props.img});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 4rem;\n  height: 4rem;\n  margin-right: 1rem;\n  margin-top: 1rem;\n`;\n\nconst Button = props => {\n  const { img, clicked } = props;\n  return (\n    <React.Fragment>    \n        <GenericBtn img={img} onClick={e=>clicked(e)} />\n    </React.Fragment>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\nimport StyledButton from \"../fontStyles/StyledButton\";\nimport { Link } from \"react-router-dom\";\n\nconst GenericBtn = styled.button`\n  font-family: \"Encode Sans\";\n  color: ${colors.white};\n  font-size: 1.2rem;\n  font-weight: 600;\n  border: none;\n  border-radius: 25px;\n  height: 40px;\n  min-width: 140px;\n  max-width: 350px;\n  padding: 5px 10px 10px;\n  margin: 0.5rem;\n  box-sizing: border-box;\n`;\n\nconst BtnWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  margin-top: 1rem;\n  .btn-green {\n    background: ${colors.green};\n    border: 1px solid ${colors.white};\n  }\n  .btn-red {\n    background: ${colors.red};\n  }\n  .btn-new {\n    background: ${colors.white};\n    color: ${colors.green};\n    font-size: 2.5rem;\n    font-weight: 600;\n    padding: 0;\n    line-height: 1rem;\n    align-self: flex-end;\n  }\n`;\n\nconst Buttons = props => {\n  const { updateHandler, flavour } = props;\n  return (\n    <BtnWrapper>\n      {(() => {\n        switch (flavour) {\n          case \"readonly\":\n            return <GenericBtn className=\"btn-red\">Go back</GenericBtn>;\n          case \"update\":\n            return (\n              <React.Fragment>\n                <GenericBtn className=\"btn-red\">Cancel</GenericBtn>\n                <GenericBtn className=\"btn-green\" onClick={e=>updateHandler(e)}>Update</GenericBtn>\n              </React.Fragment>\n            );\n          case \"create\":\n            return (\n              <React.Fragment>\n                <GenericBtn className=\"btn-green\" onClick={e=>updateHandler(e)}>Create</GenericBtn>\n              </React.Fragment>\n            );\n          case \"main\":\n            return (\n              <React.Fragment>\n                <StyledButton img={\"../images/calendar_w.svg\"} />\n                <Link\n                  to={{\n                    pathname: `/plant/new`,\n                    state: {\n                      flavour: \"create\"\n                    }\n                  }}\n                >\n                  <GenericBtn className=\"btn-new\">+</GenericBtn>\n                </Link>\n\n                <StyledButton img={\"../images/map_w.svg\"} />\n              </React.Fragment>\n            );\n          default:\n            return (\n              <React.Fragment>\n                <GenericBtn className=\"btn-red\">Cancel</GenericBtn>\n                <GenericBtn className=\"btn-green\">Accept</GenericBtn>\n              </React.Fragment>\n            );\n        }\n      })()}\n    </BtnWrapper>\n  );\n};\n\nexport default Buttons;\n","import React, { Component } from \"react\";\nimport \"./Main.css\";\nimport PageTitle from \"../../fontStyles/PageTitle\";\nimport plantService from \"../../services/PlantService\";\nimport taskService from \"../../services/TaskService\";\nimport PlantCard from \"../PlantCard/StyledPlantCard\";\nimport ModalButtons from \"../../fontStyles/ModalButtons\";\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.plantService = new plantService();\n    this.taskService = new taskService();\n    this.state = {\n      plants: []\n    };\n  }\n\n  updatePlants = () => {\n    this.plantService.getUserPlants(this.props.loggedInUser.id).then(\n      plants => {\n        this.setState({ ...this.state, plants });\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  deletePlant = e => {\n    e.preventDefault();\n    let plant = this.state.plants.find(plant => plant.id === e.target.id);\n    this.plantService.deletePlant(plant.id).then(\n      () => {\n        this.updatePlants();\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  componentDidMount() {\n    this.updatePlants();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"fixed-top-aux-padding\">\n          <div className=\"fixed-controls up\">\n            <PageTitle src=\"./images/green_care_w.svg\" alt=\"green care logo\" />\n          </div>\n          {this.state.plants.map(plant => (\n            <PlantCard\n              key={plant.id}\n              plant={{ ...plant, deletePlant: this.deletePlant }}\n            ></PlantCard>\n          ))}\n          <div className=\"fixed-controls down\">\n            <ModalButtons flavour=\"main\" />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\n\nconst InputField = styled.input`\n  display: none;\n`;\n\nconst CustomLabel = styled.label`\n  cursor: pointer;\n`;\n\nconst PlantPortrait = styled.img`\n  width: 178px;\n  height: 178px;\n  border-radius: 50%;\n  border: 8px solid ${colors.white};\n  box-sizing: border-box;\n`;\n\nconst Loader = props => {\n  const { picture, handleUpload, flavour } = props;\n  return (\n    <React.Fragment>\n      {flavour !== \"readonly\" ? (\n        <React.Fragment>\n          <CustomLabel htmlFor=\"file-upload\" className=\"custom-file-upload\">\n            <PlantPortrait src={picture} />\n          </CustomLabel>\n          <InputField id=\"file-upload\" type=\"file\" onChange={handleUpload} />\n        </React.Fragment>\n      ) : (\n        <PlantPortrait src={picture} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nclass UserService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/users`,\n      withCredentials: true    \n    })\n  }\n\n  getUsers = () => {\n    return this.instance.get(`/all`)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  getUserByIdDeep = (id) => {\n    return this.instance.get(`/deep/${id}`)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  getUserByIdShallow = (id) => {\n    return this.instance.get(`/shallow/${id}`)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  updateUser = (user) => {\n    return this.instance.put('/update',user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  uploadUserImage = (picture) => {\n    return this.instance.post('/upload', picture)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n}\n\nexport default UserService;","class GeoService {\n    constructor() {}\n    calcDistance = (lat1, lng1, lat2, lng2) => {\n        const R = 6371; // earth radius in km\n        let dLat = this.toRad(lat2 - lat1);\n        let dLng = this.toRad(lng2 - lng1);\n        lat1 = this.toRad(lat1);\n        lat2 = this.toRad(lat2);\n      \n        let a =\n          Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n          Math.sin(dLng / 2) * Math.sin(dLng / 2) * Math.cos(lat1) * Math.cos(lat2);\n        let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        let d = R * c;\n        return d;\n      }\n      \n    toRad = (value) => {\n        return (value * Math.PI) / 180;\n      }\n      \n    getUserLocationArr = (locations, radius = 0.02) => {\n        let resultArr = [];\n        if (locations.length > 0) {\n          let currentLoc = locations.pop();\n          resultArr.push(currentLoc);\n          while (locations.length > 0) {\n            let nextLoc = locations.pop();\n            if (\n              this.calcDistance(currentLoc[0], currentLoc[1], nextLoc[0], nextLoc[1]) >\n              radius\n            ) {\n              resultArr.push(nextLoc);\n              currentLoc = nextLoc;\n            }\n          }\n        }\n        return resultArr;\n      }\n}\n\nexport default GeoService;","import styled from \"styled-components\";\n\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background-color : rgba(0,0,0,.2);\n  background-image : url(../images/Spinner-1s-200px.svg);\n  background-position: center;\n  background-repeat: no-repeat;\n  z-index : 1000;\n  }\n`;\n\nexport default LoadingOverlay;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Label = styled.label`\n  font-size: 1.8rem;\n  align-self: flex-start;\n  margin-left: 1rem;  \n`;\n\nconst RangeInput = styled.input`\n`;\n\nconst RangeWrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  align-items: center;\n`;\n\nconst NumberBoard = styled.p`\n  font-size: 2rem;\n`;\n\nconst Loader = props => {\n  const { name, handleChange, value, id, labelText } = props;\n  return (\n    <React.Fragment>\n      <Label forHtml={id} name={name}>\n        {labelText}\n      </Label>\n      <RangeWrapper>\n        <RangeInput\n          id={id}\n          type=\"range\"\n          name={name}\n          step={1}\n          value={value}\n          min={1}\n          max={30}\n          onChange={handleChange}\n        ></RangeInput>\n        <NumberBoard>{value}</NumberBoard>\n      </RangeWrapper>\n    </React.Fragment>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\n\nconst InputField = styled.input`\ncolor: ${colors.gray};\n  font-size: 1.2rem;\n  border: none;\n  border-radius: 22px;\n  height: 50px;\n  min-width: 230px;\n  max-width: 350px;\n  padding: 10px;\n  margin: 5px;\n  box-sizing: border-box;\n  ::placeholder {\n    color: ${colors.gray};\n  }`;\n  \nconst StaticField = styled.p`\n  background-color: ${colors.green};\n  font-family: \"Encode Sans\"; \n  font-size: 1.7rem;\n  padding: 1rem;\n`;\n\nconst Input = props => {\n  const { name, value, handleChange, flavour, placeholder } = props;\n  return (\n    <React.Fragment>\n      {flavour === \"readonly\" ? (\n        <StaticField>{value}</StaticField>\n      ) : (\n        <InputField name={name} value={value} onChange={handleChange} placeholder={placeholder} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport PageTitle from \"../../fontStyles/PageTitle\";\nimport ImageLoader from \"../../fontStyles/ImageLoader\";\nimport plantService from \"../../services/PlantService\";\nimport userService from \"../../services/UserService\";\nimport taskService from \"../../services/TaskService\";\nimport geoService from \"../../services/GeoService\";\nimport LoadingOverlay from \"../../fontStyles/LoadingOverlay\";\nimport FormRange from \"../../fontStyles/FormRange\";\nimport StyledButton from \"../../fontStyles/StyledButton\";\nimport MutableTextInput from \"../../fontStyles/MutableTextInput\";\nimport ModalButtons from \"../../fontStyles/ModalButtons\";\nimport styled from \"styled-components\";\nimport \"./PlantDetail.css\";\n\nconst FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ButtonsWrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 1rem;\n`;\n\nexport default class PlantDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.plantService = new plantService();\n    this.userService = new userService();\n    this.taskService = new taskService();\n    this.geoService = new geoService();\n    this.state = {\n      plant: {},\n      name: \"\",\n      common_name: \"\",\n      loadingFlag: true,\n      waterInterval: 7,\n      fertilizerInterval: 7,\n      infoToggle: false,\n      flavour: props.location.state.flavour\n    };\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  toggleInfo = e => {\n    e.preventDefault();\n    this.setState({ ...this.state, infoToggle: !this.state.infoToggle });\n  };\n\n  handleUpload = e => {\n    const uploadData = new FormData();\n    uploadData.append(\"picture\", e.target.files[0]);\n\n    this.setState({ ...this.state, loadingFlag: true });\n    this.plantService.uploadPlantImage(uploadData).then(\n      data => {\n        this.setState({\n          ...this.state,\n          plant: { ...this.state.plant, picture: data.secure_url },\n          loadingFlag: false\n        });\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  };\n\n  handleUpdate = e => {\n    e.preventDefault();\n    const { history } = this.props;\n    history.push(\"/main\");\n  };\n\n  getPlant = () => {\n    const {\n      match: { params }\n    } = this.props;\n    this.plantService.getPlantById(params.plantId).then(\n      plant => {\n        this.setState({\n          ...this.state,\n          plant,\n          name: plant.name,\n          common_name: plant.common_name,\n          loadingFlag: false\n        });\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  createNewPlant(user) {\n    let locationArr = [40.392351, -3.696842];\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position =>\n        doCreate([position.coords.latitude, position.coords.longitude])\n      );\n    } else {\n      doCreate(locationArr);\n    }\n\n    const doCreate = currentPosition => {\n      let newTasks = [\n        {\n          begin_day: new Date(),\n          day_interval: 7,\n          type: \"WATER\"\n        },\n        {\n          begin_day: new Date(),\n          day_interval: 15,\n          type: \"FERTILIZER\"\n        }\n      ];\n\n      let newPlant = {\n        name: \"\",\n        common_name: \"\",\n        scientific_name: \"\",\n        soils_adaptation: [],\n        temperature_minimun: 0,\n        shade_tolerance: \"\",\n        year_rain_range: \"\",\n        ph_range: \"\",\n        fertilizer_req: \"\",\n        perennial: true,\n        picture: \"../images/daisy.jpg\",\n        tasks: [],\n        location: {\n          type: \"Point\",\n          coordinates: currentPosition\n        }\n      };\n\n      this.plantService\n        .createPlant(newPlant)\n        .then(plant => {\n          newPlant = plant;\n          return this.taskService.createTasks(newTasks);\n        })\n        .then(tasks => {\n          newPlant.tasks = [tasks[0]._id, tasks[1]._id];\n          return this.plantService.updatePlant(newPlant);\n        })\n        .then(() => {\n          user.locations.push(currentPosition);\n          user.plants.push(newPlant.id);\n          user.locations = this.geoService.getUserLocationArr(user.locations);\n          return this.userService.updateUser(user)\n        }).then(()=>{\n          this.setState({\n            ...this.state,\n            plant: {...newPlant},\n            name: newPlant.name,\n            common_name: newPlant.common_name,\n            loadingFlag: false\n          });\n        })\n        .catch(error => console.error(error));\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.state.flavour === \"create\") {\n      this.createNewPlant({ ...this.props.loggedInUser });\n    } else {\n      this.getPlant();\n    }\n  }\n\n  render() {\n    const { flavour, plant, name, common_name } = this.state;\n    return (\n      <React.Fragment>\n        {this.state.plant && (\n          <React.Fragment>\n            {this.state.loadingFlag ? (\n              <LoadingOverlay />\n            ) : (\n              <React.Fragment>\n                <aside\n                  className={this.state.infoToggle ? \"show-aside\" : \"\"}\n                  onClick={this.toggleInfo}\n                >\n                  <h2>{plant.common_name}</h2>\n                  <p>{plant.scientific_name}</p>\n                  <div className=\"row\">\n                    <h3>Soil preference</h3>\n                    <p>{plant.soils_adaptation.join(\" \")}</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Temperature minimun</h3>\n                    <p>{plant.temperature_minimun}&#176;C</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Shade tolerance</h3>\n                    <p>{plant.shade_tolerance}</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Yearly precipitation rate</h3>\n                    <p>{plant.year_rain_range}</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>pH range</h3>\n                    <p>{plant.ph_range}</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Fertilizer needs</h3>\n                    <p>{plant.fertilizer_req}</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Perennial</h3>\n                    <p>{plant.perennial ? \"Yes\" : \"No\"}</p>\n                  </div>\n                </aside>\n\n                <PageTitle\n                  src=\"../images/green_care_w.svg\"\n                  alt=\"green care logo\"\n                />\n                <FormWrapper>\n                  <MutableTextInput\n                    name=\"name\"\n                    value={name}\n                    handleChange={this.handleChange}\n                    flavour={flavour}\n                    placeholder=\"Plant name\"\n                  />\n                  <ImageLoader\n                    picture={plant.picture}\n                    handleUpload={this.handleUpload}\n                    flavour={flavour}\n                  />\n                  <MutableTextInput\n                    className=\"sub-text\"\n                    name=\"common_name\"\n                    value={common_name}\n                    handleChange={this.handleChange}\n                    flavour={flavour}\n                    placeholder=\"Plant species\"\n                  />\n                  <ButtonsWrapper>\n                    <StyledButton img=\"../images/map_w.svg\" />\n                    <StyledButton\n                      img=\"../images/info_w.svg\"\n                      clicked={this.toggleInfo}\n                    />\n                    <StyledButton img=\"../images/trash_b_w.svg\" />\n                  </ButtonsWrapper>\n\n                  <FormRange\n                    id={\"waterSlider\"}\n                    name={\"waterInterval\"}\n                    value={this.state.waterInterval}\n                    handleChange={\n                      flavour !== \"readonly\" ? this.handleChange : () => \"\"\n                    }\n                    labelText=\"Watering interval\"\n                  />\n                  <FormRange\n                    id={\"fertSlider\"}\n                    name={\"fertilizerInterval\"}\n                    value={this.state.fertilizerInterval}\n                    handleChange={\n                      flavour !== \"readonly\" ? this.handleChange : () => \"\"\n                    }\n                    labelText=\"Fertilizer\"\n                  />\n                </FormWrapper>\n                <ModalButtons flavour={flavour} updateHandler={this.handleUpdate} />\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nexport default function PrivateRoute({component: Component, user, redirectPath, ...rest}) {\n  return (\n   <Route {...rest} render={(props) => {\n    {if(user) {\n      return <Component loggedInUser={user} {...props}/>\n     } else {\n       return <Redirect to={{pathname: redirectPath}}/>\n     }\n    }\n   }} />\n  )\n}","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport SignUp from \"./components/Signup/Signup\";\nimport Main from \"./components/Main/Main\";\nimport PlantDetail from \"./components/PlantDetail/PlantDetail\";\nimport AuthService from \"./services/AuthService\";\nimport PrivateRoute from \"./guards/PrivateRoute\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n    this.state = {\n      user: null,\n      flag: false\n    };\n  }\n\n  setUser = user => {\n    this.setState({ ...this.state, user });\n  };\n\n  fetchUser = () => {\n    if (this.state.user === null) {\n      this.authService\n        .loggedInUser()\n        .then(\n          user => {\n            this.setUser(user);\n          },\n          error => {\n            this.setUser(false);\n          }\n        )\n        .catch(() => {\n          this.setUser(false);\n        });\n    }\n  };\n\n  logout = match => {\n    this.authService.logout().then(response => {\n      this.setState({\n        ...this.state,\n        user: null\n      });\n      match.history.push(\"/login\");\n    });\n  };\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  render() {\n    let { user } = this.state;\n    return (\n      <div className=\"App\">\n        {user && (\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={match => <Login {...match} setUser={this.setUser} />}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={match => <SignUp {...match} setUser={this.setUser} />}\n            />\n            <Route exact path=\"/logout\" render={match => this.logout(match)} />\n            <PrivateRoute exact path=\"/main\" user={user} component={Main}  />\n            <PrivateRoute path=\"/plant-detail/:plantId\" user={user} component={PlantDetail}  />\n            <PrivateRoute path=\"/plant-update/:plantId\" user={user} component={PlantDetail}  />\n            <PrivateRoute path=\"/plant/new\" user={user} component={PlantDetail}  />\n          </Switch>\n        )}\n        {!user && (\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={match => <Login {...match} setUser={this.setUser} />}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={match => <SignUp {...match} setUser={this.setUser} />}\n            />\n            <PrivateRoute exact path=\"/\" user={user} component={Main} redirectPath=\"/login\"/>\n          </Switch>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}