{"version":3,"sources":["components/PlantDetail/close_g.svg","components/GmapsPlaces/close_g.svg","components/Calendar/close_w.svg","globalStyles/colors.js","sharedComponents/StyledCloseBtn.js","sharedComponents/ProfileBtn.js","sharedComponents/PageTitle.js","services/AuthService.js","components/Login/StyledLogin.js","sharedComponents/Leaf.js","components/Login/Login.js","components/Signup/StyledSignup.js","components/Signup/Signup.js","services/PlantService.js","services/TaskService.js","services/UserService.js","services/GeoService.js","globalStyles/utils.js","components/PlantCard/StyledPlantCard.js","sharedComponents/StyledButton.js","sharedComponents/ModalButtons.js","components/Main/Main.js","sharedComponents/ImageLoader.js","sharedComponents/LoadingOverlay.js","components/Profile/Profile.js","services/TrefService.js","sharedComponents/FormRange.js","sharedComponents/MutableTextInput.js","components/GmapsMap/GmapsMap.jsx","components/PlantDetail/PlantDetail.js","guards/PrivateRoute.js","components/GmapsPlaces/GmapsPlaces.jsx","components/UserDetail/UserDetail.js","services/CalendarService.js","components/CalendarDay/CalendarDay.js","components/Calendar/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","colors","green","white","red","blue","gray","StyledButton","styled","button","props","btnColor","CloseBtn","logout","onClick","ProfileBtn","to","pathname","HeaderWrapper","div","controls","LogoImg","img","ControlsWrapper","PageTitle","logoutHandler","src","alt","AuthService","getTrefleToken","clientUrl","instance","post","url","then","res","Promise","resolve","data","catch","error","console","signup","user","login","loggedInUser","get","upload","picture","this","axios","create","baseURL","process","withCredentials","StyledLogin","StyledInput","input","StyledLabel","label","Login","username","password","handleChange","placeholder","htmlFor","type","name","value","onChange","className","LeafIma","LeafLogo","state","e","target","setState","handleLogin","setUser","history","apiToken","preventDefault","authService","token","log","push","Leaf","onSubmit","Component","StyledSignup","StyledError","p","Signup","passwordR","SignUp","handleSignUp","Fragment","handleLogout","PlantService","getPlantById","plantId","getUserPlants","userId","createPlant","plant","deletePlant","delete","updatePlant","put","uploadPlantImage","TaskService","createTasks","taskArr","createTask","task","updateTask","deleteTask","UserService","getUsers","getUserByIdDeep","id","getUserByIdShallow","updateUser","updateUserProfile","deleteUserPlant","payload","uploadUserImage","GeoService","calcDistance","lat1","lng1","lat2","lng2","dLat","toRad","dLng","a","Math","sin","cos","atan2","sqrt","PI","getUserLocationArr","locations","radius","resultArr","length","currentLoc","pop","nextLoc","capitalize","word","split","map","i","toUpperCase","join","CardContainer","PlantPortrait","PlantInfo","ControlButtons","PlantCard","common_name","flavour","GenericBtn","Button","clicked","BtnWrapper","Buttons","updateHandler","sourceUserId","goBackHandler","Main","updatePlants","plantService","plants","message","find","userService","newUser","userCoords","forEach","location","coordinates","geoService","reduce","acc","taskService","key","ModalButtons","InputField","CustomLabel","size","Loader","handleUpload","LoadingOverlay","Profile","uploadData","FormData","append","files","loadingFlag","secure_url","handleUpdate","email","current_pass","new_pass","repeat_pass","ImageLoader","TrefService","getByName","getById","Label","RangeInput","RangeWrapper","NumberBoard","labelText","forHtml","step","min","max","StaticField","Input","MyMapComponent","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","lifecycle","componentDidMount","refs","position","onMarkerMounted","ref","marker","onPositionChanged","getPosition","lat","lng","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","isMarkerShown","draggable","icon","width","anchor","x","y","scaledSize","MyParentComponentWrapper","React","PureComponent","FormWrapper","form","ButtonsWrapper","PlantDetail","handleLocChange","coords","toggleInfo","infoToggle","toggleMap","mapToggle","tasks","filter","sort","b","day_interval","waterInterval","fertilizerInterval","trefService","apiData","scientific_name","soilsArr","Object","entries","main_species","soils_adaptation","pair","temperature_minimun","round","growth","temperature_minimum","deg_c","shade_tolerance","year_rain_range","precipitation_minimum","cm","precipitation_maximum","ph_range","ph_minimum","ph_maximum","fertilizer_req","fertility_requirement","perennial","duration","images","updatePlantFromApi","begin_day","Date","getPlant","params","match","deleteHandle","goBack","doCreate","currentPosition","newTasks","newPlant","createdPlant","navigator","geolocation","getCurrentPosition","latitude","longitude","createNewPlant","backgroundImage","InnerBgImg","MutableTextInput","FormRange","PrivateRoute","component","redirectPath","rest","render","mapStyles","GmapsMap","displayMarkers","idx","text","users","getAside","flat","google","zoom","initialCenter","fullscreenControl","GoogleApiWrapper","apiKey","UserDetail","splice","CalendarService","getDaysWithTask","initialDay","currentDay","taskInterval","numberOfDays","daysWithTask","initialDate","moment","currentDate","isValid","recurrence","recur","add","every","fromDate","all","getForecast","getIcon","iconCode","CalendarDay","daySlug","plantList","weatherIcon","Calendar","getDaysArray","days","firstDay","date","tasksArr","arr","calendarService","day","emptyCalendar","forecast","valid_date","weather","code","daysList","format","App","fetchUser","response","flag","exact","path","GoogleMap","Boolean","window","hostname","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,wdCQ5BC,EARA,CACXC,MAAK,UACLC,MAAK,UACLC,IAAG,UACHC,KAAK,UACLC,KAAK,W,8UCDT,IAAMC,EAAeC,IAAOC,OAAV,IAEUR,EAAOC,OACP,SAAAQ,GAAK,MAAuB,UAAnBA,EAAMC,SAAuB,6BAA8B,+BAgBjFC,EAPE,SAAAF,GAAU,IACfC,EAAoBD,EAApBC,SAASE,EAAWH,EAAXG,OACjB,OACQ,kBAACN,EAAD,CAAcI,SAAUA,EAAUG,QAASD,K,qVCdvD,IAAMN,EAAeC,IAAOC,OAAV,IAEUR,EAAOC,OACP,SAAAQ,GAAK,MAAuB,UAAnBA,EAAMC,SAAuB,4BAA6B,8BAkBhFI,EATI,SAAAL,GAAU,IACjBC,EAAaD,EAAbC,SACR,OACI,kBAAC,IAAD,CAAMK,GAAI,CAACC,SAAS,aAChB,kBAAC,EAAD,CAAcN,SAAUA,M,6YChBpC,IAAMO,EAAgBV,IAAOW,IAAV,KAGE,SAAAT,GAAK,OAAIA,EAAMU,SAAW,gBAAkB,YAK3DC,EAAUb,IAAOc,IAAV,KAKPC,EAAkBf,IAAOW,IAAV,KACV,SAAAT,GAAK,OAAIA,EAAMU,SAAW,OAAS,UAgB/BI,EAZG,SAAAd,GAAU,IACnBU,EAA0BV,EAA1BU,SAASK,EAAiBf,EAAjBe,cAChB,OACE,kBAACP,EAAD,CAAeE,SAAUA,GACvB,kBAACC,EAAD,CAASK,IAAI,6BAA6BC,IAAI,oBAC9C,kBAACJ,EAAD,CAAiBH,SAAUA,GACzB,kBAAC,EAAD,CAAUT,SAAU,QAASE,OAAQY,IACrC,kBAAC,EAAD,CAAYd,SAAU,a,iBCmBfiB,EA9Cb,aAAe,IAAD,gCAOdC,eAAiB,SAAAC,GACf,OAAO,EAAKC,SAASC,KAAK,QAAS,CAACC,IAAIH,IACvCI,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAVlB,KAadE,OAAS,SAACC,GACR,OAAO,EAAKZ,SAASC,KAAK,UAAWW,GACpCT,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAhBlB,KAmBdI,MAAQ,SAACD,GACP,OAAO,EAAKZ,SAASC,KAAK,SAAUW,GACnCT,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAtBlB,KAyBdK,aAAe,WACb,OAAO,EAAKd,SAASe,IAAI,aACxBZ,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OA5BlB,KA+Bd3B,OAAS,WACP,OAAO,EAAKkB,SAASC,KAAK,WACzBE,MAAK,SAAAC,GACJ,OAAOC,QAAQC,QAAQF,EAAIG,SAE5BC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OApClB,KAuCdO,OAAS,SAACC,GACR,OAAO,EAAKjB,SAASC,KAAK,UAAWgB,GACpCd,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAzC9BS,KAAKlB,SAAWmB,IAAMC,OAAO,CAC3BC,QAAQ,GAAD,OAAKC,uCAAL,SACPC,iBAAiB,K,2rCCDvB,IAAMC,EAAc/C,IAAOW,IAAV,IAYGlB,EAAOE,MACZF,EAAOC,MAaFD,EAAOC,MACDD,EAAOE,MAClBF,EAAOE,OAKhBqD,EAAchD,IAAOiD,MAAV,IACNxD,EAAOK,KAWLL,EAAOK,MAIdoD,EAAclD,IAAOmD,MAAV,IAIN1D,EAAOE,OAmCHyD,EA9BD,SAAAlD,GAAU,IACdmD,EAAkDnD,EAAlDmD,SAAUC,EAAwCpD,EAAxCoD,SAAUC,EAA8BrD,EAA9BqD,aAAcC,EAAgBtD,EAAhBsD,YAC1C,OACE,kBAACT,EAAD,KACE,kBAACG,EAAD,CAAaO,QAAQ,YAArB,eACA,kBAACT,EAAD,CACEU,KAAK,OACLC,KAAK,WACLC,MAAOP,EACPQ,SAAUN,EACVC,YAAaA,IAEf,kBAACN,EAAD,CAAaO,QAAQ,YAArB,cACA,kBAACT,EAAD,CACEU,KAAK,WACLC,KAAK,WACLC,MAAON,EACPO,SAAUN,IAEZ,yBAAKO,UAAW,cACd,4BAAQA,UAAW,YAAaJ,KAAK,UAArC,SAGA,kBAAC,IAAD,CAAMlD,GAAI,CAACC,SAAS,YAAY,gD,qHCnFxC,IAAMsD,EAAS/D,IAAOc,IAAT,KAQEkD,EAFE,kBAAO,kBAACD,EAAD,CAAS7C,IAAI,sBAAsBC,IAAI,gBCD1CiC,E,YACnB,WAAYlD,GAAQ,IAAD,8BACjB,4CAAMA,KAIR+D,MAAQ,CACNZ,SAAU,MACVC,SAAU,KAPO,EASnBC,aAAe,SAACW,GAAO,IAAD,EACIA,EAAEC,OAAlBR,EADY,EACZA,KAAMC,EADM,EACNA,MACd,EAAKQ,SAAL,eAAkB,EAAKH,MAAvB,eAA+BN,EAAMC,MAXpB,EAanBS,YAAc,SAACH,GAAO,IAAD,EACU,EAAKhE,MAA1BoE,EADW,EACXA,QAASC,EADE,EACFA,QACbC,EAAW,KACfN,EAAEO,iBACF,EAAKC,YAAYrD,eAAewB,oCAC/BnB,MAAK,SAAAiD,GAEJ,OADAH,EAAWG,EACJ,EAAKD,YAAYtC,MAAM,EAAK6B,UAEpCvC,MACC,SAACS,GACCA,EAAKwC,MAAQH,EACbvC,QAAQ2C,IAAIzC,GACZmC,EAAQnC,GACRoC,EAAQM,KAAK,YAEf,SAAC7C,GACCC,QAAQD,MAAMA,OA5BlB,EAAK0C,YAAc,IAAItD,EAFN,E,sEAmCT,IAAD,EACwBqB,KAAKwB,MAA5BZ,EADD,EACCA,SAAUC,EADX,EACWA,SAClB,OACE,yBAAKQ,UAAU,iBACb,kBAAC,EAAD,CAAWlD,UAAU,IACrB,kBAACkE,EAAD,MACA,0BAAMC,SAAUtC,KAAK4B,aACnB,kBAAC,EAAD,CAAahB,SAAUA,EAAUC,SAAUA,EAAUC,aAAcd,KAAKc,aAAcc,YAAa5B,KAAK4B,YAAab,YAAa,oB,GA3CzGwB,a,4hDCHnC,IAAMC,EAAejF,IAAOW,IAAV,IAYElB,EAAOE,MACZF,EAAOC,MAaFD,EAAOC,MACDD,EAAOE,MAClBF,EAAOE,MAIFF,EAAOG,IACDH,EAAOE,MAClBF,EAAOE,OAKhBqD,EAAchD,IAAOiD,MAAV,IACNxD,EAAOK,KAWLL,EAAOK,MAIdoD,EAAclD,IAAOmD,MAAV,IAIN1D,EAAOE,OAKZuF,EAAclF,IAAOmF,EAAV,IAKN1F,EAAOE,MACIF,EAAOG,KA4CdwF,GAvCA,SAAAlF,GAAU,IACfmD,EAAoEnD,EAApEmD,SAAUC,EAA0DpD,EAA1DoD,SAAU+B,EAAgDnF,EAAhDmF,UAAW9B,EAAqCrD,EAArCqD,aAAcC,EAAuBtD,EAAvBsD,YAAaxB,EAAU9B,EAAV8B,MAClE,OACE,kBAACiD,EAAD,KACE,kBAAC,EAAD,CAAaxB,QAAQ,YAArB,mBACA,kBAAC,EAAD,CACEC,KAAK,OACLC,KAAK,WACLC,MAAOP,EACPQ,SAAUN,EACVC,YAAaA,IAEf,kBAAC,EAAD,CAAaC,QAAQ,YAArB,kBACA,kBAAC,EAAD,CACEC,KAAK,WACLC,KAAK,WACLC,MAAON,EACPO,SAAUN,IAEZ,kBAAC,EAAD,CAAaE,QAAQ,aAArB,qBACA,kBAAC,EAAD,CACEC,KAAK,WACLC,KAAK,YACLC,MAAOyB,EACPxB,SAAUN,IAEXvB,GAAS,kBAACkD,EAAD,KAAclD,GACxB,yBAAK8B,UAAW,cACd,4BAAQA,UAAW,YAAaJ,KAAK,UAArC,eAGA,kBAAC,IAAD,CAAMlD,GAAI,CAACC,SAAS,WAClB,4BAAQqD,UAAW,WAAnB,cC1GWwB,G,YACnB,WAAYpF,GAAQ,IAAD,8BACjB,4CAAMA,KAIR+D,MAAQ,CACNZ,SAAU,GACVC,SAAU,GACV+B,UAAW,GACXrD,MAAO,IATU,EAYnBuB,aAAe,SAAAW,GAAM,IAAD,EACMA,EAAEC,OAAlBR,EADU,EACVA,KAAMC,EADI,EACJA,MACd,EAAKQ,SAAL,eAAmB,EAAKH,MAAxB,eAAgCN,EAAOC,MAdtB,EAgBnB2B,aAAe,SAAArB,GAEb,GADAA,EAAEO,iBACE,EAAKR,MAAMX,WAAa,EAAKW,MAAMoB,UAAW,CAAC,IAAD,EACnB,EAAKnF,MAA1BqE,EADwC,EACxCA,QAASD,EAD+B,EAC/BA,QACjB,EAAKI,YAAYxC,OAAO,EAAK+B,OAAOvC,MAClC,SAAAS,GACEF,QAAQ2C,IAAIzC,GACZmC,EAAQnC,GACRoC,EAAQM,KAAK,YAEf,SAAA7C,GACE,EAAKoC,SAAL,eAAmB,EAAKH,MAAxB,CAA+BjC,MAAOA,aAI1C,EAAKoC,SAAL,eAAmB,EAAKH,MAAxB,CAA+BjC,MAAO,2BA7BxC,EAAK0C,YAAc,IAAItD,EAFN,E,sEAmCT,IAAD,EAC0CqB,KAAKwB,MAA9CZ,EADD,EACCA,SAAUC,EADX,EACWA,SAAU+B,EADrB,EACqBA,UAAWrD,EADhC,EACgCA,MACvC,OACE,kBAAC,IAAMwD,SAAP,KACE,kBAAC,EAAD,CAAWtE,IAAI,4BAA4BC,IAAI,kBAAkBF,cAAewB,KAAKvC,MAAMuF,eAC3F,0BAAM3B,UAAU,eAAeiB,SAAUtC,KAAK8C,cAC5C,kBAAC,GAAD,CACElC,SAAUA,EACVC,SAAUA,EACV+B,UAAWA,EACX9B,aAAcd,KAAKc,aACnBC,YAAa,YACbxB,MAAOA,U,GAhDiBgD,aC+CrBU,I,OAlDb,aAAe,IAAD,gCAOdC,aAAe,SAAAC,GACb,OAAO,EAAKrE,SACTe,IADI,WACIsD,IACRlE,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAXpB,KAcd6D,cAAgB,SAAAC,GACd,OAAO,EAAKvE,SACTe,IADI,gBACSwD,IACbpE,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAlBpB,KAqBd+D,YAAc,SAAAC,GACZ,OAAO,EAAKzE,SACTC,KAAK,UAAWwE,GAChBtE,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAzBpB,KA4BdiE,YAAc,SAAAL,GACZ,OAAO,EAAKrE,SACT2E,OADI,kBACcN,IAClBlE,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAhCpB,KAmCdmE,YAAc,SAAAH,GACZ,OAAO,EAAKzE,SACT6E,IADI,UACWJ,GACftE,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAvCpB,KA0CdqE,iBAAmB,SAAA7D,GACjB,OAAO,EAAKjB,SACTC,KAAK,UAAWgB,GAChBd,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OA7ChCS,KAAKlB,SAAWmB,IAAMC,OAAO,CAC3BC,QAAQ,GAAD,OAAKC,uCAAL,WACPC,iBAAiB,MCkCRwD,GArCb,aAAe,IAAD,gCAOdC,YAAc,SAAAC,GACZ,OAAO,EAAKjF,SACTC,KAAK,eAAgBgF,GACrB9E,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAXpB,KAcdyE,WAAa,SAACb,EAASc,GAErB,OADAA,EAAKd,QAAUA,EACR,EAAKrE,SACTC,KAAK,UAAWkF,GAChBhF,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAnBpB,KAsBd2E,WAAa,SAACD,GACZ,OAAO,EAAKnF,SACT6E,IAAI,UAAWM,GACfhF,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OA1BpB,KA6Bd4E,WAAa,SAACF,GACZ,OAAO,EAAKnF,SACT6E,IAAI,UAAWM,GACfhF,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAhChCS,KAAKlB,SAAWmB,IAAMC,OAAO,CAC3BC,QAAQ,GAAD,OAAKC,uCAAL,UACPC,iBAAiB,KCgDR+D,GAnDb,aAAe,IAAD,gCAOdC,SAAW,WACT,OAAO,EAAKvF,SAASe,IAAd,QACNZ,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAVlB,KAad+E,gBAAkB,SAACC,GACjB,OAAO,EAAKzF,SAASe,IAAd,gBAA2B0E,IACjCtF,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAhBlB,KAmBdiF,mBAAqB,SAACD,GACpB,OAAO,EAAKzF,SAASe,IAAd,mBAA8B0E,IACpCtF,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAtBlB,KAyBdkF,WAAa,SAAC/E,GACZ,OAAO,EAAKZ,SAAS6E,IAAI,UAAUjE,GAClCT,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OA5BlB,KA+BdmF,kBAAoB,SAAChF,GACnB,OAAO,EAAKZ,SAAS6E,IAAI,kBAAkBjE,GAC1CT,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAlClB,KAqCdoF,gBAAiB,SAACjF,EAAM6D,GACtB,IAAIqB,EAAU,CAAClF,KAAKA,EAAM6D,MAAOA,GACjC,OAAO,EAAKzE,SAAS6E,IAAI,eAAeiB,GACvC3F,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAzClB,KA4CdsF,gBAAkB,SAAC9E,GACjB,OAAO,EAAKjB,SAASC,KAAK,UAAWgB,GACpCd,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OA9C9BS,KAAKlB,SAAWmB,IAAMC,OAAO,CAC3BC,QAAQ,GAAD,OAAKC,uCAAL,UACPC,iBAAiB,KCkCRyE,G,iDAvCXC,aAAe,SAACC,EAAMC,EAAMC,EAAMC,GAC9B,IACIC,EAAO,EAAKC,MAAMH,EAAOF,GACzBM,EAAO,EAAKD,MAAMF,EAAOF,GAC7BD,EAAO,EAAKK,MAAML,GAClBE,EAAO,EAAKG,MAAMH,GAElB,IAAIK,EACFC,KAAKC,IAAIL,EAAO,GAAKI,KAAKC,IAAIL,EAAO,GACrCI,KAAKC,IAAIH,EAAO,GAAKE,KAAKC,IAAIH,EAAO,GAAKE,KAAKE,IAAIV,GAAQQ,KAAKE,IAAIR,GAGtE,OAXU,MASF,EAAIM,KAAKG,MAAMH,KAAKI,KAAKL,GAAIC,KAAKI,KAAK,EAAIL,M,KAKvDF,MAAQ,SAAClE,GACL,OAAQA,EAAQqE,KAAKK,GAAM,K,KAG/BC,mBAAqB,SAACC,GAA8B,IAAnBC,EAAkB,uDAAT,IAClCC,EAAY,GAChB,GAAIF,EAAUG,OAAS,EAAG,CACxB,IAAIC,EAAaJ,EAAUK,MAE3B,IADAH,EAAU7D,KAAK+D,GACRJ,EAAUG,OAAS,GAAG,CAC3B,IAAIG,EAAUN,EAAUK,MAEtB,EAAKrB,aAAaoB,EAAW,GAAIA,EAAW,GAAIE,EAAQ,GAAIA,EAAQ,IACpEL,IAEAC,EAAU7D,KAAKiE,GACfF,EAAaE,IAInB,OAAOJ,ICnCAK,I,OADI,SAACC,GAAD,OAAUA,EAAKC,MAAM,IAAIC,KAAI,SAAChF,EAAEiF,GAAH,OAAW,IAAJA,EAAMjF,EAAEkF,cAAclF,KAAGmF,KAAK,M,mhCCOrF,IAAMC,GAAgBtJ,IAAOW,IAAV,MAMb4I,GAAgBvJ,IAAOc,IAAV,KAIGrB,EAAOE,OAIvB6J,GAAYxJ,IAAOW,IAAV,KACJlB,EAAOE,OAaZ8J,GAAiBzJ,IAAOW,IAAV,KAIIlB,EAAOC,OAmEhBgK,GAlDG,SAAAxJ,GAAU,IAAD,EAC+BA,EAAM8F,MAAtDgB,EADiB,EACjBA,GAAIxE,EADa,EACbA,QAASmB,EADI,EACJA,KAAMgG,EADF,EACEA,YAAa1D,EADf,EACeA,YACxC,OACE,kBAACqD,GAAD,KACE,kBAAC,IAAD,CACE9I,GAAI,CACFC,SAAS,iBAAD,OAAmBuG,GAC3B/C,MAAO,CACL2F,QAAS,cAIb,kBAACL,GAAD,CAAevC,GAAIA,EAAI9F,IAAKsB,KAE9B,yBAAKsB,UAAU,gBACb,kBAAC,IAAD,CACEtD,GAAI,CACFC,SAAS,iBAAD,OAAmBuG,GAC3B/C,MAAO,CACL2F,QAAS,cAIb,kBAACJ,GAAD,CAAWxC,GAAIA,GACb,4BAAK+B,GAAWpF,IAChB,2BAAIoF,GAAWY,MAGnB,kBAACF,GAAD,KACE,kBAAC,IAAD,CACEjJ,GAAI,CACFC,SAAS,iBAAD,OAAmBuG,GAC3B/C,MAAO,CACL2F,QAAS,YAIb,4BAAQ9F,UAAU,cAEpB,4BACEA,UAAU,aACVkD,GAAIA,EACJ1G,QAAS,SAAA4D,GAAC,OAAI+B,EAAY/B,U,4TC9FtC,IAAM2F,GAAa7J,IAAOC,OAAV,KAEMR,EAAOC,OACH,SAAAQ,GAAK,OAAIA,EAAMY,OAmB1BgJ,GATA,SAAA5J,GAAU,IACfY,EAAiBZ,EAAjBY,IAAKiJ,EAAY7J,EAAZ6J,QACb,OACE,kBAAC,IAAMvE,SAAP,KACI,kBAACqE,GAAD,CAAY/I,IAAKA,EAAKR,QAAS,SAAA4D,GAAC,OAAE6F,EAAQ7F,Q,sxBCflD,IAAM2F,GAAa7J,IAAOC,OAAV,KAELR,EAAOE,OAaZqK,GAAahK,IAAOW,IAAV,KAMElB,EAAOC,MACDD,EAAOE,MAGbF,EAAOG,IAGPH,EAAOE,MACZF,EAAOC,OA8GLuK,GArGC,SAAA/J,GAAU,IAChBgK,EAAwDhK,EAAxDgK,cAAeN,EAAyC1J,EAAzC0J,QAASO,EAAgCjK,EAAhCiK,aAAcC,EAAkBlK,EAAlBkK,cAC9C,OACE,kBAACJ,GAAD,KACI,WACA,OAAQJ,GACN,IAAK,WACH,OACE,kBAAC,IAAMpE,SAAP,KACG2E,EACC,kBAAC,GAAD,CACErG,UAAU,UACVxD,QAAS,SAAA4D,GAAC,OAAIkG,EAAclG,EAAGiG,KAFjC,WAOA,kBAAC,IAAD,CAAM3J,GAAI,CAAEC,SAAS,UACnB,kBAAC,GAAD,CAAYqD,UAAU,WAAtB,aAKV,IAAK,SACH,OACE,kBAAC,IAAM0B,SAAP,KACE,kBAAC,IAAD,CAAMhF,GAAI,CAAEC,SAAS,UACnB,kBAAC,GAAD,CAAYqD,UAAU,WAAtB,WAEF,kBAAC,GAAD,CACEA,UAAU,YACVxD,QAAS,SAAA4D,GAAC,OAAIgG,EAAchG,KAF9B,WAQN,IAAK,SACH,OACE,kBAAC,IAAMsB,SAAP,KACE,kBAAC,GAAD,CACE1B,UAAU,YACVxD,QAAS,SAAA4D,GAAC,OAAIgG,EAAchG,KAF9B,WAQN,IAAK,OACH,OACE,kBAAC,IAAMsB,SAAP,KACE,kBAAC,IAAD,CAAMhF,GAAI,CAAEC,SAAS,cACnB,kBAAC,GAAD,CACEK,IAAK,2BACLiJ,QAAS,iBAAM,OAInB,kBAAC,IAAD,CACEvJ,GAAI,CACFC,SAAS,aACTwD,MAAO,CACL2F,QAAS,YAIb,kBAAC,GAAD,CAAY9F,UAAU,WAAtB,MAGF,kBAAC,IAAD,CACEtD,GAAI,CACFC,SAAS,gBAGX,kBAAC,GAAD,CACEK,IAAK,sBACLiJ,QAAS,iBAAM,QAKzB,QACE,OACE,kBAAC,IAAMvE,SAAP,KACE,kBAAC,IAAD,CAAMhF,GAAI,CAAEC,SAAS,UACnB,kBAAC,GAAD,CAAYqD,UAAU,WAAtB,WAEF,kBAAC,GAAD,CACEA,UAAU,YACVxD,QAAS,SAAA4D,GAAC,OAAIgG,EAAchG,KAF9B,YAnFR,KCtCamG,G,YACnB,WAAYnK,GAAQ,IAAD,8BACjB,4CAAMA,KAURoK,aAAe,WACb,EAAKC,aAAa1E,cAAc,EAAK3F,MAAMmC,aAAa2E,IAAItF,MAC1D,SAAA8I,GACE,EAAKpG,SAAL,eAAmB,EAAKH,MAAxB,CAA+BuG,eAEjC,SAAAxI,GAAU,IACAyI,EAAYzI,EAAZyI,QACRxI,QAAQD,MAAMyI,OAlBD,EAuBnBxE,YAAc,SAAA/B,GACZA,EAAEO,iBACF,IAAItC,EAAI,eAAQ,EAAKjC,MAAMmC,cACvB2D,EAAQ,EAAK/B,MAAMuG,OAAOE,MAAK,SAAA1E,GAAK,OAAIA,EAAMgB,KAAO9C,EAAEC,OAAO6C,MAClE,EAAKuD,aACFtE,YAAYD,EAAMgB,IAClBtF,MAAK,kBAAM,EAAKiJ,YAAYvD,gBAAgBjF,EAAM6D,MAClDtE,MAAK,kBAAM,EAAKiJ,YAAY5D,gBAAgB5E,EAAK6E,OACjDtF,MAAK,SAAAkJ,GACJ,IAAIC,EAAa,GAYjB,OAXAD,EAAQJ,OAAOM,SAAQ,SAAA9E,GAAK,OAC1B6E,EAAWhG,KAAKmB,EAAM+E,SAASC,gBAEjCJ,EAAQpC,UAAY,EAAKyC,WAAW1C,mBAClCsC,EACA,MAEFD,EAAQJ,OAASI,EAAQJ,OAAOU,QAAO,SAACC,EAAKnF,GAE3C,OADAmF,EAAItG,KAAKmB,EAAMgB,IACRmE,IACN,IACI,EAAKR,YAAYzD,WAAW0D,MAEpClJ,MAAK,kBAAM,EAAK4I,kBAChBvI,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OA7ChC,EAAKuI,aAAe,IAAIA,GACxB,EAAKa,YAAc,IAAIA,GACvB,EAAKT,YAAc,IAAIA,GACvB,EAAKM,WAAa,IAAIA,GACtB,EAAKhH,MAAQ,CACXuG,OAAQ,IAPO,E,iFAmDjB/H,KAAK6H,iB,+BAGG,IAAD,OACP,OACE,kBAAC,IAAM9E,SAAP,KACE,yBAAK1B,UAAU,yBACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CACE7C,cAAewB,KAAKvC,MAAMuF,aAC1B7E,UAAU,KAGd,yBAAKkD,UAAU,iBACZrB,KAAKwB,MAAMuG,OAAOtB,KAAI,SAAAlD,GAAK,OAC1B,kBAAC,GAAD,CACEqF,IAAKrF,EAAMgB,GACXhB,MAAK,eAAOA,EAAP,CAAcC,YAAa,EAAKA,oBAI3C,yBAAKnC,UAAU,uBACb,kBAACwH,GAAD,CAAc1B,QAAQ,gB,GA1EA5E,a,uXCNlC,IAAMuG,GAAavL,IAAOiD,MAAV,MAIVuI,GAAcxL,IAAOmD,MAAV,MAIXoG,GAAgBvJ,IAAOc,IAAV,MACR,SAAAZ,GAAK,OAAIA,EAAMuL,KAAOvL,EAAMuL,KAAO,SAClC,SAAAvL,GAAK,OAAIA,EAAMuL,KAAOvL,EAAMuL,KAAO,QAEzBhM,EAAOE,OAsBd+L,GAlBA,SAAAxL,GAAU,IACfsC,EAAyCtC,EAAzCsC,QAASmJ,EAAgCzL,EAAhCyL,aAAc/B,EAAkB1J,EAAlB0J,QAAS6B,EAASvL,EAATuL,KACxC,OACE,kBAAC,IAAMjG,SAAP,KACe,aAAZoE,EACC,kBAAC,IAAMpE,SAAP,KACE,kBAACgG,GAAD,CAAa/H,QAAQ,cAAcK,UAAU,sBAC3C,kBAAC,GAAD,CAAe5C,IAAKsB,KAEtB,kBAAC+I,GAAD,CAAYvE,GAAG,cAActD,KAAK,OAAOG,SAAU8H,KAGrD,kBAAC,GAAD,CAAe7H,UAAU,YAAY5C,IAAKsB,EAASiJ,KAAMA,M,6TC9BjE,IAYeG,GAZQ5L,IAAOW,IAAV,MCMCkL,G,YACnB,WAAY3L,GAAQ,IAAD,8BACjB,4CAAMA,KAYRqD,aAAe,SAAAW,GAAM,IAAD,EACMA,EAAEC,OAAlBR,EADU,EACVA,KAAMC,EADI,EACJA,MACd,EAAKQ,SAAL,eAAmB,EAAKH,MAAxB,eAAgCN,EAAOC,MAftB,EAkBnB+H,aAAe,SAAAzH,GACb,IAAM4H,EAAa,IAAIC,SACvBD,EAAWE,OAAO,UAAW9H,EAAEC,OAAO8H,MAAM,IAE5C,EAAK7H,SAAL,eAAmB,EAAKH,MAAxB,CAA+BiI,aAAa,KAC5C,EAAKvB,YAAYrD,gBAAgBwE,GAAYpK,MAC3C,SAAAI,GACE,EAAKsC,SAAL,eACK,EAAKH,MADV,CAEE9B,KAAK,eAAM,EAAK8B,MAAM9B,KAAlB,CAAwBK,QAASV,EAAKqK,aAC1CD,aAAa,QAGjB,SAAAlK,GACEC,QAAQD,MAAMA,OAhCD,EAqCnBoK,aAAe,SAAAlI,GAAM,IACb/B,EAAS,EAAK8B,MAAd9B,KACN+B,EAAEO,iBAFgB,IAGVF,EAAY,EAAKrE,MAAjBqE,QACRpC,EAAI,eACC,EAAK8B,MAAM9B,KADZ,CAEFkK,MAAO,EAAKpI,MAAMoI,MAClBC,aAAc,EAAKrI,MAAMqI,aACzBC,SAAU,EAAKtI,MAAMsI,SACrBC,YAAa,EAAKvI,MAAMuI,cAE1B,EAAK7B,YAAYxD,kBAAkBhF,GAAMT,MAAK,kBAAM6C,EAAQM,KAAK,aA9CjE,EAAK8F,YAAc,IAAIA,GACvB,EAAK1G,MAAQ,CACX9B,KAAM,KACN+J,aAAa,EACbG,MAAO,GACPC,aAAc,GACdC,SAAU,GACVC,YAAa,IATE,E,iFAmDE,IAAD,OAClB/J,KAAKkI,YACF1D,mBAAmBxE,KAAKvC,MAAMmC,aAAa2E,IAC3CtF,MAAK,SAAAS,GACJ,EAAKiC,SAAL,eACK,EAAKH,MADV,CAEE9B,KAAK,eAAMA,GACXkK,MAAOlK,EAAKkK,MACZH,aAAa,U,+BAIX,IACA/J,EAASM,KAAKwB,MAAd9B,KACR,OACE,kBAAC,IAAMqD,SAAP,KACG/C,KAAKwB,MAAMiI,YACV,kBAAC,GAAD,MAEA/J,GACE,kBAAC,IAAMqD,SAAP,KACE,4BAAKuD,GAAW5G,EAAKkB,WACrB,8BACE,kBAACoJ,GAAD,CACEjK,QAASL,EAAKK,QACdmJ,aAAclJ,KAAKkJ,aACnB/B,QAAQ,WAEV,2BAAOnG,QAAQ,SAAf,cACA,2BACEK,UAAU,YACVJ,KAAK,QACLC,KAAK,QACLC,MAAOnB,KAAKwB,MAAMoI,MAClBrF,GAAG,QACHnD,SAAUpB,KAAKc,eAEjB,kEACA,2BAAOE,QAAQ,gBAAf,0BACA,2BACEK,UAAU,cACVJ,KAAK,WACLC,KAAK,eACLqD,GAAG,eACHnD,SAAUpB,KAAKc,eAEjB,2BAAOE,QAAQ,YAAf,sBACA,2BACEK,UAAU,cACVJ,KAAK,WACLC,KAAK,WACLqD,GAAG,WACHnD,SAAUpB,KAAKc,eAEjB,2BAAOE,QAAQ,eAAf,uBACA,2BACEK,UAAU,cACVJ,KAAK,WACLC,KAAK,cACLqD,GAAG,cACHnD,SAAUpB,KAAKc,gBAGnB,kBAAC+H,GAAD,CAAcpB,cAAezH,KAAK2J,qB,GAnHXpH,aCiBtB0H,GAtBb,aAAe,IAAD,gCAOdC,UAAY,SAAChJ,EAAKgB,GAChB,OAAO,EAAKpD,SACTe,IADI,iBACUqC,EADV,wBAC+BhB,IACnCjC,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAXpB,KAcd4K,QAAU,SAAC5F,EAAGrC,GACZ,OAAO,EAAKpD,SACTe,IADI,UACG0E,EADH,kBACerC,IACnBjD,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAjBhCS,KAAKlB,SAAWmB,IAAMC,OAAO,CAC3BC,QAAQ,GAAD,OAAKC,oC,0bCFlB,IAAMgK,GAAQ7M,IAAOmD,MAAV,MAML2J,GAAa9M,IAAOiD,MAAV,MAGV8J,GAAe/M,IAAOW,IAAV,MAMZqM,GAAchN,IAAOmF,EAAV,MA4BFuG,GAxBA,SAAAxL,GAAU,IACfyD,EAA6CzD,EAA7CyD,KAAMJ,EAAuCrD,EAAvCqD,aAAcK,EAAyB1D,EAAzB0D,MAAOoD,EAAkB9G,EAAlB8G,GAAIiG,EAAc/M,EAAd+M,UACvC,OACE,kBAAC,IAAMzH,SAAP,KACE,kBAACqH,GAAD,CAAOK,QAASlG,EAAIrD,KAAMA,GACvBsJ,GAEH,kBAACF,GAAD,KACE,kBAACD,GAAD,CACE9F,GAAIA,EACJtD,KAAK,QACLC,KAAMA,EACNwJ,KAAM,EACNvJ,MAAOA,EACPwJ,IAAK,EACLC,IAAK,GACLxJ,SAAUN,IAEZ,kBAACyJ,GAAD,KAAcpJ,M,ueCnCtB,IAAM2H,GAAavL,IAAOiD,MAAV,KACPxD,EAAOK,KAWHL,EAAOK,MAGdwN,GAActN,IAAOmF,EAAV,KACK1F,EAAOC,OAmBd6N,GAbD,SAAArN,GAAU,IACdyD,EAAwDzD,EAAxDyD,KAAMC,EAAkD1D,EAAlD0D,MAAOL,EAA2CrD,EAA3CqD,aAAcqG,EAA6B1J,EAA7B0J,QAASpG,EAAoBtD,EAApBsD,YAAawD,EAAO9G,EAAP8G,GACzD,OACE,kBAAC,IAAMxB,SAAP,KACe,aAAZoE,EACC,kBAAC0D,GAAD,KAAcvE,GAAWnF,IAEzB,kBAAC,GAAD,CAAYD,KAAMA,EAAMC,MAAOA,EAAOC,SAAUN,EAAcC,YAAaA,EAAawD,GAAIA,GAAM,S,2BCzBpGwG,GAAiBC,aACrBC,aAAU,CACRC,aACE,wHACFC,eAAgB,yBAAKC,MAAO,CAAEC,OAAO,UACrCC,iBAAkB,yBAAKF,MAAO,CAAEC,OAAO,WACvCE,WAAY,yBAAKH,MAAO,CAAEC,OAAO,YAEnCG,aAAU,CACRC,kBADQ,WACa,IAAD,OACZC,EAAO,GAEb1L,KAAK2B,SAAS,CACZgK,SAAU,KACVC,gBAAiB,SAAAC,GACfH,EAAKI,OAASD,GAGhBE,kBAAmB,WACjB,IAAMJ,EAAWD,EAAKI,OAAOE,cAC7B,EAAKvO,MAAMqD,aAAa,CAACmL,IAAIN,EAASM,MAAMC,IAAIP,EAASO,cAKjEC,gBACAC,iBA1BqBpB,EA2BrB,SAAAvN,GAAK,OACL,kBAAC,aAAD,CAAW4O,YAAa,EAAGC,cAAe,CAAEL,IAAKxO,EAAMwO,IAAKC,IAAKzO,EAAMyO,MACpEzO,EAAM8O,eACL,kBAAC,UAAD,CACEZ,SAAU,CAAEM,IAAKxO,EAAMwO,IAAKC,IAAKzO,EAAMyO,KACvCM,WAAW,EACXX,IAAKpO,EAAMmO,gBACXG,kBAAmBtO,EAAMsO,kBACzBU,KAAO,CAAEzN,IAAKvB,EAAMsC,QAASiJ,KAAM,CAAC0D,MAAO,GAAIrB,OAAQ,IAAKsB,OAAQ,CAACC,EAAG,GAAIC,EAAG,IAAKC,WAAY,CAACJ,MAAO,GAAIrB,OAAQ,WAoB7G0B,G,2MAbbvL,MAAQ,CACN+K,eAAe,G,wEAIf,OACE,6BACE,kBAACxB,GAAD,CAAgBkB,IAAKjM,KAAKvC,MAAMwO,IAAKC,IAAKlM,KAAKvC,MAAMyO,IAAKnM,QAASC,KAAKvC,MAAMsC,QAASe,aAAcd,KAAKvC,MAAMqD,aAAcyL,eAAe,S,GAR9GS,IAAMC,e,yUC/B7C,IAAMC,GAAc3P,IAAO4P,KAAV,MAMXC,GAAiB7P,IAAOW,IAAV,MAOCmP,G,YACnB,WAAY5P,GAAQ,IAAD,8BACjB,4CAAMA,KAqBRqD,aAAe,SAAAW,GAAM,IAAD,EACMA,EAAEC,OAAlBR,EADU,EACVA,KAAMC,EADI,EACJA,MACd,EAAKQ,SAAL,eAAmB,EAAKH,MAAxB,eAAgCN,EAAOC,MAxBtB,EA2BnBmM,gBAAkB,SAAAC,GAAW,IACnBtB,EAAasB,EAAbtB,IAAKC,EAAQqB,EAARrB,IACb,EAAKvK,SAAL,eAAmB,EAAKH,MAAxB,CAA+ByK,IAAKA,EAAKC,IAAKA,MA7B7B,EAgCnBsB,WAAa,SAAA/L,GACXA,EAAEO,iBACF,EAAKL,SAAL,eAAmB,EAAKH,MAAxB,CAA+BiM,YAAa,EAAKjM,MAAMiM,eAlCtC,EAqCnBC,UAAY,SAAAjM,GACVA,EAAEO,iBACF,EAAKL,SAAL,eAAmB,EAAKH,MAAxB,CAA+BmM,WAAY,EAAKnM,MAAMmM,cAvCrC,EA0CnBzE,aAAe,SAAAzH,GACb,IAAM4H,EAAa,IAAIC,SACvBD,EAAWE,OAAO,UAAW9H,EAAEC,OAAO8H,MAAM,IAE5C,EAAK7H,SAAL,eAAmB,EAAKH,MAAxB,CAA+BiI,aAAa,KAC5C,EAAK3B,aAAalE,iBAAiByF,GAAYpK,MAC7C,SAAAI,GACE,EAAKsC,SAAL,eACK,EAAKH,MADV,CAEE+B,MAAM,eAAM,EAAK/B,MAAM+B,MAAlB,CAAyBxD,QAASV,EAAKqK,aAC5CD,aAAa,QAGjB,SAAAlK,GACEC,QAAQD,MAAMA,OAxDD,EA6DnBoK,aAAe,SAAAlI,GACbA,EAAEO,iBADgB,IAGVF,EAAY,EAAKrE,MAAjBqE,QACJyB,EAAK,eACJ,EAAK/B,MAAM+B,MADP,CAEP2D,YAAa,EAAK1F,MAAM0F,YACxBhG,KAAM,EAAKM,MAAMN,KACjBoH,SAAU,CACRrH,KAAM,QACNsH,YAAa,CAAC,EAAK/G,MAAMyK,IAAK,EAAKzK,MAAM0K,QAGzC0B,EAAQ,EAAKpM,MAAM+B,MAAMqK,MAAMC,QAAO,SAAA5J,GAAI,OAAIA,KAiD9C2J,EAAM1H,OAAS,GACjB0H,EACGE,MAAK,SAACvI,EAAGwI,GAAJ,OAAUxI,EAAEtE,KAAO8M,EAAE9M,QAC1BoH,SAAQ,SAAApE,GAAI,MACG,UAAdA,EAAKhD,KACAgD,EAAK+J,aAAe,EAAKxM,MAAMyM,cAC/BhK,EAAK+J,aAAe,EAAKxM,MAAM0M,6BAEjC3K,EAAMqK,MAvDU,SAAArK,GACvB,OAAO,EAAK4K,YACTjE,UAAU3G,EAAM2D,YAAa,EAAKzJ,MAAMmC,aAAasC,MAAMA,OAC3DjD,MAAK,SAAAC,GACJ,OAAO,EAAKiP,YAAYhE,QAAQjL,EAAI,GAAGqF,GAAG,EAAK9G,MAAMmC,aAAasC,MAAMA,UAEzEjD,MAAK,SAAAmP,GACJ7K,EAAM8K,gBAAkBD,EAAQC,iBAAmB,GACnD,IAAIC,EAAWC,OAAOC,QAAQJ,EAAQK,aAAaC,kBA+BnD,OA9BAnL,EAAMmL,iBACJJ,EACG7F,QAAO,SAACC,EAAKiG,GAEZ,OADAA,EAAK,IAAMjG,EAAItG,KAAKuM,EAAK,IAClBjG,IACN,IACF9B,KAAK,MAAQ,SAClBrD,EAAMqL,oBACJpJ,KAAKqJ,MAAMT,EAAQK,aAAaK,OAAOC,oBAAoBC,QAC3D,GACFzL,EAAM0L,gBACJb,EAAQK,aAAaK,OAAOG,iBAAmB,GACjD1L,EAAM2L,gBACJ,UAAG1J,KAAKqJ,MACNT,EAAQK,aAAaK,OAAOK,sBAAsBC,IADpD,eAEQ5J,KAAKqJ,MACXT,EAAQK,aAAaK,OAAOO,sBAAsBD,IAHpD,SAIU,EACZ7L,EAAM+L,SACJ,UAAGlB,EAAQK,aAAaK,OAAOS,WAA/B,eAAgDnB,EAAQK,aAAaK,OAAOU,aAC5E,GACFjM,EAAMkM,eACJrB,EAAQK,aAAaK,OAAOY,uBAAyB,GACvDnM,EAAMoM,UAAiC,cAArBvB,EAAQwB,SAEN,wBAAlBrM,EAAMxD,SACNqO,EAAQyB,OAAO3J,OAAS,IAExB3C,EAAMxD,QAAUqO,EAAQyB,OAAO,GAAG7Q,KAE7BG,QAAQC,QAAQmE,MAExBjE,OAAM,SAAAC,GAEL,OADAC,QAAQ2C,IAAI5C,GACLJ,QAAQC,QAAQmE,MAa3BuM,CAAmBvM,GAChBtE,MAAK,SAAAC,GACJ,OAAO,EAAK4I,aAAapE,YAAYxE,MAEtCD,MAAK,WACJ2O,EAAMvF,SAAQ,SAAApE,GAAI,OAAI,EAAK0E,YAAYzE,WAAWD,SAEnDhF,MAAK,WACJ,IAAIS,EAAO,EAAKjC,MAAMmC,aAGtB,OAFAF,EAAKqG,UAAU3D,KAAK,CAAC,EAAKZ,MAAMyK,IAAK,EAAKzK,MAAM0K,MAChDxM,EAAKqG,UAAY,EAAKyC,WAAW1C,mBAAmBpG,EAAKqG,WAClD,EAAKmC,YAAYzD,WAAW/E,MAEpCT,MAAK,kBAAM6C,EAAQM,KAAK,cAE3BwL,EAAQ,CACN,CACEmC,UAAW,IAAIC,KACfhC,aAAc,EAAKxM,MAAMyM,cACzBhN,KAAM,SAER,CACE8O,UAAW,IAAIC,KACfhC,aAAc,EAAKxM,MAAM0M,mBACzBjN,KAAM,eAIV,EAAK0H,YACF7E,YAAY8J,GACZ3O,MAAK,SAAA2O,GAGJ,OAFApO,QAAQ2C,IAAIyL,GACZrK,EAAMqK,MAAQ,CAACA,EAAM,GAAGrJ,GAAIqJ,EAAM,GAAGrJ,IAC9B,EAAKuD,aAAapE,YAAYH,MAEtCtE,MAAK,WACJ,IAAIS,EAAO,EAAKjC,MAAMmC,aAKtB,OAJAJ,QAAQ2C,IAAIzC,GACZA,EAAKqG,UAAU3D,KAAK,CAAC,EAAKZ,MAAMyK,IAAK,EAAKzK,MAAM0K,MAChDxM,EAAKqG,UAAY,EAAKyC,WAAW1C,mBAAmBpG,EAAKqG,WACzDvG,QAAQ2C,IAAIzC,GACL,EAAKwI,YAAYzD,WAAW/E,MAEpCT,MAAK,kBAAM6C,EAAQM,KAAK,cA/KZ,EAmLnB6N,SAAW,WAAO,IAELC,EACP,EAAKzS,MADP0S,MAASD,OAEX,EAAKpI,aAAa5E,aAAagN,EAAO/M,SAASlE,MAC7C,SAAAsE,GACE,EAAK5B,SAAL,eACK,EAAKH,MADV,CAEE+B,QACArC,KAAMqC,EAAMrC,KACZgG,YAAa3D,EAAM2D,YACnBuC,aAAa,EACbwE,cAAe1K,EAAMqK,MAAM,GAAGI,aAC9BE,mBAAoB3K,EAAMqK,MAAM,GAAGI,aACnC/B,IAAK1I,EAAM+E,SAASC,YAAY,GAChC2D,IAAK3I,EAAM+E,SAASC,YAAY,SAGpC,SAAAhJ,GAAU,IACAyI,EAAYzI,EAAZyI,QACRxI,QAAQD,MAAMyI,OAvMD,EAwRnBoI,aAAe,SAAA3O,GACbA,EAAEO,iBACF,IAAItC,EAAI,eAAQ,EAAKjC,MAAMmC,cACvB2D,EAAQ,EAAK/B,MAAM+B,MACvB,EAAKuE,aACFtE,YAAYD,EAAMgB,IAClBtF,MAAK,kBAAM,EAAKiJ,YAAYvD,gBAAgBjF,EAAM6D,MAClDtE,MAAK,kBAAM,EAAKiJ,YAAY5D,gBAAgB5E,EAAK6E,OACjDtF,MAAK,SAAAkJ,GACJ,IAAIC,EAAa,GAYjB,OAXAD,EAAQJ,OAAOM,SAAQ,SAAA9E,GAAK,OAC1B6E,EAAWhG,KAAKmB,EAAM+E,SAASC,gBAEjCJ,EAAQpC,UAAY,EAAKyC,WAAW1C,mBAClCsC,EACA,MAEFD,EAAQJ,OAASI,EAAQJ,OAAOU,QAAO,SAACC,EAAKnF,GAE3C,OADAmF,EAAItG,KAAKmB,EAAMgB,IACRmE,IACN,IACI,EAAKR,YAAYzD,WAAW0D,MAEpClJ,MAAK,kBAAM,EAAKxB,MAAMqE,QAAQM,KAAK,YACnC9C,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAhTf,EAmTnB8Q,OAAS,SAAC5O,EAAG8C,GACX9C,EAAEO,iBACF,EAAKvE,MAAMqE,QAAQM,KAAK,CACtBpE,SAAU,eACVwD,MAAO,CAAE+C,GAAIA,MArTf,EAAKuD,aAAe,IAAIA,GACxB,EAAKI,YAAc,IAAIA,GACvB,EAAKS,YAAc,IAAIA,GACvB,EAAKH,WAAa,IAAIA,GACtB,EAAK2F,YAAc,IAAIA,GACvB,EAAK3M,MAAQ,CACX+B,MAAO,GACPrC,KAAM,GACNgG,YAAa,GACbuC,aAAa,EACbwE,cAAe,EACfC,mBAAoB,EACpBT,YAAY,EACZE,WAAW,EACX1B,IAAK,EACLC,IAAK,EACL/E,QAAS1J,EAAM6K,SAAS9G,MAAM2F,SAlBf,E,4EA4MJzH,GAAO,IAAD,OAGb4Q,EAAW,SAAAC,GACf,IAAIC,EAAW,CACb,CACET,UAAW,IAAIC,KACfhC,aAAc,EACd/M,KAAM,SAER,CACE8O,UAAW,IAAIC,KACfhC,aAAc,EACd/M,KAAM,eAINwP,EAAW,CACbvP,KAAM,GACNgG,YAAa,GACbmH,gBAAiB,GACjBK,iBAAkB,GAClBE,oBAAqB,EACrBK,gBAAiB,GACjBC,gBAAiB,GACjBI,SAAU,GACVG,eAAgB,GAChBE,WAAW,EACX5P,QAAS,sBACT6N,MAAO,GACPtF,SAAU,CACRrH,KAAM,QACNsH,YAAagI,IAIjB,EAAKzI,aACFxE,YAAYmN,GACZxR,MAAK,SAAAsE,GAEJ,OADAkN,EAAWlN,EACJ,EAAKoF,YAAY7E,YAAY0M,MAErCvR,MAAK,SAAA2O,GAEJ,OADA6C,EAAS7C,MAAQ,CAACA,EAAM,GAAGrJ,GAAIqJ,EAAM,GAAGrJ,IACjC,EAAKuD,aAAapE,YAAY+M,MAEtCxR,MAAK,WAIJ,OAHAS,EAAKqG,UAAU3D,KAAKmO,GACpB7Q,EAAKqI,OAAO3F,KAAKqO,EAASlM,IAC1B7E,EAAKqG,UAAY,EAAKyC,WAAW1C,mBAAmBpG,EAAKqG,WAClD,EAAKmC,YAAYzD,WAAW/E,MAEpCT,MAAK,kBAAM,EAAK6I,aAAa5E,aAAauN,EAASlM,OACnDtF,MAAK,SAAAyR,GACJ,EAAK/O,SAAL,eACK,EAAKH,MADV,CAEE+B,MAAM,eAAMmN,GACZxP,KAAMwP,EAAaxP,KACnBgG,YAAawJ,EAAaxJ,YAC1B+E,IAAKyE,EAAapI,SAASC,YAAY,GACvC2D,IAAKwE,EAAapI,SAASC,YAAY,GACvCkB,aAAa,QAGhBnK,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAG9BoR,UAAUC,YACZD,UAAUC,YAAYC,oBAAmB,SAAAlF,GAAQ,OAC/C2E,EAAS,CAAC3E,EAAS4B,OAAOuD,SAAUnF,EAAS4B,OAAOwD,eAGtDT,EAvEgB,CAAC,WAAY,a,0CA+GW,WAAtCtQ,KAAKvC,MAAM6K,SAAS9G,MAAM2F,QAC5BnH,KAAKgR,eAAL,eAAyBhR,KAAKvC,MAAMmC,eAEpCI,KAAKiQ,a,+BAIC,IAAD,EACuCjQ,KAAKwB,MAA3C2F,EADD,EACCA,QAAS5D,EADV,EACUA,MAAOrC,EADjB,EACiBA,KAAMgG,EADvB,EACuBA,YACtBQ,EAAiB1H,KAAKvC,MAAM6K,SAAS9G,MAArCkG,aACR,OACE,kBAAC,IAAM3E,SAAP,KACG/C,KAAKwB,MAAM+B,OACV,kBAAC,IAAMR,SAAP,KACG/C,KAAKwB,MAAMiI,YACV,kBAAC,GAAD,MAEA,kBAAC,IAAM1G,SAAP,KACE,2BACE1B,UAAWrB,KAAKwB,MAAMiM,WAAa,aAAe,GAClD5P,QAASmC,KAAKwN,YAEd,4BAAKlH,GAAW/C,EAAM2D,cACtB,2BAAIZ,GAAW/C,EAAM8K,kBACrB,yBAAKhN,UAAU,OACb,+CACA,2BACGkC,EAAMmL,iBACJjI,KAAI,SAAAlB,GAAC,OAAIe,GAAWf,MACpBqB,KAAK,QAGZ,yBAAKvF,UAAU,OACb,mDACA,2BAAIkC,EAAMqL,oBAAV,UAEF,yBAAKvN,UAAU,OACb,+CACA,2BAAIkC,EAAM0L,kBAEZ,yBAAK5N,UAAU,OACb,yDACA,2BAAIkC,EAAM2L,kBAEZ,yBAAK7N,UAAU,OACb,wCACA,2BAAIkC,EAAM+L,WAEZ,yBAAKjO,UAAU,OACb,gDACA,2BAAIkC,EAAMkM,iBAEZ,yBAAKpO,UAAU,OACb,yCACA,2BAAIkC,EAAMoM,UAAY,MAAQ,QAIjC3P,KAAKwB,MAAMmM,WACV,yBAAKtM,UAAU,eACb,kBAAC,GAAD,CACEA,UAAU,MACV4K,IAAKjM,KAAKwB,MAAMyK,IAChBC,IAAKlM,KAAKwB,MAAM0K,IAChBnM,QAASC,KAAKwB,MAAM+B,MAAMxD,QAC1Be,aAAcd,KAAKsN,kBAErB,4BACEjM,UAAU,UACVxD,QAASmC,KAAK0N,UACdtC,MAAO,CAAE6F,gBAAiB,OAASC,KAAa,QAKtD,kBAAC,EAAD,CACEzS,IAAI,4BACJC,IAAI,kBACJF,cAAewB,KAAKvC,MAAMuF,aAC1B7E,UAAU,IAEZ,kBAAC+O,GAAD,KACE,kBAACiE,GAAD,CACEjQ,KAAK,OACLC,MAAOD,EACPJ,aAAcd,KAAKc,aACnBqG,QAASA,EACTpG,YAAY,eAEd,kBAACiJ,GAAD,CACEjK,QAASwD,EAAMxD,QACfmJ,aAAclJ,KAAKkJ,aACnB/B,QAASA,IAEX,kBAACgK,GAAD,CACE9P,UAAU,WACVH,KAAK,cACLC,MAAO+F,EACPpG,aAAcd,KAAKc,aACnBqG,QAASA,EACTpG,YAAY,kBAEd,kBAACqM,GAAD,KACE,kBAAC,GAAD,CACE/O,IAAI,sBACJiJ,QAAStH,KAAK0N,YAEhB,kBAAC,GAAD,CACErP,IAAI,uBACJiJ,QAAStH,KAAKwN,aAEH,aAAZrG,GACC,kBAAC,GAAD,CACE9I,IAAI,0BACJiJ,QAAStH,KAAKoQ,gBAKpB,kBAACgB,GAAD,CACE7M,GAAI,cACJrD,KAAM,gBACNC,MAAOnB,KAAKwB,MAAMyM,cAClBnN,aACc,aAAZqG,EAAyBnH,KAAKc,aAAe,iBAAM,IAErD0J,UAAU,sBAEZ,kBAAC4G,GAAD,CACE7M,GAAI,aACJrD,KAAM,qBACNC,MAAOnB,KAAKwB,MAAM0M,mBAClBpN,aACc,aAAZqG,EAAyBnH,KAAKc,aAAe,iBAAM,IAErD0J,UAAU,gBAGd,kBAAC3B,GAAD,CACE1B,QAASA,EACTM,cAAezH,KAAK2J,aACpBjC,aAAcA,EACdC,cAAe3H,KAAKqQ,gB,GA3cG9N,a,UC9B1B,SAAS8O,GAAT,GAMX,IALS9O,EAKV,EALD+O,UACA5R,EAIC,EAJDA,KACAlB,EAGC,EAHDA,cACA+S,EAEC,EAFDA,aACGC,EACF,oEACD,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAhU,GACN,OAAIiC,EAEA,kBAAC6C,EAAD,eACE3C,aAAcF,EACdsD,aAAcxE,GACVf,IAID,kBAAC,IAAD,CAAUM,GAAI,CAAEC,SAAUuT,S,kCCdrCG,I,OAAY,CAChBhF,MAAO,OACPrB,OAAQ,SAGJsG,G,YACJ,WAAYlU,GAAQ,IAAD,8BACjB,4CAAMA,KAmBRmU,eAAiB,SAACtJ,EAAUuJ,GAC1B,OACE,kBAAC,UAAD,CACEjJ,IAAKiJ,EACLrF,WAAW,EACXb,SAAU,CACRM,IAAK3D,EAAS2D,IACdC,IAAK5D,EAAS4D,KAEhBO,KAAM,CACJzN,IAAKsJ,EAASvI,QACdiJ,KAAM,CAAE0D,MAAO,GAAIrB,OAAQ,IAC3BsB,OAAQ,CAAEC,EAAG,GAAIC,EAAG,IACpBC,WAAY,CAAEJ,MAAO,GAAIrB,OAAQ,KAEnCyG,KAAMxJ,EAASpH,KACfrD,QAAS,SAAA4D,GAAC,OACR,EAAKhE,MAAMqE,QAAQM,KAAK,CACtBpE,SAAU,eACVwD,MAAO,CAAE+C,GAAI+D,EAAS/D,UArC9B,EAAK2D,YAAc,IAAIA,GACvB,EAAK1G,MAAQ,CACXuQ,MAAO,KACPtI,aAAa,EACbuI,UAAU,GANK,E,iFAUE,IAAD,OAClBhS,KAAKkI,YAAY7D,WAAWpF,MAAK,SAAA8S,GAAK,OACpC,EAAKpQ,SAAL,eACK,EAAKH,MADV,CAEEuQ,MAAOA,EACPtI,aAAa,U,+BA+BT,IAAD,OACH1D,EAAY,KAchB,OAbI/F,KAAKwB,MAAMuQ,QACbhM,EAAY/F,KAAKwB,MAAMuQ,MACpBtL,KAAI,SAAA/G,GACH,OAAOA,EAAKqG,UAAUU,KAAI,SAAA6B,GAAQ,MAAK,CACrC2D,IAAK3D,EAAS,GACd4D,IAAK5D,EAAS,GACdpH,KAAMxB,EAAKkB,SACX2D,GAAI7E,EAAK6E,GACTxE,QAASL,EAAKK,eAGjBkS,QAGH,kBAAC,IAAMlP,SAAP,KACG/C,KAAKwB,MAAMiI,YACV,kBAAC,GAAD,MAEA,yBAAKpI,UAAU,eACb,kBAAC,OAAD,CACEA,UAAU,MACV6Q,OAAQlS,KAAKvC,MAAMyU,OACnBC,KAAM,GACN/G,MAAOsG,GACPU,cAAe,CACbnG,IAAK,kBACLC,KAAM,mBAERmG,mBAAmB,GAElBtM,EAAUU,KAAI,SAAC6B,EAAUuJ,GAAX,OACb,EAAKD,eAAetJ,EAAUuJ,OAGlC,kBAAC,IAAD,CAAM9T,GAAI,CAAEC,SAAU,UACpB,4BACEqD,UAAU,UACVxD,QAASmC,KAAK0N,UACdtC,MAAO,CAAE6F,gBAAiB,OAASC,KAAa,c,GAvFzC3O,aAiGR+P,+BAAiB,CAC9BC,OAAQ,2CADKD,CAEZX,I,UCtGkBa,I,mBACnB,WAAY/U,GAAQ,IAAD,8BACjB,4CAAMA,KACDyK,YAAc,IAAIA,GACvB,EAAK1G,MAAQ,CACXN,KAAM,KACNuI,aAAa,EACbG,MAAO,GACP7B,OAAQ,KACRhI,QAAS,MARM,E,iFAYE,IAAD,OAClBC,KAAKkI,YACF5D,gBAAgBtE,KAAKvC,MAAM6K,SAAS9G,MAAM+C,IAC1CtF,MAAK,SAAAS,GACJ,EAAKiC,SAAL,eACK,EAAKH,MADV,CAEEN,KAAMxB,EAAKkB,SACXmH,OAAO,aAAKrI,EAAKqI,QACjB6B,MAAOlK,EAAKkK,MACZH,aAAa,EACb1J,QAASL,EAAKK,gB,+BAKZ,IAAD,EACkCC,KAAKwB,MAAtCN,EADD,EACCA,KAAM0I,EADP,EACOA,MAAO7J,EADd,EACcA,QAASgI,EADvB,EACuBA,OACxB1E,EAASrD,KAAKvC,MAAM6K,SAAS9G,MAAM+C,GACzC,OACE,kBAAC,IAAMxB,SAAP,KACG/C,KAAKwB,MAAMiI,YACV,kBAAC,GAAD,MAEA1B,GACE,kBAAC,IAAMhF,SAAP,KACE,kBAAC,EAAD,CAAWvE,cAAewB,KAAKvC,MAAMuF,aAAc7E,UAAU,IAC7D,yBAAKkD,UAAU,WACb,4BAAKiF,GAAWpF,IAChB,kBAAC8I,GAAD,CACEjK,QAASA,EACTmJ,aAAc,iBAAM,IACpB/B,QAAQ,aAEV,wBAAI9F,UAAU,aAAauI,GAC3B,yBAAKvI,UAAU,aACZ0G,EAAO0K,OAAO,EAAG,GAAGhM,KAAI,SAAClD,EAAOsO,GAAR,OACvB,kBAAC,IAAD,CACEjJ,IAAKiJ,EACL9T,GAAI,CACFC,SAAS,iBAAD,OAAmBuF,EAAMgB,IACjC/C,MAAO,CACL2F,QAAS,WACTO,aAAa,GAAD,OAAKrE,MAIrB,kBAAC2G,GAAD,CACEjK,QAASwD,EAAMxD,QACfmJ,aAAc,iBAAM,IACpB/B,QAAQ,WACR6B,KAAK,aAKb,kBAACH,GAAD,CAAcpB,cAAe,iBAAM,IAAIN,QAAQ,oB,GApEvB5E,c,oBC4DzBmQ,I,OAjEb,aAAe,IAAD,gCAMdC,gBAAkB,SAACC,EAAYC,EAAYC,EAAcC,GACvD,IAAIC,EAAe,GACbC,EAAcC,KAAON,GACrBO,EAAcD,KAAOL,GAE3B,GACEI,EAAYG,WACZD,EAAYC,WACZN,EAAe,GACfC,EAAe,EACf,CACA,IAAMM,EAAaH,OAASI,MAC1BL,EACAC,KAAOC,GAAaI,IAAIR,EAAc,SAExCM,EAAWG,MAAMV,EAAc,QAC/BE,EAAeK,EAAWI,SAASN,GAAaO,IAAI,cAGtD,OAAOV,GAzBK,KA4BdW,YAAc,SAAC1H,EAAKC,GAClB,OAAO,EAAKpN,SACTe,IADI,qBAEWO,mCAFX,gBAEsD6L,EAFtD,gBAEiEC,IAErEjN,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAlCpB,KAqCdqU,QAAU,SAAAC,GACR,OAAQA,GACN,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,MAAO,QACT,KAAK,IACL,KAAK,IACL,KAAK,IACH,MAAO,MACT,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,MAAO,OACT,QACE,MAAO,SA3DX7T,KAAKlB,SAAWmB,IAAMC,OAAO,CAC3BC,QAAQ,GAAD,OAAKC,+C,qBCHG0T,I,+LAEjB,OACE,yBAAKzS,UAAU,iBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,YAAYrB,KAAKvC,MAAMsW,SACvC,yBAAM1S,UAAU,iBACbrB,KAAKvC,MAAMuW,UAAUvN,KAAI,SAAClD,EAAOsO,GAAR,OACxB,kBAAC,IAAD,CACEjJ,IAAKiJ,EACL9T,GAAI,CACFC,SAAS,iBAAD,OAAmBuF,EAAM,IACjC/B,MAAO,CACL2F,QAAS,YAIb,yBACE9F,UAAS,4BAAuBkC,EAAM,IACtC9E,IAAK8E,EAAM,GACX7E,IAAI,WAMd,yBAAK2C,UAAU,eAAe5C,IAAKuB,KAAKvC,MAAMwW,YAAavV,IAAI,U,GA1B9B6D,cCOpB2R,G,YACnB,WAAYzW,GAAQ,IAAD,8BACjB,4CAAMA,KASR0W,aAAe,SAACC,EAAMrM,GACpB,IAAIsM,EAAWD,EAAK,GAAGE,KACnBvB,EAAeqB,EAAKlO,OACpBqO,EAAWxM,EAAOU,QAAO,SAAC+L,EAAKjR,GAiBjC,OAhBAA,EAAMqK,MAAMvF,SAAQ,SAAApE,GACJ,EAAKwQ,gBAAgB9B,gBACjC1O,EAAK8L,UACLsE,EACApQ,EAAK+J,aACL+E,GAEM1K,SAAQ,SAAAiM,GAAI,OAClBE,EAAIpS,KAAK,CACPkS,KAAMA,EACNrT,KAAoB,UAAdgD,EAAKhD,KAAmB,OAAS,MACvCsD,GAAIhB,EAAMgB,GACVxE,QAASwD,EAAMxD,gBAIdyU,IACN,IAEH,OAAOJ,EAAK3N,KAAI,SAAAiO,GACd,IAAI9G,EAAQ2G,EAAS1G,QAAO,SAAApM,GAAC,OAAIA,EAAE6S,OAASI,EAAIJ,QAAM7N,KAAI,SAAAxC,GAAI,MAAE,CAACA,EAAKM,GAAGN,EAAKlE,QAAQkE,EAAKhD,SAC3F,OAAO,eAAKyT,EAAZ,CAAiB9G,MAAOA,QAjC1B,EAAK1F,YAAc,IAAIA,GACvB,EAAKuM,gBAAkB,IAAIA,GAC3B,EAAKjT,MAAQ,CACXiI,aAAa,EACbkL,eAAe,GANA,E,iFAuCE,IAAD,OAClB,GAAI3U,KAAKvC,MAAMmC,aAAamG,UAAUG,OAAS,EAAG,CAChD,IAAI0O,EAAW,KACf5U,KAAKyU,gBACFd,YACC3T,KAAKvC,MAAMmC,aAAamG,UAAU,GAAG,GACrC/F,KAAKvC,MAAMmC,aAAamG,UAAU,GAAG,IAEtC9G,MAAK,SAAAC,GAKJ,OAJA0V,EAAW1V,EAAIG,KAAKoH,KAAI,SAAAiO,GAAG,MAAK,CAC9BJ,KAAMI,EAAIG,WACVpI,KAAM,EAAKgI,gBAAgBb,QAAQc,EAAII,QAAQC,UAE1C,EAAK7M,YACT5D,gBAAgB,EAAK7G,MAAMmC,aAAa2E,IACxCtF,MAAK,SAAAS,GACJ,EAAKiC,SAAL,eACK,EAAKH,MADV,CAEE9B,KAAMA,EACN+J,aAAa,EACbkL,eAAe,EACfC,SAAUA,c,+BAQtB,IAAII,EAAW,KAIf,OAHIhV,KAAKwB,MAAMoT,UAAY5U,KAAKwB,MAAM9B,KAAKqI,SACzCiN,EAAWhV,KAAKmU,aAAanU,KAAKwB,MAAMoT,SAAU5U,KAAKwB,MAAM9B,KAAKqI,SAGlE,kBAAC,IAAMhF,SAAP,KACG/C,KAAKwB,MAAMiI,YACV,kBAAC,GAAD,MAEA,6BACE,gCACE,kBAAC,EAAD,CAAWpI,UAAU,cACrB,kBAAC,IAAD,CAAMtD,GAAI,CAAEC,SAAU,UACpB,4BACEqD,UAAU,YACV+J,MAAO,CAAE6F,gBAAiB,OAASC,KAAa,SAIrDlR,KAAKwB,MAAMmT,eACV,8EAED3U,KAAKwB,MAAM9B,MACV,kBAAC,IAAMqD,SAAP,KACGiS,GACCA,EAASvO,KAAI,SAACiO,EAAK7C,GAAN,OACX,kBAAC,GAAD,CACEjJ,IAAKiJ,EACLkC,QAASb,KAAOwB,EAAIJ,MAAMW,OAAO,MACjChB,YAAW,mBAAcS,EAAIjI,KAAlB,QACXuH,UAAWU,EAAI9G,kB,GAnGCrL,aCiGvB2S,G,YA7Fb,WAAYzX,GAAQ,IAAD,8BACjB,4CAAMA,KAQRoE,QAAU,SAAAnC,GACR,EAAKiC,SAAL,eAAmB,EAAKH,MAAxB,CAA+B9B,WAVd,EAanByV,UAAY,WACc,OAApB,EAAK3T,MAAM9B,MACb,EAAKuC,YACFrC,eACAX,MACC,SAAAS,GACE,EAAKmC,QAAQnC,MAEf,SAAAH,GACE,EAAKsC,SAAQ,MAGhBvC,OAAM,WACL,EAAKuC,SAAQ,OA1BF,EA+BnBjE,OAAS,SAACuS,GACR,EAAKlO,YAAYrE,SAASqB,MAAK,SAAAmW,GAC7B,EAAKzT,SAAL,eACK,EAAKH,MADV,CAEE9B,KAAM,YAjCV,EAAKuC,YAAc,IAAItD,EACvB,EAAK6C,MAAQ,CACX9B,KAAM,KACN2V,MAAM,GALS,E,iFAyCjBrV,KAAKmV,c,+BAGG,IAAD,OACDzV,EAASM,KAAKwB,MAAd9B,KACN,OACE,yBAAK2B,UAAU,OACZ3B,GACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE4V,OAAK,EACLC,KAAK,SACL9D,OAAQ,SAAAtB,GAAK,OAAI,kBAAC,EAAD,iBAAWA,EAAX,CAAkBtO,QAAS,EAAKA,cAEnD,kBAAC,IAAD,CACEyT,OAAK,EACLC,KAAK,UACL9D,OAAQ,SAAAtB,GAAK,OAAI,kBAAC,GAAD,iBAAYA,EAAZ,CAAmBtO,QAAS,EAAKA,cAEpD,kBAACwP,GAAD,CAAciE,OAAK,EAACC,KAAK,QAAQ7V,KAAMA,EAAM4R,UAAW1J,GAAMpJ,cAAewB,KAAKpC,SAClF,kBAACyT,GAAD,CAAciE,OAAK,EAACC,KAAK,yBAAyB7V,KAAMA,EAAM4R,UAAWjE,GAAa7O,cAAewB,KAAKpC,SAC1G,kBAACyT,GAAD,CAAciE,OAAK,EAACC,KAAK,yBAAyB7V,KAAMA,EAAM4R,UAAWjE,GAAa7O,cAAewB,KAAKpC,SAC1G,kBAACyT,GAAD,CAAciE,OAAK,EAACC,KAAK,aAAa7V,KAAMA,EAAM4R,UAAWjE,GAAa7O,cAAewB,KAAKpC,SAC9F,kBAACyT,GAAD,CAAciE,OAAK,EAACC,KAAK,WAAW7V,KAAMA,EAAM4R,UAAWlI,GAAS5K,cAAewB,KAAKpC,SACxF,kBAACyT,GAAD,CAAciE,OAAK,EAACC,KAAK,cAAc7V,KAAMA,EAAM4R,UAAWkE,GAAWhX,cAAewB,KAAKpC,SAC7F,kBAACyT,GAAD,CAAciE,OAAK,EAACC,KAAK,eAAe7V,KAAMA,EAAM4R,UAAWkB,GAAYhU,cAAewB,KAAKpC,SAC/F,kBAACyT,GAAD,CAAciE,OAAK,EAACC,KAAK,YAAY7V,KAAMA,EAAM4R,UAAW4C,GAAU1V,cAAewB,KAAKpC,WAG5F8B,GACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE4V,OAAK,EACLC,KAAK,SACL9D,OAAQ,SAAAtB,GAAK,OAAI,kBAAC,EAAD,iBAAWA,EAAX,CAAkBtO,QAAS,EAAKA,cAEnD,kBAAC,IAAD,CACEyT,OAAK,EACLC,KAAK,UACL9D,OAAQ,SAAAtB,GAAK,OAAI,kBAAC,GAAD,iBAAYA,EAAZ,CAAmBtO,QAAS,EAAKA,cAEpD,kBAAC,IAAD,CACE0T,KAAK,IACL9D,OAAQ,SAAAtB,GAAK,OAAI,kBAAC,IAAD,CAAUpS,GAAI,CAACC,SAAU,qB,GArFtCgP,IAAMzK,WCFJkT,QACW,cAA7BC,OAAOpN,SAASqN,UAEe,UAA7BD,OAAOpN,SAASqN,UAEhBD,OAAOpN,SAASqN,SAASxF,MACvB,2DCXNyF,IAASnE,OAAO,kBAAC,IAAD,KAAQ,kBAAC,GAAD,OAAkBoE,SAASC,eAAe,SD4H5D,kBAAmBnF,WACrBA,UAAUoF,cAAcC,MAAM/W,MAAK,SAAAgX,GACjCA,EAAaC,kB","file":"static/js/main.daf682cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close_g.1763d4c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/close_g.1763d4c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/close_w.18ad7025.svg\";","const colors = {\n    green : `#6AA76F`,\n    white : `#FFFFFF`,\n    red : `#A78F6A`,\n    blue: `#1B8ECF`,\n    gray: `#A0A0A0`\n}\n\nexport default colors;","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\n\nconst StyledButton = styled.button`\n        border: none;\n        background-color: ${colors.green};\n        background-image: ${props => props.btnColor === \"white\" ? \"url(../images/close_w.svg)\" :\"url(./images/close_g.svg)\"};\n        background-position: center;\n        background-repeat: no-repeat;\n        width: 5vw;\n        height: 3vh;\n        margin-right: 1rem;\n        margin-top: 1rem;\n`;\n\nconst CloseBtn = props => {\n    const { btnColor,logout } = props;\n    return (\n            <StyledButton btnColor={btnColor} onClick={logout} />\n    );\n};\n\nexport default CloseBtn;","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledButton = styled.button`\n        border: none;\n        background-color: ${colors.green};\n        background-image: ${props => props.btnColor === \"white\" ? \"url(../images/user_w.svg)\" :\"url(./images/user_g.svg)\"};\n        background-position: center;\n        background-repeat: no-repeat;\n        width: 5vw;\n        height: 3vh;\n        margin-right: 1rem;\n        margin-top: 1rem;\n`;\n\nconst ProfileBtn = props => {\n    const { btnColor } = props;\n    return (\n        <Link to={{pathname: `/profile`}}>\n            <StyledButton btnColor={btnColor} />\n        </Link>\n    );\n};\n\nexport default ProfileBtn;","import React from \"react\";\nimport styled from \"styled-components\";\nimport CloseBtn from \"./StyledCloseBtn\";\nimport ProfileBtn from \"./ProfileBtn\";\n\nconst HeaderWrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: ${props => props.controls ? \"space-between\" : \"center\"};\n  padding-left: 1rem;\n  box-sizing: border-box;\n`;\n\nconst LogoImg = styled.img`\n  width: 75vw;\n  height: 10vh;\n`;\n\nconst ControlsWrapper = styled.div`\n display:${props => props.controls ? \"flex\" : \"none\"};\n flex-direction: column;\n`;\n\nconst PageTitle = props => {\n  const {controls,logoutHandler} = props;\n  return (\n    <HeaderWrapper controls={controls}>\n      <LogoImg src=\"../images/green_care_w.svg\" alt=\"green care logo\" />\n      <ControlsWrapper controls={controls}>\n        <CloseBtn btnColor={\"white\"} logout={logoutHandler}/>\n        <ProfileBtn btnColor={\"white\"} />\n      </ControlsWrapper>\n    </HeaderWrapper>\n  );\n};\nexport default PageTitle;\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true    \n    })\n  }\n\n  getTrefleToken = clientUrl => {\n    return this.instance.post('/tref', {url:clientUrl})\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  signup = (user) => {\n    return this.instance.post('/signup', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  login = (user) => {\n    return this.instance.post('/login', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  loggedInUser = () => {\n    return this.instance.get('/loggedin')\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  logout = () => {\n    return this.instance.post('/logout')\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error))\n  }\n\n  upload = (picture) => {\n    return this.instance.post('/upload', picture)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n}\n\nexport default AuthService;","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../globalStyles/colors\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledLogin = styled.div`\n  display: flex;\n  align-items: center;\n  flex-flow: column;\n  width: 100vw;\n  height: 50vh;\n  margin: 0 auto;\n  .button-box {\n    display: flex;\n    flex-direction: column;\n    margin-top: 2rem;\n    button {\n      background: ${colors.white};\n      color: ${colors.green};\n      font-size: 1.2rem;\n      font-weight: 600;\n      border: none;\n      border-radius: 25px;\n      height: 50px;\n      min-width: 230px;\n      max-width: 350px;\n      padding: 10px;\n      margin: .5rem;\n      box-sizing: border-box;\n    }\n    .btn-green {\n      background: ${colors.green};\n      border: 1px solid ${colors.white};\n      color: ${colors.white};\n    }\n  }\n`;\n\nconst StyledInput = styled.input`\n  color: ${colors.gray};\n  font-size: 1.2rem;\n  border: none;\n  border-radius: 22px;\n  height: 50px;\n  min-width: 230px;\n  max-width: 350px;\n  padding: 10px;\n  margin: 5px;\n  box-sizing: border-box;\n  ::placeholder {\n    color: ${colors.gray};\n  }\n`;\n\nconst StyledLabel = styled.label`\n  font-family: \"Encode Sans\";\n  font-weight: 400;\n  font-size: 1em;\n  color: ${colors.white};\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst Login = props => {\n  const { username, password, handleChange, placeholder } = props;\n  return (\n    <StyledLogin>\n      <StyledLabel htmlFor=\"username\">User name: </StyledLabel>\n      <StyledInput\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        placeholder={placeholder}\n      />\n      <StyledLabel htmlFor=\"password\">Password: </StyledLabel>\n      <StyledInput\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n      />\n      <div className={\"button-box\"}>\n        <button className={\"btn-green\"} type=\"submit\">\n          Enter\n        </button>\n        <Link to={{pathname:\"/signup\"}}><button>New user</button></Link>\n        \n      </div>\n    </StyledLogin>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LeafIma= styled.img`\n  height: 20vh;\n    margin-top: .5rem;\n  }\n`;\n\nconst LeafLogo = () => (<LeafIma src=\"./images/leaf_w.svg\" alt=\"green care\"/>);\n\nexport default LeafLogo;\n","import React, { Component } from 'react'\nimport PageTitle from '../../sharedComponents/PageTitle'\nimport AuthService from '../../services/AuthService';\nimport './Login.css';\nimport StyledLogin from './StyledLogin';\nimport LeafLogo from '../../sharedComponents/Leaf';\n\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  state = {\n    username: 'bob',\n    password: 'b'\n  }\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({...this.state, [name]:value})\n  }\n  handleLogin = (e) => {\n    const { setUser, history } = this.props;\n    let apiToken = null;\n    e.preventDefault()\n    this.authService.getTrefleToken(process.env.REACT_APP_LOCAL_URL)\n    .then(token=>{\n      apiToken = token;\n      return this.authService.login(this.state)\n    })\n    .then(\n      (user) => {\n        user.token = apiToken;\n        console.log(user);\n        setUser(user);\n        history.push(\"/main\");\n      },\n      (error) => {\n        console.error(error)\n      }\n    )\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <div className=\"login-wrapper\">\n        <PageTitle controls={false}/>\n        <LeafLogo />\n        <form onSubmit={this.handleLogin}>\n          <StyledLogin username={username} password={password} handleChange={this.handleChange} handleLogin={this.handleLogin} placeholder={\"User name\"}></StyledLogin>\n        </form>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../globalStyles/colors\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledSignup = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: column;\n  width: 100vw;\n  height: 50vh;\n  .button-box {\n    display: flex;\n    flex-direction: column;\n    margin-top: 2rem;\n    button {\n      background: ${colors.white};\n      color: ${colors.green};\n      font-size: 1.2rem;\n      font-weight: 600;\n      border: none;\n      border-radius: 25px;\n      height: 50px;\n      min-width: 230px;\n      max-width: 350px;\n      padding: 10px;\n      margin: .5rem;\n      box-sizing: border-box;\n    }\n    .btn-green {\n      background: ${colors.green};\n      border: 1px solid ${colors.white};\n      color: ${colors.white};\n    }\n\n    .btn-red {\n      background: ${colors.red};\n      border: 1px solid ${colors.white};\n      color: ${colors.white};\n    }\n  }\n`;\n\nconst StyledInput = styled.input`\n  color: ${colors.gray};\n  font-size: 1.2rem;\n  border: none;\n  border-radius: 22px;\n  height: 50px;\n  min-width: 230px;\n  max-width: 350px;\n  padding: 10px;\n  margin: 5px;\n  box-sizing: border-box;\n  ::placeholder {\n    color: ${colors.gray};\n  }\n`;\n\nconst StyledLabel = styled.label`\n  font-family: \"Encode Sans\";\n  font-weight: 400;\n  font-size: 1em;\n  color: ${colors.white};\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst StyledError = styled.p`\n  font-family: \"Roboto\";\n  font-weight: 300;\n  font-size: 1em;\n  font-style: italic;\n  color: ${colors.white};\n  background-color: ${colors.red} ;\n  padding: 2px 5px;\n  border-radius: 5px;\n`;\n\nconst Signup = props => {\n  const { username, password, passwordR, handleChange, placeholder, error } = props;\n  return (\n    <StyledSignup>\n      <StyledLabel htmlFor=\"username\">New user name: </StyledLabel>\n      <StyledInput\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        placeholder={placeholder}\n      />\n      <StyledLabel htmlFor=\"password\">New password: </StyledLabel>\n      <StyledInput\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n      />\n      <StyledLabel htmlFor=\"passwordR\">Repeat password: </StyledLabel>\n      <StyledInput\n        type=\"password\"\n        name=\"passwordR\"\n        value={passwordR}\n        onChange={handleChange}\n      />\n      {error && <StyledError>{error}</StyledError>}\n      <div className={\"button-box\"}>\n        <button className={\"btn-green\"} type=\"submit\">\n          Create user\n        </button>\n        <Link to={{pathname:\"/login\"}}>\n          <button className={\"btn-red\"}>Cancel</button>\n        </Link>  \n      </div>\n    </StyledSignup>\n  );\n};\n\nexport default Signup;","import React, { Component } from \"react\";\nimport \"./Signup.css\";\nimport PageTitle from \"../../sharedComponents/PageTitle\";\nimport Signup from \"./StyledSignup\";\nimport AuthService from \"../../services/AuthService\";\n\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  state = {\n    username: \"\",\n    password: \"\",\n    passwordR: \"\",\n    error: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n  handleSignUp = e => {\n    e.preventDefault();\n    if (this.state.password === this.state.passwordR) {\n      const { history, setUser } = this.props;\n      this.authService.signup(this.state).then(\n        user => {\n          console.log(user)\n          setUser(user);\n          history.push(\"/main\");\n        },\n        error => {\n          this.setState({ ...this.state, error: error });\n        }\n      );\n    } else {\n      this.setState({ ...this.state, error: \"Password don't match\" });\n    }\n  };\n\n  render() {\n    const { username, password, passwordR, error } = this.state;\n    return (\n      <React.Fragment>\n        <PageTitle src=\"./images/green_care_w.svg\" alt=\"green care logo\" logoutHandler={this.props.handleLogout} />\n        <form className=\"form-wrapper\" onSubmit={this.handleSignUp}>\n          <Signup\n            username={username}\n            password={password}\n            passwordR={passwordR}\n            handleChange={this.handleChange}\n            placeholder={\"User name\"}\n            error={error}\n          ></Signup>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n","import axios from \"axios\";\n\nclass PlantService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/plants`,\n      withCredentials: true\n    });\n  }\n\n  getPlantById = plantId => {\n    return this.instance\n      .get(`/${plantId}`)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  getUserPlants = userId => {\n    return this.instance\n      .get(`/user/${userId}`)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  createPlant = plant => {\n    return this.instance\n      .post(\"/create\", plant)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  deletePlant = plantId => {\n    return this.instance\n      .delete(`/delete/${plantId}`)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  updatePlant = plant => {\n    return this.instance\n      .put(`/update`, plant)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  uploadPlantImage = picture => {\n    return this.instance\n      .post(\"/upload\", picture)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n}\n\nexport default PlantService;\n","import axios from \"axios\";\n\nclass TaskService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/tasks`,\n      withCredentials: true\n    });\n  }\n\n  createTasks = taskArr => {\n    return this.instance\n      .post(\"/multicreate\", taskArr)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  createTask = (plantId, task) => {\n    task.plantId = plantId;\n    return this.instance\n      .post(\"/create\", task)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  updateTask = (task) => {\n    return this.instance\n      .put(\"/update\", task)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  deleteTask = (task) => {\n    return this.instance\n      .put(\"/delete\", task)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n}\n\nexport default TaskService;\n","import axios from 'axios';\n\nclass UserService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/users`,\n      withCredentials: true    \n    })\n  }\n\n  getUsers = () => {\n    return this.instance.get(`/all`)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  getUserByIdDeep = (id) => {\n    return this.instance.get(`/deep/${id}`)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  getUserByIdShallow = (id) => {\n    return this.instance.get(`/shallow/${id}`)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  updateUser = (user) => {\n    return this.instance.put('/update',user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  updateUserProfile = (user) => {\n    return this.instance.put('/update-profile',user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  deleteUserPlant= (user, plant) => {\n    let payload = {user:user, plant: plant}\n    return this.instance.put('/deletePlant',payload)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  uploadUserImage = (picture) => {\n    return this.instance.post('/upload', picture)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n}\n\nexport default UserService;","class GeoService {\n    calcDistance = (lat1, lng1, lat2, lng2) => {\n        const R = 6371; // earth radius in km\n        let dLat = this.toRad(lat2 - lat1);\n        let dLng = this.toRad(lng2 - lng1);\n        lat1 = this.toRad(lat1);\n        lat2 = this.toRad(lat2);\n      \n        let a =\n          Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n          Math.sin(dLng / 2) * Math.sin(dLng / 2) * Math.cos(lat1) * Math.cos(lat2);\n        let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        let d = R * c;\n        return d;\n      }\n      \n    toRad = (value) => {\n        return (value * Math.PI) / 180;\n      }\n      \n    getUserLocationArr = (locations, radius = 0.02) => {\n        let resultArr = [];\n        if (locations.length > 0) {\n          let currentLoc = locations.pop();\n          resultArr.push(currentLoc);\n          while (locations.length > 0) {\n            let nextLoc = locations.pop();\n            if (\n              this.calcDistance(currentLoc[0], currentLoc[1], nextLoc[0], nextLoc[1]) >\n              radius\n            ) {\n              resultArr.push(nextLoc);\n              currentLoc = nextLoc;\n            }\n          }\n        }\n        return resultArr;\n      }\n}\n\nexport default GeoService;","const capitalize = (word) => word.split('').map((e,i)=>i===0?e.toUpperCase():e).join('');\nexport default capitalize;","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./StyledPlantCard.css\";\nimport colors from \"../../globalStyles/colors\";\nimport { Link } from \"react-router-dom\";\nimport capitalize from \"../../globalStyles/utils\"\n\nconst CardContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 2rem 1rem;\n`;\n\nconst PlantPortrait = styled.img`\n  width: 140px;\n  height: 140px;\n  border-radius: 50%;\n  border: 8px solid ${colors.white};\n  box-sizing: border-box;\n`;\n\nconst PlantInfo = styled.div`\n  color: ${colors.white};\n\n  h2 {\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n  p {\n    font-size: 1rem;\n    font-family: \"Roboto\";\n    font-style: italic;\n  }\n`;\n\nconst ControlButtons = styled.div`\n  display: flex;\n  button {\n    border: none;\n    background-color: ${colors.green};\n    background-position: center-top;\n    background-repeat: no-repeat;\n    background-size: cover;\n    width: 2rem;\n    height: 2rem;\n    margin-top: 2rem;\n  }\n  .btn-edit {\n    background-image: url(./images/edit_w.svg);\n  }\n  .btn-delete {\n    background-image: url(./images/trash_w.svg);\n    margin-left: 2rem;\n  }\n`;\n\nconst PlantCard = props => {\n  const { id, picture, name, common_name, deletePlant } = props.plant;\n  return (\n    <CardContainer>\n      <Link\n        to={{\n          pathname: `/plant-detail/${id}`,\n          state: {\n            flavour: \"readonly\"\n          }\n        }}\n      >\n        <PlantPortrait id={id} src={picture}></PlantPortrait>\n      </Link>\n      <div className=\"side-wrapper\">\n        <Link\n          to={{\n            pathname: `/plant-detail/${id}`,\n            state: {\n              flavour: \"readonly\"\n            }\n          }}\n        >\n          <PlantInfo id={id}>\n            <h2>{capitalize(name)}</h2>\n            <p>{capitalize(common_name)}</p>\n          </PlantInfo>\n        </Link>\n        <ControlButtons>\n          <Link\n            to={{\n              pathname: `/plant-update/${id}`,\n              state: {\n                flavour: \"update\"\n              }\n            }}\n          >\n            <button className=\"btn-edit\"></button>\n          </Link>\n          <button\n            className=\"btn-delete\"\n            id={id}\n            onClick={e => deletePlant(e)}\n          ></button>\n        </ControlButtons>\n      </div>\n    </CardContainer>\n  );\n};\n\nexport default PlantCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\n\nconst GenericBtn = styled.button`\n  border: none;\n  background-color: ${colors.green};\n  background-image: url(${props => props.img});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 4rem;\n  height: 4rem;\n  margin-right: 1rem;\n  margin-top: 1rem;\n`;\n\nconst Button = props => {\n  const { img, clicked } = props;\n  return (\n    <React.Fragment>    \n        <GenericBtn img={img} onClick={e=>clicked(e)} />\n    </React.Fragment>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\nimport StyledButton from \"../sharedComponents/StyledButton\";\nimport { Link } from \"react-router-dom\";\n\nconst GenericBtn = styled.button`\n  font-family: \"Encode Sans\";\n  color: ${colors.white};\n  font-size: 1.2rem;\n  font-weight: 600;\n  border: none;\n  border-radius: 25px;\n  height: 40px;\n  min-width: 140px;\n  max-width: 350px;\n  padding: 5px 10px 10px;\n  margin: 0.5rem;\n  box-sizing: border-box;\n`;\n\nconst BtnWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  margin-top: 1rem;\n  .btn-green {\n    background: ${colors.green};\n    border: 1px solid ${colors.white};\n  }\n  .btn-red {\n    background: ${colors.red};\n  }\n  .btn-new {\n    background: ${colors.white};\n    color: ${colors.green};\n    font-size: 2.5rem;\n    font-weight: 600;\n    padding: 0;\n    line-height: 1rem;\n    align-self: flex-end;\n  }\n`;\n\nconst Buttons = props => {\n  const { updateHandler, flavour, sourceUserId, goBackHandler } = props;\n  return (\n    <BtnWrapper>\n      {(() => {\n        switch (flavour) {\n          case \"readonly\":\n            return (\n              <React.Fragment>\n                {sourceUserId ? (\n                  <GenericBtn\n                    className=\"btn-red\"\n                    onClick={e => goBackHandler(e, sourceUserId)}\n                  >\n                    Go back\n                  </GenericBtn>\n                ) : (\n                  <Link to={{ pathname: `/main` }}>\n                    <GenericBtn className=\"btn-red\">Go back</GenericBtn>\n                  </Link>\n                )}\n              </React.Fragment>\n            );\n          case \"update\":\n            return (\n              <React.Fragment>\n                <Link to={{ pathname: `/main` }}>\n                  <GenericBtn className=\"btn-red\">Cancel</GenericBtn>\n                </Link>\n                <GenericBtn\n                  className=\"btn-green\"\n                  onClick={e => updateHandler(e)}\n                >\n                  Update\n                </GenericBtn>\n              </React.Fragment>\n            );\n          case \"create\":\n            return (\n              <React.Fragment>\n                <GenericBtn\n                  className=\"btn-green\"\n                  onClick={e => updateHandler(e)}\n                >\n                  Create\n                </GenericBtn>\n              </React.Fragment>\n            );\n          case \"main\":\n            return (\n              <React.Fragment>\n                <Link to={{ pathname: `/calendar` }}>\n                  <StyledButton\n                    img={\"../images/calendar_w.svg\"}\n                    clicked={() => \"\"}\n                  />\n                </Link>\n\n                <Link\n                  to={{\n                    pathname: `/plant/new`,\n                    state: {\n                      flavour: \"create\"\n                    }\n                  }}\n                >\n                  <GenericBtn className=\"btn-new\">+</GenericBtn>\n                </Link>\n\n                <Link\n                  to={{\n                    pathname: `/plants-map`\n                  }}\n                >\n                  <StyledButton\n                    img={\"../images/map_w.svg\"}\n                    clicked={() => \"\"}\n                  />\n                </Link>\n              </React.Fragment>\n            );\n          default:\n            return (\n              <React.Fragment>\n                <Link to={{ pathname: `/main` }}>\n                  <GenericBtn className=\"btn-red\">Cancel</GenericBtn>\n                </Link>\n                <GenericBtn\n                  className=\"btn-green\"\n                  onClick={e => updateHandler(e)}\n                >\n                  Accept\n                </GenericBtn>\n              </React.Fragment>\n            );\n        }\n      })()}\n    </BtnWrapper>\n  );\n};\n\nexport default Buttons;\n","import React, { Component } from \"react\";\nimport \"./Main.css\";\nimport PageTitle from \"../../sharedComponents/PageTitle\";\nimport plantService from \"../../services/PlantService\";\nimport taskService from \"../../services/TaskService\";\nimport userService from \"../../services/UserService\";\nimport geoService from \"../../services/GeoService\";\nimport PlantCard from \"../PlantCard/StyledPlantCard\";\nimport ModalButtons from \"../../sharedComponents/ModalButtons\";\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.plantService = new plantService();\n    this.taskService = new taskService();\n    this.userService = new userService();\n    this.geoService = new geoService();\n    this.state = {\n      plants: []\n    };\n  }\n\n  updatePlants = () => {\n    this.plantService.getUserPlants(this.props.loggedInUser.id).then(\n      plants => {\n        this.setState({ ...this.state, plants });\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  deletePlant = e => {\n    e.preventDefault();\n    let user = { ...this.props.loggedInUser };\n    let plant = this.state.plants.find(plant => plant.id === e.target.id);\n    this.plantService\n      .deletePlant(plant.id)\n      .then(() => this.userService.deleteUserPlant(user, plant))\n      .then(() => this.userService.getUserByIdDeep(user.id))\n      .then(newUser => {\n        let userCoords = [];\n        newUser.plants.forEach(plant =>\n          userCoords.push(plant.location.coordinates)\n        );\n        newUser.locations = this.geoService.getUserLocationArr(\n          userCoords,\n          0.002\n        );\n        newUser.plants = newUser.plants.reduce((acc, plant) => {\n          acc.push(plant.id);\n          return acc;\n        }, []);\n        return this.userService.updateUser(newUser);\n      })\n      .then(() => this.updatePlants())\n      .catch(error => console.error(error));\n  };\n\n  componentDidMount() {\n    this.updatePlants();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"fixed-top-aux-padding\">\n          <div className=\"fixed-controls up\">\n            <PageTitle\n              logoutHandler={this.props.handleLogout}\n              controls={true}\n            />\n          </div>\n          <div className=\"cards-wrapper\">\n            {this.state.plants.map(plant => (\n              <PlantCard\n                key={plant.id}\n                plant={{ ...plant, deletePlant: this.deletePlant }}\n              ></PlantCard>\n            ))}\n          </div>\n          <div className=\"fixed-controls down\">\n            <ModalButtons flavour=\"main\" />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\n\nconst InputField = styled.input`\n  display: none;\n`;\n\nconst CustomLabel = styled.label`\n  cursor: pointer;\n`;\n\nconst PlantPortrait = styled.img`\n  width: ${props => props.size ? props.size : \"178\"}px;\n  height: ${props => props.size ? props.size : \"178\"}px;\n  border-radius: 50%;\n  border: 8px solid ${colors.white};\n  box-sizing: border-box;\n`;\n\nconst Loader = props => {\n  const { picture, handleUpload, flavour, size } = props;\n  return (\n    <React.Fragment>\n      {flavour !== \"readonly\" ? (\n        <React.Fragment>\n          <CustomLabel htmlFor=\"file-upload\" className=\"custom-file-upload\">\n            <PlantPortrait src={picture} />\n          </CustomLabel>\n          <InputField id=\"file-upload\" type=\"file\" onChange={handleUpload} />\n        </React.Fragment>\n      ) : (\n        <PlantPortrait className=\"round-img\" src={picture} size={size}/>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Loader;\n","import styled from \"styled-components\";\n\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background-color : rgba(0,0,0,.2);\n  background-image : url(../images/Spinner-1s-200px.svg);\n  background-position: center;\n  background-repeat: no-repeat;\n  z-index : 1000;\n  }\n`;\n\nexport default LoadingOverlay;\n","import React, { Component } from \"react\";\nimport \"./Profile.css\";\nimport ImageLoader from \"../../sharedComponents/ImageLoader\";\nimport ModalButtons from \"../../sharedComponents/ModalButtons\";\nimport userService from \"../../services/UserService\";\nimport capitalize from \"../../globalStyles/utils\";\nimport LoadingOverlay from \"../../sharedComponents/LoadingOverlay\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.userService = new userService();\n    this.state = {\n      user: null,\n      loadingFlag: true,\n      email: \"\",\n      current_pass: \"\",\n      new_pass: \"\",\n      repeat_pass: \"\"\n    };\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleUpload = e => {\n    const uploadData = new FormData();\n    uploadData.append(\"picture\", e.target.files[0]);\n\n    this.setState({ ...this.state, loadingFlag: true });\n    this.userService.uploadUserImage(uploadData).then(\n      data => {\n        this.setState({\n          ...this.state,\n          user: { ...this.state.user, picture: data.secure_url },\n          loadingFlag: false\n        });\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  };\n\n  handleUpdate = e => {\n    let { user } = this.state;\n    e.preventDefault();\n    const { history } = this.props;\n    user = {\n      ...this.state.user,\n      email: this.state.email,\n      current_pass: this.state.current_pass,\n      new_pass: this.state.new_pass,\n      repeat_pass: this.state.repeat_pass\n    };\n    this.userService.updateUserProfile(user).then(() => history.push(\"/main\"));\n  };\n\n  componentDidMount() {\n    this.userService\n      .getUserByIdShallow(this.props.loggedInUser.id)\n      .then(user => {\n        this.setState({\n          ...this.state,\n          user: { ...user },\n          email: user.email,\n          loadingFlag: false\n        });\n      });\n  }\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        {this.state.loadingFlag ? (\n          <LoadingOverlay />\n        ) : (\n          user && (\n            <React.Fragment>\n              <h1>{capitalize(user.username)}</h1>\n              <form>\n                <ImageLoader\n                  picture={user.picture}\n                  handleUpload={this.handleUpload}\n                  flavour=\"signup\"\n                />\n                <label htmlFor=\"email\">User email</label>\n                <input\n                  className=\"big-input\"\n                  type=\"email\"\n                  name=\"email\"\n                  value={this.state.email}\n                  id=\"email\"\n                  onChange={this.handleChange}\n                />\n                <p>If you want to change your password</p>\n                <label htmlFor=\"current-pass\">Enter current password</label>\n                <input\n                  className=\"small-input\"\n                  type=\"password\"\n                  name=\"current_pass\"\n                  id=\"current-pass\"\n                  onChange={this.handleChange}\n                />\n                <label htmlFor=\"new-pass\">Enter new password</label>\n                <input\n                  className=\"small-input\"\n                  type=\"password\"\n                  name=\"new_pass\"\n                  id=\"new-pass\"\n                  onChange={this.handleChange}\n                />\n                <label htmlFor=\"repeat-pass\">Repeat new password</label>\n                <input\n                  className=\"small-input\"\n                  type=\"password\"\n                  name=\"repeat_pass\"\n                  id=\"repeat-pass\"\n                  onChange={this.handleChange}\n                />\n              </form>\n              <ModalButtons updateHandler={this.handleUpdate} />\n            </React.Fragment>\n          )\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import axios from \"axios\";\n\nclass TrefService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_TREF_URL}`\n    });\n  }\n  //https://trefle.io/api/plants/?token=VlZkR1N3aVRudTVhV1NmSnlUaTNKUT09&common_name=Canadian%20serviceberry\n\n  getByName = (name,token) => {\n    return this.instance\n      .get(`?token=${token}&common_name=${name}`)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  getById = (id,token) => {\n    return this.instance\n      .get(`${id}?token=${token}`)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  }\n}\n\nexport default TrefService;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Label = styled.label`\n  font-size: 1rem;\n  align-self: flex-start;\n  margin-left: 1rem;  \n`;\n\nconst RangeInput = styled.input`\n`;\n\nconst RangeWrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  align-items: center;\n`;\n\nconst NumberBoard = styled.p`\n  font-size: 2rem;\n`;\n\nconst Loader = props => {\n  const { name, handleChange, value, id, labelText } = props;\n  return (\n    <React.Fragment>\n      <Label forHtml={id} name={name}>\n        {labelText}\n      </Label>\n      <RangeWrapper>\n        <RangeInput\n          id={id}\n          type=\"range\"\n          name={name}\n          step={1}\n          value={value}\n          min={1}\n          max={30}\n          onChange={handleChange}\n        ></RangeInput>\n        <NumberBoard>{value}</NumberBoard>\n      </RangeWrapper>\n    </React.Fragment>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\nimport capitalize from \"../globalStyles/utils\"\n\nconst InputField = styled.input`\ncolor: ${colors.gray};\n  font-size: 1.2rem;\n  border: none;\n  border-radius: 22px;\n  height: 50px;\n  min-width: 230px;\n  max-width: 350px;\n  padding: 10px;\n  margin: 5px;\n  box-sizing: border-box;\n  ::placeholder {\n    color: ${colors.gray};\n  }`;\n  \nconst StaticField = styled.p`\n  background-color: ${colors.green};\n  font-family: \"Encode Sans\"; \n  font-size: 1.7rem;\n  padding-bottom: .5rem;\n`;\n\nconst Input = props => {\n  const { name, value, handleChange, flavour, placeholder, id } = props;\n  return (\n    <React.Fragment>\n      {flavour === \"readonly\" ? (\n        <StaticField>{capitalize(value)}</StaticField>\n      ) : (\n        <InputField name={name} value={value} onChange={handleChange} placeholder={placeholder} id={id || null}/>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { compose, withProps, lifecycle } from \"recompose\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\nconst MyMapComponent = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCm0meO5cjbh70YvG6BIQVh5GqRHXHG7Uw&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `100vh` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  lifecycle({\n    componentDidMount() {\n      const refs = {};\n\n      this.setState({\n        position: null,\n        onMarkerMounted: ref => {\n          refs.marker = ref;\n        },\n\n        onPositionChanged: () => {\n          const position = refs.marker.getPosition();\n          this.props.handleChange({lat:position.lat(),lng:position.lng()})\n        }\n      });\n    }\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props => (\n  <GoogleMap defaultZoom={8} defaultCenter={{ lat: props.lat, lng: props.lng }}>\n    {props.isMarkerShown && (\n      <Marker \n        position={{ lat: props.lat, lng: props.lng }}\n        draggable={true}\n        ref={props.onMarkerMounted}\n        onPositionChanged={props.onPositionChanged}\n        icon={ { url: props.picture, size: {width: 60, height: 60}, anchor: {x: 15, y: 30}, scaledSize: {width: 30, height: 30}, }}\n      />\n    )}\n  </GoogleMap>\n));\n\nclass MyParentComponentWrapper extends React.PureComponent {\n  state = {\n    isMarkerShown: false\n  };\n\n  render() {\n    return (\n      <div>\n        <MyMapComponent lat={this.props.lat} lng={this.props.lng} picture={this.props.picture} handleChange={this.props.handleChange} isMarkerShown={true} />\n      </div>\n    );\n  }\n}\n\nexport default MyParentComponentWrapper;","import React, { Component } from \"react\";\nimport PageTitle from \"../../sharedComponents/PageTitle\";\nimport ImageLoader from \"../../sharedComponents/ImageLoader\";\nimport plantService from \"../../services/PlantService\";\nimport userService from \"../../services/UserService\";\nimport taskService from \"../../services/TaskService\";\nimport geoService from \"../../services/GeoService\";\nimport trefService from \"../../services/TrefService\";\nimport LoadingOverlay from \"../../sharedComponents/LoadingOverlay\";\nimport FormRange from \"../../sharedComponents/FormRange\";\nimport StyledButton from \"../../sharedComponents/StyledButton\";\nimport MutableTextInput from \"../../sharedComponents/MutableTextInput\";\nimport ModalButtons from \"../../sharedComponents/ModalButtons\";\nimport styled from \"styled-components\";\nimport \"./PlantDetail.css\";\nimport capitalize from \"../../globalStyles/utils\";\nimport GmapsMap from \"../GmapsMap/GmapsMap\";\nimport InnerBgImg from \"./close_g.svg\";\n\nconst FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ButtonsWrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 1rem;\n`;\n\nexport default class PlantDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.plantService = new plantService();\n    this.userService = new userService();\n    this.taskService = new taskService();\n    this.geoService = new geoService();\n    this.trefService = new trefService();\n    this.state = {\n      plant: {},\n      name: \"\",\n      common_name: \"\",\n      loadingFlag: true,\n      waterInterval: 0,\n      fertilizerInterval: 0,\n      infoToggle: false,\n      mapToggle: false,\n      lat: 0,\n      lng: 0,\n      flavour: props.location.state.flavour\n    };\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleLocChange = coords => {\n    const { lat, lng } = coords;\n    this.setState({ ...this.state, lat: lat, lng: lng });\n  };\n\n  toggleInfo = e => {\n    e.preventDefault();\n    this.setState({ ...this.state, infoToggle: !this.state.infoToggle });\n  };\n\n  toggleMap = e => {\n    e.preventDefault();\n    this.setState({ ...this.state, mapToggle: !this.state.mapToggle });\n  };\n\n  handleUpload = e => {\n    const uploadData = new FormData();\n    uploadData.append(\"picture\", e.target.files[0]);\n\n    this.setState({ ...this.state, loadingFlag: true });\n    this.plantService.uploadPlantImage(uploadData).then(\n      data => {\n        this.setState({\n          ...this.state,\n          plant: { ...this.state.plant, picture: data.secure_url },\n          loadingFlag: false\n        });\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  };\n\n  handleUpdate = e => {\n    e.preventDefault();\n\n    const { history } = this.props;\n    let plant = {\n      ...this.state.plant,\n      common_name: this.state.common_name,\n      name: this.state.name,\n      location: {\n        type: \"Point\",\n        coordinates: [this.state.lat, this.state.lng]\n      }\n    };\n    let tasks = this.state.plant.tasks.filter(task => task);\n\n    let updatePlantFromApi = plant => {\n      return this.trefService\n        .getByName(plant.common_name, this.props.loggedInUser.token.token)\n        .then(res => {\n          return this.trefService.getById(res[0].id,this.props.loggedInUser.token.token);\n        })\n        .then(apiData => {\n          plant.scientific_name = apiData.scientific_name || \"\";\n          let soilsArr = Object.entries(apiData.main_species.soils_adaptation);\n          plant.soils_adaptation =\n            soilsArr\n              .reduce((acc, pair) => {\n                pair[1] && acc.push(pair[0]);\n                return acc;\n              }, [])\n              .join(\",\") || \"unknow\";\n          plant.temperature_minimun =\n            Math.round(apiData.main_species.growth.temperature_minimum.deg_c) ||\n            \"\";\n          plant.shade_tolerance =\n            apiData.main_species.growth.shade_tolerance || \"\";\n          plant.year_rain_range =\n            `${Math.round(\n              apiData.main_species.growth.precipitation_minimum.cm\n            )} to ${Math.round(\n              apiData.main_species.growth.precipitation_maximum.cm\n            )} cm` || \"\";\n          plant.ph_range =\n            `${apiData.main_species.growth.ph_minimum} to ${apiData.main_species.growth.ph_maximum}` ||\n            \"\";\n          plant.fertilizer_req =\n            apiData.main_species.growth.fertility_requirement || \"\";\n          plant.perennial = apiData.duration === \"Perennial\";\n          if (\n            plant.picture === \"../images/daisy.jpg\" &&\n            apiData.images.length > 0\n          ) {\n            plant.picture = apiData.images[0].url;\n          }\n          return Promise.resolve(plant);\n        })\n        .catch(error => {\n          console.log(error);\n          return Promise.resolve(plant);\n        });\n    };\n\n    if (tasks.length > 0) {\n      tasks\n        .sort((a, b) => a.type - b.type)\n        .forEach(task =>\n          task.type === \"WATER\"\n            ? (task.day_interval = this.state.waterInterval)\n            : (task.day_interval = this.state.fertilizerInterval)\n        );\n      delete plant.tasks;\n      updatePlantFromApi(plant)\n        .then(res => {\n          return this.plantService.updatePlant(res);\n        })\n        .then(() => {\n          tasks.forEach(task => this.taskService.updateTask(task));\n        })\n        .then(() => {\n          let user = this.props.loggedInUser;\n          user.locations.push([this.state.lat, this.state.lng]);\n          user.locations = this.geoService.getUserLocationArr(user.locations);\n          return this.userService.updateUser(user);\n        })\n        .then(() => history.push(\"/main\"));\n    } else {\n      tasks = [\n        {\n          begin_day: new Date(),\n          day_interval: this.state.waterInterval,\n          type: \"WATER\"\n        },\n        {\n          begin_day: new Date(),\n          day_interval: this.state.fertilizerInterval,\n          type: \"FERTILIZER\"\n        }\n      ];\n\n      this.taskService\n        .createTasks(tasks)\n        .then(tasks => {\n          console.log(tasks);\n          plant.tasks = [tasks[0].id, tasks[1].id];\n          return this.plantService.updatePlant(plant);\n        })\n        .then(() => {\n          let user = this.props.loggedInUser;\n          console.log(user);\n          user.locations.push([this.state.lat, this.state.lng]);\n          user.locations = this.geoService.getUserLocationArr(user.locations);\n          console.log(user);\n          return this.userService.updateUser(user);\n        })\n        .then(() => history.push(\"/main\"));\n    }\n  };\n\n  getPlant = () => {\n    const {\n      match: { params }\n    } = this.props;\n    this.plantService.getPlantById(params.plantId).then(\n      plant => {\n        this.setState({\n          ...this.state,\n          plant,\n          name: plant.name,\n          common_name: plant.common_name,\n          loadingFlag: false,\n          waterInterval: plant.tasks[0].day_interval,\n          fertilizerInterval: plant.tasks[1].day_interval,\n          lat: plant.location.coordinates[0],\n          lng: plant.location.coordinates[1]\n        });\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  createNewPlant(user) {\n    let locationArr = [40.392351, -3.696842];\n\n    const doCreate = currentPosition => {\n      let newTasks = [\n        {\n          begin_day: new Date(),\n          day_interval: 0,\n          type: \"WATER\"\n        },\n        {\n          begin_day: new Date(),\n          day_interval: 0,\n          type: \"FERTILIZER\"\n        }\n      ];\n\n      let newPlant = {\n        name: \"\",\n        common_name: \"\",\n        scientific_name: \"\",\n        soils_adaptation: [],\n        temperature_minimun: 0,\n        shade_tolerance: \"\",\n        year_rain_range: \"\",\n        ph_range: \"\",\n        fertilizer_req: \"\",\n        perennial: true,\n        picture: \"../images/daisy.jpg\",\n        tasks: [],\n        location: {\n          type: \"Point\",\n          coordinates: currentPosition\n        }\n      };\n\n      this.plantService\n        .createPlant(newPlant)\n        .then(plant => {\n          newPlant = plant;\n          return this.taskService.createTasks(newTasks);\n        })\n        .then(tasks => {\n          newPlant.tasks = [tasks[0].id, tasks[1].id];\n          return this.plantService.updatePlant(newPlant);\n        })\n        .then(() => {\n          user.locations.push(currentPosition);\n          user.plants.push(newPlant.id);\n          user.locations = this.geoService.getUserLocationArr(user.locations);\n          return this.userService.updateUser(user);\n        })\n        .then(() => this.plantService.getPlantById(newPlant.id))\n        .then(createdPlant => {\n          this.setState({\n            ...this.state,\n            plant: { ...createdPlant },\n            name: createdPlant.name,\n            common_name: createdPlant.common_name,\n            lat: createdPlant.location.coordinates[0],\n            lng: createdPlant.location.coordinates[1],\n            loadingFlag: false\n          });\n        })\n        .catch(error => console.error(error));\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position =>\n        doCreate([position.coords.latitude, position.coords.longitude])\n      );\n    } else {\n      doCreate(locationArr);\n    }\n  }\n\n  deleteHandle = e => {\n    e.preventDefault();\n    let user = { ...this.props.loggedInUser };\n    let plant = this.state.plant;\n    this.plantService\n      .deletePlant(plant.id)\n      .then(() => this.userService.deleteUserPlant(user, plant))\n      .then(() => this.userService.getUserByIdDeep(user.id))\n      .then(newUser => {\n        let userCoords = [];\n        newUser.plants.forEach(plant =>\n          userCoords.push(plant.location.coordinates)\n        );\n        newUser.locations = this.geoService.getUserLocationArr(\n          userCoords,\n          0.002\n        );\n        newUser.plants = newUser.plants.reduce((acc, plant) => {\n          acc.push(plant.id);\n          return acc;\n        }, []);\n        return this.userService.updateUser(newUser);\n      })\n      .then(() => this.props.history.push(\"/main\"))\n      .catch(error => console.error(error));\n  };\n\n  goBack = (e, id) => {\n    e.preventDefault();\n    this.props.history.push({\n      pathname: \"/user-detail\",\n      state: { id: id }\n    });\n  };\n\n  componentDidMount() {\n    if (this.props.location.state.flavour === \"create\") {\n      this.createNewPlant({ ...this.props.loggedInUser });\n    } else {\n      this.getPlant();\n    }\n  }\n\n  render() {\n    const { flavour, plant, name, common_name } = this.state;\n    const { sourceUserId } = this.props.location.state;\n    return (\n      <React.Fragment>\n        {this.state.plant && (\n          <React.Fragment>\n            {this.state.loadingFlag ? (\n              <LoadingOverlay />\n            ) : (\n              <React.Fragment>\n                <aside\n                  className={this.state.infoToggle ? \"show-aside\" : \"\"}\n                  onClick={this.toggleInfo}\n                >\n                  <h2>{capitalize(plant.common_name)}</h2>\n                  <p>{capitalize(plant.scientific_name)}</p>\n                  <div className=\"row\">\n                    <h3>Soil preference</h3>\n                    <p>\n                      {plant.soils_adaptation\n                        .map(a => capitalize(a))\n                        .join(\", \")}\n                    </p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Temperature minimun</h3>\n                    <p>{plant.temperature_minimun}&#176;C</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Shade tolerance</h3>\n                    <p>{plant.shade_tolerance}</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Yearly precipitation rate</h3>\n                    <p>{plant.year_rain_range}</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>pH range</h3>\n                    <p>{plant.ph_range}</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Fertilizer needs</h3>\n                    <p>{plant.fertilizer_req}</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Perennial</h3>\n                    <p>{plant.perennial ? \"Yes\" : \"No\"}</p>\n                  </div>\n                </aside>\n\n                {this.state.mapToggle && (\n                  <div className=\"map-wrapper\">\n                    <GmapsMap\n                      className=\"map\"\n                      lat={this.state.lat}\n                      lng={this.state.lng}\n                      picture={this.state.plant.picture}\n                      handleChange={this.handleLocChange}\n                    />\n                    <button\n                      className=\"map-btn\"\n                      onClick={this.toggleMap}\n                      style={{ backgroundImage: \"url(\" + InnerBgImg + \")\" }}\n                    ></button>\n                  </div>\n                )}\n\n                <PageTitle\n                  src=\"./images/green_care_w.svg\"\n                  alt=\"green care logo\"\n                  logoutHandler={this.props.handleLogout}\n                  controls={true}\n                />\n                <FormWrapper>\n                  <MutableTextInput\n                    name=\"name\"\n                    value={name}\n                    handleChange={this.handleChange}\n                    flavour={flavour}\n                    placeholder=\"Plant name\"\n                  />\n                  <ImageLoader\n                    picture={plant.picture}\n                    handleUpload={this.handleUpload}\n                    flavour={flavour}\n                  />\n                  <MutableTextInput\n                    className=\"sub-text\"\n                    name=\"common_name\"\n                    value={common_name}\n                    handleChange={this.handleChange}\n                    flavour={flavour}\n                    placeholder=\"Plant species\"\n                  />\n                  <ButtonsWrapper>\n                    <StyledButton\n                      img=\"../images/map_w.svg\"\n                      clicked={this.toggleMap}\n                    />\n                    <StyledButton\n                      img=\"../images/info_w.svg\"\n                      clicked={this.toggleInfo}\n                    />\n                    {flavour !== \"readonly\" && (\n                      <StyledButton\n                        img=\"../images/trash_b_w.svg\"\n                        clicked={this.deleteHandle}\n                      />\n                    )}\n                  </ButtonsWrapper>\n\n                  <FormRange\n                    id={\"waterSlider\"}\n                    name={\"waterInterval\"}\n                    value={this.state.waterInterval}\n                    handleChange={\n                      flavour !== \"readonly\" ? this.handleChange : () => \"\"\n                    }\n                    labelText=\"Watering interval\"\n                  />\n                  <FormRange\n                    id={\"fertSlider\"}\n                    name={\"fertilizerInterval\"}\n                    value={this.state.fertilizerInterval}\n                    handleChange={\n                      flavour !== \"readonly\" ? this.handleChange : () => \"\"\n                    }\n                    labelText=\"Fertilizer\"\n                  />\n                </FormWrapper>\n                <ModalButtons\n                  flavour={flavour}\n                  updateHandler={this.handleUpdate}\n                  sourceUserId={sourceUserId}\n                  goBackHandler={this.goBack}\n                />\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nexport default function PrivateRoute({\n  component: Component,\n  user,\n  logoutHandler,\n  redirectPath,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (user) {\n          return (\n            <Component\n              loggedInUser={user}\n              handleLogout={logoutHandler}\n              {...props}\n            />\n          );\n        } else {\n          return <Redirect to={{ pathname: redirectPath }} />;\n        }\n      }}\n    />\n  );\n}\n","import { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport React, { Component } from \"react\";\nimport userService from \"../../services/UserService\";\nimport InnerBgImg from \"./close_g.svg\";\nimport \"./GmapsPlaces.css\";\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from \"../../sharedComponents/LoadingOverlay\";\n\nconst mapStyles = {\n  width: \"100%\",\n  height: \"100%\"\n};\n\nclass GmapsMap extends Component {\n  constructor(props) {\n    super(props);\n    this.userService = new userService();\n    this.state = {\n      users: null,\n      loadingFlag: true,\n      getAside: false\n    };\n  }\n\n  componentDidMount() {\n    this.userService.getUsers().then(users =>\n      this.setState({\n        ...this.state,\n        users: users,\n        loadingFlag: false\n      })\n    );\n  }\n\n  displayMarkers = (location, idx) => {\n    return (\n      <Marker\n        key={idx}\n        draggable={false}\n        position={{\n          lat: location.lat,\n          lng: location.lng\n        }}\n        icon={{\n          url: location.picture,\n          size: { width: 60, height: 60 },\n          anchor: { x: 15, y: 30 },\n          scaledSize: { width: 30, height: 30 }\n        }}\n        text={location.name}\n        onClick={e =>\n          this.props.history.push({\n            pathname: \"/user-detail\",\n            state: { id: location.id }\n          })\n        }\n      />\n    );\n  };\n\n  render() {\n    let locations = null;\n    if (this.state.users) {\n      locations = this.state.users\n        .map(user => {\n          return user.locations.map(location => ({\n            lat: location[0],\n            lng: location[1],\n            name: user.username,\n            id: user.id,\n            picture: user.picture\n          }));\n        })\n        .flat();\n    }\n    return (\n      <React.Fragment>\n        {this.state.loadingFlag ? (\n          <LoadingOverlay />\n        ) : (\n          <div className=\"map-wrapper\">\n            <Map\n              className=\"map\"\n              google={this.props.google}\n              zoom={15}\n              style={mapStyles}\n              initialCenter={{\n                lat: 40.00017181918281,\n                lng: -3.500384701223889\n              }}\n              fullscreenControl={false}\n            >\n              {locations.map((location, idx) =>\n                this.displayMarkers(location, idx)\n              )}\n            </Map>\n            <Link to={{ pathname: \"/main\" }}>\n              <button\n                className=\"map-btn\"\n                onClick={this.toggleMap}\n                style={{ backgroundImage: \"url(\" + InnerBgImg + \")\" }}\n              ></button>\n            </Link>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCm0meO5cjbh70YvG6BIQVh5GqRHXHG7Uw\"\n})(GmapsMap);\n","import React, { Component } from \"react\";\nimport ImageLoader from \"../../sharedComponents/ImageLoader\";\nimport ModalButtons from \"../../sharedComponents/ModalButtons\";\nimport userService from \"../../services/UserService\";\nimport capitalize from \"../../globalStyles/utils\";\nimport LoadingOverlay from \"../../sharedComponents/LoadingOverlay\";\nimport PageTitle from \"../../sharedComponents/PageTitle\";\nimport \"./UserDetail.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default class UserDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.userService = new userService();\n    this.state = {\n      name: null,\n      loadingFlag: true,\n      email: \"\",\n      plants: null,\n      picture: null\n    };\n  }\n\n  componentDidMount() {\n    this.userService\n      .getUserByIdDeep(this.props.location.state.id)\n      .then(user => {\n        this.setState({\n          ...this.state,\n          name: user.username,\n          plants: [...user.plants],\n          email: user.email,\n          loadingFlag: false,\n          picture: user.picture\n        });\n      });\n  }\n\n  render() {\n    const { name, email, picture, plants } = this.state;\n    const userId = this.props.location.state.id;\n    return (\n      <React.Fragment>\n        {this.state.loadingFlag ? (\n          <LoadingOverlay />\n        ) : (\n          plants && (\n            <React.Fragment>\n              <PageTitle logoutHandler={this.props.handleLogout} controls={true}/>\n              <div className=\"big-div\">\n                <h1>{capitalize(name)}</h1>\n                <ImageLoader\n                  picture={picture}\n                  handleUpload={() => \"\"}\n                  flavour=\"readonly\"\n                />\n                <h2 className=\"email-row\">{email}</h2>\n                <div className=\"small-div\">\n                  {plants.splice(0, 3).map((plant, idx) => (\n                    <Link\n                      key={idx}\n                      to={{\n                        pathname: `/plant-detail/${plant.id}`,\n                        state: {\n                          flavour: \"readonly\",\n                          sourceUserId: `${userId}`\n                        }\n                      }}\n                    >\n                      <ImageLoader\n                        picture={plant.picture}\n                        handleUpload={() => \"\"}\n                        flavour=\"readonly\"\n                        size=\"120\"\n                      />\n                    </Link>\n                  ))}\n                </div>\n                <ModalButtons updateHandler={() => \"\"} flavour=\"readonly\" />\n              </div>\n            </React.Fragment>\n          )\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport \"moment-recur\";\n\nclass CalendarService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_WEATHER_URL}`\n    });\n  }\n\n  getDaysWithTask = (initialDay, currentDay, taskInterval, numberOfDays) => {\n    let daysWithTask = [];\n    const initialDate = moment(initialDay);\n    const currentDate = moment(currentDay);\n\n    if (\n      initialDate.isValid() &&\n      currentDate.isValid() &&\n      taskInterval > 0 &&\n      numberOfDays > 0\n    ) {\n      const recurrence = moment().recur(\n        initialDate,\n        moment(currentDate).add(numberOfDays, \"days\")\n      );\n      recurrence.every(taskInterval, \"days\");\n      daysWithTask = recurrence.fromDate(currentDate).all(\"YYYY-MM-DD\");\n    }\n\n    return daysWithTask;\n  };\n\n  getForecast = (lat, lng) => {\n    return this.instance\n      .get(\n        `daily/?key=${process.env.REACT_APP_WEATHER_TOKEN}&lat=${lat}&lon=${lng}`\n      )\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  getIcon = iconCode => {\n    switch (iconCode) {\n      case 700:\n      case 711:\n      case 721:\n      case 731:\n      case 803:\n      case 804:\n        return \"cloud\";\n      case 800:\n      case 801:\n      case 802:\n        return \"sun\";\n      case 232:\n      case 511:\n      case 600:\n      case 601:\n      case 602:\n      case 621:\n      case 622:\n      case 751:\n        return \"snow\";\n      default:\n        return \"rain\";\n    }\n  };\n}\n\nexport default CalendarService;\n","import React, { Component } from \"react\";\nimport \"./CalendarDay.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default class CalendarDay extends Component {\n  render() {\n    return (\n      <div className=\"day-container\">\n        <div className=\"task-wrapper\">\n          <span className=\"day-slug\">{this.props.daySlug}</span>\n          <div  className=\"links-wrapper\">\n            {this.props.plantList.map((plant, idx) => (\n              <Link\n                key={idx}\n                to={{\n                  pathname: `/plant-update/${plant[0]}`,\n                  state: {\n                    flavour: \"update\"\n                  }\n                }}\n              >\n                <img\n                  className={`task-pic task-pic-${plant[2]}`}\n                  src={plant[1]}\n                  alt=\"\"\n                />\n              </Link>\n            ))}\n          </div>\n        </div>\n        <img className=\"weather-icon\" src={this.props.weatherIcon} alt=\"\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PageTitle from \"../../sharedComponents/PageTitle\";\nimport userService from \"../../services/UserService\";\nimport calendarService from \"../../services/CalendarService\";\nimport InnerBgImg from \"./close_w.svg\";\nimport \"./Calendar.css\";\nimport moment from \"moment\";\nimport CalendarDay from \"../CalendarDay/CalendarDay\";\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from \"../../sharedComponents/LoadingOverlay\";\n\nexport default class Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.userService = new userService();\n    this.calendarService = new calendarService();\n    this.state = {\n      loadingFlag: true,\n      emptyCalendar: true\n    };\n  }\n\n  getDaysArray = (days, plants) => {\n    let firstDay = days[0].date;\n    let numberOfDays = days.length;\n    let tasksArr = plants.reduce((arr, plant) => {\n      plant.tasks.forEach(task => {\n        let dateArr = this.calendarService.getDaysWithTask(\n          task.begin_day,\n          firstDay,\n          task.day_interval,\n          numberOfDays\n        );\n        dateArr.forEach(date =>\n          arr.push({\n            date: date,\n            type: task.type === \"WATER\" ? \"blue\" : \"red\",\n            id: plant.id,\n            picture: plant.picture\n          })\n        );\n      });\n      return arr;\n    }, []);\n\n    return days.map(day => {\n      let tasks = tasksArr.filter(e => e.date === day.date).map(task=>[task.id,task.picture,task.type]);\n      return { ...day, tasks: tasks };\n    });\n  };\n\n  componentDidMount() {\n    if (this.props.loggedInUser.locations.length > 0) {\n      let forecast = null;\n      this.calendarService\n        .getForecast(\n          this.props.loggedInUser.locations[0][0],\n          this.props.loggedInUser.locations[0][1]\n        )\n        .then(res => {\n          forecast = res.data.map(day => ({\n            date: day.valid_date,\n            icon: this.calendarService.getIcon(day.weather.code)\n          }));\n          return this.userService\n            .getUserByIdDeep(this.props.loggedInUser.id)\n            .then(user => {\n              this.setState({\n                ...this.state,\n                user: user,\n                loadingFlag: false,\n                emptyCalendar: false,\n                forecast: forecast\n              });\n            });\n        });\n    }\n  }\n\n  render() {\n    let daysList = null;\n    if (this.state.forecast && this.state.user.plants) {\n      daysList = this.getDaysArray(this.state.forecast, this.state.user.plants);\n    }\n    return (\n      <React.Fragment>\n        {this.state.loadingFlag ? (\n          <LoadingOverlay />\n        ) : (\n          <div>\n            <header>\n              <PageTitle className=\"title-box\" />\n              <Link to={{ pathname: \"/main\" }}>\n                <button\n                  className=\"close-btn\"\n                  style={{ backgroundImage: \"url(\" + InnerBgImg + \")\" }}\n                ></button>\n              </Link>\n            </header>\n            {this.state.emptyCalendar && (\n              <h1>You have no plants yet, go back and add some !</h1>\n            )}\n            {this.state.user && (\n              <React.Fragment>\n                {daysList &&\n                  daysList.map((day, idx) => (\n                    <CalendarDay\n                      key={idx}\n                      daySlug={moment(day.date).format(\"dd\")}\n                      weatherIcon={`./images/${day.icon}.svg`}\n                      plantList={day.tasks}\n                    ></CalendarDay>\n                  ))}\n              </React.Fragment>\n            )}\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport SignUp from \"./components/Signup/Signup\";\nimport Main from \"./components/Main/Main\";\nimport Profile from \"./components/Profile/Profile\"\nimport PlantDetail from \"./components/PlantDetail/PlantDetail\";\nimport AuthService from \"./services/AuthService\";\nimport PrivateRoute from \"./guards/PrivateRoute\";\nimport GoogleMap from \"./components/GmapsPlaces/GmapsPlaces\";\nimport UserDetail from \"./components/UserDetail/UserDetail\";\nimport Calendar from \"./components/Calendar/Calendar\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n    this.state = {\n      user: null,\n      flag: false\n    };\n  }\n\n  setUser = user => {\n    this.setState({ ...this.state, user });\n  };\n\n  fetchUser = () => {\n    if (this.state.user === null) {\n      this.authService\n        .loggedInUser()\n        .then(\n          user => {\n            this.setUser(user);\n          },\n          error => {\n            this.setUser(false);\n          }\n        )\n        .catch(() => {\n          this.setUser(false);\n        });\n    }\n  };\n\n  logout = (match) => {\n    this.authService.logout().then(response => {\n      this.setState({\n        ...this.state,\n        user: null\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  render() {\n    let { user } = this.state;\n    return (\n      <div className=\"App\">\n        {user && (\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={match => <Login {...match} setUser={this.setUser} />}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={match => <SignUp {...match} setUser={this.setUser} />}\n            />\n            <PrivateRoute exact path=\"/main\" user={user} component={Main} logoutHandler={this.logout}/>\n            <PrivateRoute exact path=\"/plant-detail/:plantId\" user={user} component={PlantDetail} logoutHandler={this.logout} />\n            <PrivateRoute exact path=\"/plant-update/:plantId\" user={user} component={PlantDetail} logoutHandler={this.logout} />\n            <PrivateRoute exact path=\"/plant/new\" user={user} component={PlantDetail} logoutHandler={this.logout} />\n            <PrivateRoute exact path=\"/profile\" user={user} component={Profile} logoutHandler={this.logout} />\n            <PrivateRoute exact path=\"/plants-map\" user={user} component={GoogleMap} logoutHandler={this.logout} />\n            <PrivateRoute exact path=\"/user-detail\" user={user} component={UserDetail} logoutHandler={this.logout} />\n            <PrivateRoute exact path=\"/calendar\" user={user} component={Calendar} logoutHandler={this.logout} />\n          </Switch>\n        )}\n        {!user && (\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={match => <Login {...match} setUser={this.setUser} />}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={match => <SignUp {...match} setUser={this.setUser} />}\n            />\n            <Route\n              path=\"/\"\n              render={match => <Redirect to={{pathname: \"/login\"}}/>}\n            />\n          </Switch>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}