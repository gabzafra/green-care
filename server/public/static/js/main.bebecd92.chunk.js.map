{"version":3,"sources":["globalStyles/colors.js","fontStyles/StyledCloseBtn.js","fontStyles/ProfileBtn.js","fontStyles/PageTitle.js","services/AuthService.js","components/Login/StyledLogin.js","fontStyles/Leaf.js","components/Login/Login.js","components/Signup/StyledSignup.js","components/Signup/Signup.js","services/PlantService.js","services/TaskService.js","services/UserService.js","services/GeoService.js","globalStyles/utils.js","components/PlantCard/StyledPlantCard.js","fontStyles/StyledButton.js","fontStyles/ModalButtons.js","components/Main/Main.js","fontStyles/ImageLoader.js","fontStyles/LoadingOverlay.js","components/Profile/Profile.js","fontStyles/FormRange.js","fontStyles/MutableTextInput.js","components/GmapsMap/GmapsMap.jsx","components/PlantDetail/PlantDetail.js","guards/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["colors","green","white","red","blue","gray","StyledButton","styled","button","props","btnColor","CloseBtn","logout","onClick","ProfileBtn","to","pathname","HeaderWrapper","div","LogoImg","img","ControlsWrapper","PageTitle","src","alt","logoutHandler","AuthService","signup","user","instance","post","then","res","Promise","resolve","data","catch","error","console","login","loggedInUser","get","upload","picture","this","axios","create","baseURL","process","withCredentials","StyledLogin","StyledInput","input","StyledLabel","label","Login","username","password","handleChange","placeholder","htmlFor","type","name","value","onChange","className","LeafIma","LeafLogo","state","e","target","setState","handleLogin","setUser","history","preventDefault","authService","push","Leaf","onSubmit","Component","StyledSignup","StyledError","p","Signup","passwordR","SignUp","handleSignUp","Fragment","handleLogout","PlantService","getPlantById","plantId","getUserPlants","userId","createPlant","plant","deletePlant","delete","updatePlant","put","uploadPlantImage","TaskService","createTasks","taskArr","createTask","task","updateTask","deleteTask","UserService","getUsers","getUserByIdDeep","id","getUserByIdShallow","updateUser","updateUserProfile","deleteUserPlant","payload","uploadUserImage","GeoService","calcDistance","lat1","lng1","lat2","lng2","dLat","toRad","dLng","a","Math","sin","cos","atan2","sqrt","PI","getUserLocationArr","locations","radius","resultArr","length","currentLoc","pop","nextLoc","capitalize","word","split","map","i","toUpperCase","join","CardContainer","PlantPortrait","PlantInfo","ControlButtons","PlantCard","common_name","flavour","GenericBtn","Button","clicked","BtnWrapper","Buttons","updateHandler","Main","updatePlants","plantService","plants","message","find","userService","newUser","userCoords","forEach","location","coordinates","geoService","reduce","acc","taskService","key","ModalButtons","InputField","CustomLabel","Loader","handleUpload","LoadingOverlay","Profile","uploadData","FormData","append","files","loadingFlag","secure_url","handleUpdate","email","current_pass","new_pass","repeat_pass","ImageLoader","Label","RangeInput","RangeWrapper","NumberBoard","labelText","forHtml","step","min","max","StaticField","Input","mapStyles","width","height","GmapsMap","displayMarkers","stores","store","index","draggable","position","lat","latitude","lng","longitude","icon","url","size","anchor","x","y","scaledSize","onDragend","log","google","zoom","style","initialCenter","fullscreenControl","GoogleApiWrapper","apiKey","FormWrapper","form","ButtonsWrapper","PlantDetail","toggleInfo","infoToggle","toggleMap","mapToggle","tasks","filter","sort","b","day_interval","waterInterval","fertilizerInterval","begin_day","Date","getPlant","params","match","deleteHandle","navigator","geolocation","getCurrentPosition","doCreate","coords","currentPosition","newTasks","newPlant","scientific_name","soils_adaptation","temperature_minimun","shade_tolerance","year_rain_range","ph_range","fertilizer_req","perennial","createdPlant","createNewPlant","MutableTextInput","FormRange","PrivateRoute","component","redirectPath","rest","render","App","fetchUser","response","flag","exact","path","GoogleMap","React","Boolean","window","hostname","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"kbAQeA,EARA,CACXC,MAAK,UACLC,MAAK,UACLC,IAAG,UACHC,KAAK,UACLC,KAAK,W,8UCAT,IAAMC,EAAeC,IAAOC,OAAV,IAEUR,EAAOC,OACP,SAAAQ,GAAK,MAAuB,UAAnBA,EAAMC,SAAuB,6BAA8B,+BAgBjFC,EAPE,SAAAF,GAAU,IACfC,EAAoBD,EAApBC,SAASE,EAAWH,EAAXG,OACjB,OACQ,kBAACN,EAAD,CAAcI,SAAUA,EAAUG,QAASD,K,qVCfvD,IAAMN,EAAeC,IAAOC,OAAV,IAEUR,EAAOC,OACP,SAAAQ,GAAK,MAAuB,UAAnBA,EAAMC,SAAuB,4BAA6B,8BAkBhFI,EATI,SAAAL,GAAU,IACjBC,EAAaD,EAAbC,SACR,OACI,kBAAC,IAAD,CAAMK,GAAI,CAACC,SAAS,aAChB,kBAAC,EAAD,CAAcN,SAAUA,M,wZChBpC,IAAMO,EAAgBV,IAAOW,IAAV,KAQbC,EAAUZ,IAAOa,IAAV,KAKPC,EAAkBd,IAAOW,IAAV,KAgBNI,EAXG,SAAAb,GAChB,OACE,kBAACQ,EAAD,KACE,kBAACE,EAAD,CAASI,IAAI,6BAA6BC,IAAI,oBAC9C,kBAACH,EAAD,KACE,kBAAC,EAAD,CAAUX,SAAU,QAASE,OAAQH,EAAMgB,gBAC3C,kBAAC,EAAD,CAAYf,SAAU,a,iBCcfgB,EAxCb,aAAe,IAAD,gCAOdC,OAAS,SAACC,GACR,OAAO,EAAKC,SAASC,KAAK,UAAWF,GACpCG,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAVlB,KAadE,MAAQ,SAACX,GACP,OAAO,EAAKC,SAASC,KAAK,SAAUF,GACnCG,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAhBlB,KAmBdG,aAAe,WACb,OAAO,EAAKX,SAASY,IAAI,aACxBV,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAtBlB,KAyBdzB,OAAS,WACP,OAAO,EAAKiB,SAASC,KAAK,WACzBC,MAAK,SAAAC,GACJ,OAAOC,QAAQC,QAAQF,EAAIG,SAE5BC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OA9BlB,KAiCdK,OAAS,SAACC,GACR,OAAO,EAAKd,SAASC,KAAK,UAAWa,GACpCZ,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAnC9BO,KAAKf,SAAWgB,IAAMC,OAAO,CAC3BC,QAAQ,GAAD,OAAKC,uCAAL,SACPC,iBAAiB,K,2wCCDvB,IAAMC,EAAc3C,IAAOW,IAAV,IAYGlB,EAAOE,MACZF,EAAOC,MAYLD,EAAOE,MAMJF,EAAOC,MACDD,EAAOE,OAK3BiD,EAAc5C,IAAO6C,MAAV,IACNpD,EAAOK,KAWLL,EAAOK,MAIdgD,EAAc9C,IAAO+C,MAAV,IAINtD,EAAOE,OAmCHqD,EA9BD,SAAA9C,GAAU,IACd+C,EAAkD/C,EAAlD+C,SAAUC,EAAwChD,EAAxCgD,SAAUC,EAA8BjD,EAA9BiD,aAAcC,EAAgBlD,EAAhBkD,YAC1C,OACE,kBAACT,EAAD,KACE,kBAACG,EAAD,CAAaO,QAAQ,YAArB,eACA,kBAACT,EAAD,CACEU,KAAK,OACLC,KAAK,WACLC,MAAOP,EACPQ,SAAUN,EACVC,YAAaA,IAEf,kBAACN,EAAD,CAAaO,QAAQ,YAArB,cACA,kBAACT,EAAD,CACEU,KAAK,WACLC,KAAK,WACLC,MAAON,EACPO,SAAUN,IAEZ,yBAAKO,UAAW,cACd,4BAAQA,UAAW,aACjB,2BAAOJ,KAAK,SAASE,MAAM,WAE7B,kBAAC,IAAD,CAAMhD,GAAI,CAACC,SAAS,YAAY,gD,qHCvFxC,IAAMkD,EAAS3D,IAAOa,IAAT,KAQE+C,EAFE,kBAAO,kBAACD,EAAD,CAAS3C,IAAI,sBAAsBC,IAAI,gBCD1C+B,E,YACnB,WAAY9C,GAAQ,IAAD,8BACjB,4CAAMA,KAIR2D,MAAQ,CACNZ,SAAU,MACVC,SAAU,KAPO,EASnBC,aAAe,SAACW,GAAO,IAAD,EACIA,EAAEC,OAAlBR,EADY,EACZA,KAAMC,EADM,EACNA,MACd,EAAKQ,SAAL,eAAkB,EAAKH,MAAvB,eAA+BN,EAAMC,MAXpB,EAanBS,YAAc,SAACH,GAAO,IAAD,EACU,EAAK5D,MAA1BgE,EADW,EACXA,QAASC,EADE,EACFA,QACjBL,EAAEM,iBACF,EAAKC,YAAYrC,MAAM,EAAK6B,OAC3BrC,MACC,SAACH,GACC6C,EAAQ7C,GACR8C,EAAQG,KAAK,YAEf,SAACxC,GACCC,QAAQD,MAAMA,OArBlB,EAAKuC,YAAc,IAAIlD,EAFN,E,sEA4BT,IAAD,EACwBkB,KAAKwB,MAA5BZ,EADD,EACCA,SAAUC,EADX,EACWA,SAClB,OACE,yBAAKQ,UAAU,iBACb,kBAAC,EAAD,MACA,kBAACa,EAAD,MACA,0BAAMC,SAAUnC,KAAK4B,aACnB,kBAAC,EAAD,CAAahB,SAAUA,EAAUC,SAAUA,EAAUC,aAAcd,KAAKc,aAAcc,YAAa5B,KAAK4B,YAAab,YAAa,oB,GApCzGqB,a,4mDCHnC,IAAMC,EAAe1E,IAAOW,IAAV,IAYElB,EAAOE,MACZF,EAAOC,MAYLD,EAAOE,MAMJF,EAAOC,MACDD,EAAOE,MAIbF,EAAOG,IACDH,EAAOE,MAClBF,EAAOE,OAKhBiD,EAAc5C,IAAO6C,MAAV,IACNpD,EAAOK,KAWLL,EAAOK,MAIdgD,EAAc9C,IAAO+C,MAAV,IAINtD,EAAOE,OAKZgF,EAAc3E,IAAO4E,EAAV,IAKNnF,EAAOE,MACIF,EAAOG,KA4CdiF,GAvCA,SAAA3E,GAAU,IACf+C,EAAoE/C,EAApE+C,SAAUC,EAA0DhD,EAA1DgD,SAAU4B,EAAgD5E,EAAhD4E,UAAW3B,EAAqCjD,EAArCiD,aAAcC,EAAuBlD,EAAvBkD,YAAatB,EAAU5B,EAAV4B,MAClE,OACE,kBAAC4C,EAAD,KACE,kBAAC,EAAD,CAAarB,QAAQ,YAArB,mBACA,kBAAC,EAAD,CACEC,KAAK,OACLC,KAAK,WACLC,MAAOP,EACPQ,SAAUN,EACVC,YAAaA,IAEf,kBAAC,EAAD,CAAaC,QAAQ,YAArB,kBACA,kBAAC,EAAD,CACEC,KAAK,WACLC,KAAK,WACLC,MAAON,EACPO,SAAUN,IAEZ,kBAAC,EAAD,CAAaE,QAAQ,aAArB,qBACA,kBAAC,EAAD,CACEC,KAAK,WACLC,KAAK,YACLC,MAAOsB,EACPrB,SAAUN,IAEXrB,GAAS,kBAAC6C,EAAD,KAAc7C,GACxB,yBAAK4B,UAAW,cACd,4BAAQA,UAAW,aACjB,2BAAOJ,KAAK,SAASE,MAAM,iBAE7B,kBAAC,IAAD,CAAMhD,GAAI,CAACC,SAAS,WAClB,4BAAQiD,UAAW,WAAnB,cC9GWqB,G,YACnB,WAAY7E,GAAQ,IAAD,8BACjB,4CAAMA,KAIR2D,MAAQ,CACNZ,SAAU,GACVC,SAAU,GACV4B,UAAW,GACXhD,MAAO,IATU,EAYnBqB,aAAe,SAAAW,GAAM,IAAD,EACMA,EAAEC,OAAlBR,EADU,EACVA,KAAMC,EADI,EACJA,MACd,EAAKQ,SAAL,eAAmB,EAAKH,MAAxB,eAAgCN,EAAOC,MAdtB,EAgBnBwB,aAAe,SAAAlB,GAEb,GADAA,EAAEM,iBACE,EAAKP,MAAMX,WAAa,EAAKW,MAAMiB,UAAW,CAAC,IAAD,EACnB,EAAK5E,MAA1BiE,EADwC,EACxCA,QAASD,EAD+B,EAC/BA,QACjB,EAAKG,YAAYjD,OAAO,EAAKyC,OAAOrC,MAClC,SAAAH,GACE6C,EAAQ7C,GACR8C,EAAQG,KAAK,QAEf,SAAAxC,GACE,EAAKkC,SAAL,eAAmB,EAAKH,MAAxB,CAA+B/B,MAAOA,aAI1C,EAAKkC,SAAL,eAAmB,EAAKH,MAAxB,CAA+B/B,MAAO,2BA5BxC,EAAKuC,YAAc,IAAIlD,EAFN,E,sEAkCT,IAAD,EAC0CkB,KAAKwB,MAA9CZ,EADD,EACCA,SAAUC,EADX,EACWA,SAAU4B,EADrB,EACqBA,UAAWhD,EADhC,EACgCA,MACvC,OACE,kBAAC,IAAMmD,SAAP,KACE,kBAAC,EAAD,CAAWjE,IAAI,4BAA4BC,IAAI,kBAAkBC,cAAemB,KAAKnC,MAAMgF,eAC3F,0BAAMxB,UAAU,eAAec,SAAUnC,KAAK2C,cAC5C,kBAAC,GAAD,CACE/B,SAAUA,EACVC,SAAUA,EACV4B,UAAWA,EACX3B,aAAcd,KAAKc,aACnBC,YAAa,YACbtB,MAAOA,U,GA/CiB2C,aC+CrBU,I,MAlDb,aAAe,IAAD,gCAOdC,aAAe,SAAAC,GACb,OAAO,EAAK/D,SACTY,IADI,WACImD,IACR7D,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAXpB,KAcdwD,cAAgB,SAAAC,GACd,OAAO,EAAKjE,SACTY,IADI,gBACSqD,IACb/D,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAlBpB,KAqBd0D,YAAc,SAAAC,GACZ,OAAO,EAAKnE,SACTC,KAAK,UAAWkE,GAChBjE,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAzBpB,KA4Bd4D,YAAc,SAAAL,GACZ,OAAO,EAAK/D,SACTqE,OADI,kBACcN,IAClB7D,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAhCpB,KAmCd8D,YAAc,SAAAH,GACZ,OAAO,EAAKnE,SACTuE,IADI,UACWJ,GACfjE,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAvCpB,KA0CdgE,iBAAmB,SAAA1D,GACjB,OAAO,EAAKd,SACTC,KAAK,UAAWa,GAChBZ,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OA7ChCO,KAAKf,SAAWgB,IAAMC,OAAO,CAC3BC,QAAQ,GAAD,OAAKC,uCAAL,WACPC,iBAAiB,MCkCRqD,GArCb,aAAe,IAAD,gCAOdC,YAAc,SAAAC,GACZ,OAAO,EAAK3E,SACTC,KAAK,eAAgB0E,GACrBzE,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAXpB,KAcdoE,WAAa,SAACb,EAASc,GAErB,OADAA,EAAKd,QAAUA,EACR,EAAK/D,SACTC,KAAK,UAAW4E,GAChB3E,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAnBpB,KAsBdsE,WAAa,SAACD,GACZ,OAAO,EAAK7E,SACTuE,IAAI,UAAWM,GACf3E,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OA1BpB,KA6BduE,WAAa,SAACF,GACZ,OAAO,EAAK7E,SACTuE,IAAI,UAAWM,GACf3E,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAhChCO,KAAKf,SAAWgB,IAAMC,OAAO,CAC3BC,QAAQ,GAAD,OAAKC,uCAAL,UACPC,iBAAiB,KCgDR4D,GAnDb,aAAe,IAAD,gCAOdC,SAAW,WACT,OAAO,EAAKjF,SAASY,IAAd,QACNV,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAVlB,KAad0E,gBAAkB,SAACC,GACjB,OAAO,EAAKnF,SAASY,IAAd,gBAA2BuE,IACjCjF,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAhBlB,KAmBd4E,mBAAqB,SAACD,GACpB,OAAO,EAAKnF,SAASY,IAAd,mBAA8BuE,IACpCjF,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAtBlB,KAyBd6E,WAAa,SAACtF,GACZ,OAAO,EAAKC,SAASuE,IAAI,UAAUxE,GAClCG,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OA5BlB,KA+Bd8E,kBAAoB,SAACvF,GACnB,OAAO,EAAKC,SAASuE,IAAI,kBAAkBxE,GAC1CG,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAlClB,KAqCd+E,gBAAiB,SAACxF,EAAMoE,GACtB,IAAIqB,EAAU,CAACzF,KAAKA,EAAMoE,MAAOA,GACjC,OAAO,EAAKnE,SAASuE,IAAI,eAAeiB,GACvCtF,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAzClB,KA4CdiF,gBAAkB,SAAC3E,GACjB,OAAO,EAAKd,SAASC,KAAK,UAAWa,GACpCZ,MAAK,SAAAC,GAAG,OAAIC,QAAQC,QAAQF,EAAIG,SAChCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OA9C9BO,KAAKf,SAAWgB,IAAMC,OAAO,CAC3BC,QAAQ,GAAD,OAAKC,uCAAL,UACPC,iBAAiB,KCmCRsE,GAxCX,aAAe,IAAD,gCACdC,aAAe,SAACC,EAAMC,EAAMC,EAAMC,GAC9B,IACIC,EAAO,EAAKC,MAAMH,EAAOF,GACzBM,EAAO,EAAKD,MAAMF,EAAOF,GAC7BD,EAAO,EAAKK,MAAML,GAClBE,EAAO,EAAKG,MAAMH,GAElB,IAAIK,EACFC,KAAKC,IAAIL,EAAO,GAAKI,KAAKC,IAAIL,EAAO,GACrCI,KAAKC,IAAIH,EAAO,GAAKE,KAAKC,IAAIH,EAAO,GAAKE,KAAKE,IAAIV,GAAQQ,KAAKE,IAAIR,GAGtE,OAXU,MASF,EAAIM,KAAKG,MAAMH,KAAKI,KAAKL,GAAIC,KAAKI,KAAK,EAAIL,MAXzC,KAgBdF,MAAQ,SAAC/D,GACL,OAAQA,EAAQkE,KAAKK,GAAM,KAjBjB,KAoBdC,mBAAqB,SAACC,GAA8B,IAAnBC,EAAkB,uDAAT,IAClCC,EAAY,GAChB,GAAIF,EAAUG,OAAS,EAAG,CACxB,IAAIC,EAAaJ,EAAUK,MAE3B,IADAH,EAAU7D,KAAK+D,GACRJ,EAAUG,OAAS,GAAG,CAC3B,IAAIG,EAAUN,EAAUK,MAEtB,EAAKrB,aAAaoB,EAAW,GAAIA,EAAW,GAAIE,EAAQ,GAAIA,EAAQ,IACpEL,IAEAC,EAAU7D,KAAKiE,GACfF,EAAaE,IAInB,OAAOJ,ICpCAK,I,MADI,SAACC,GAAD,OAAUA,EAAKC,MAAM,IAAIC,KAAI,SAAC7E,EAAE8E,GAAH,OAAU,GAAHA,EAAK9E,EAAE+E,cAAc/E,KAAGgF,KAAK,M,mhCCOpF,IAAMC,GAAgB/I,IAAOW,IAAV,MAMbqI,GAAgBhJ,IAAOa,IAAV,KAIGpB,EAAOE,OAIvBsJ,GAAYjJ,IAAOW,IAAV,KACJlB,EAAOE,OAaZuJ,GAAiBlJ,IAAOW,IAAV,KAIIlB,EAAOC,OAmEhByJ,GAlDG,SAAAjJ,GAAU,IAAD,EAC+BA,EAAMuF,MAAtDgB,EADiB,EACjBA,GAAIrE,EADa,EACbA,QAASmB,EADI,EACJA,KAAM6F,EADF,EACEA,YAAa1D,EADf,EACeA,YACxC,OACE,kBAACqD,GAAD,KACE,kBAAC,IAAD,CACEvI,GAAI,CACFC,SAAS,iBAAD,OAAmBgG,GAC3B5C,MAAO,CACLwF,QAAS,cAIb,kBAACL,GAAD,CAAevC,GAAIA,EAAIzF,IAAKoB,KAE9B,yBAAKsB,UAAU,gBACb,kBAAC,IAAD,CACElD,GAAI,CACFC,SAAS,iBAAD,OAAmBgG,GAC3B5C,MAAO,CACLwF,QAAS,cAIb,kBAACJ,GAAD,CAAWxC,GAAIA,GACb,4BAAK+B,GAAWjF,IAChB,2BAAIiF,GAAWY,MAGnB,kBAACF,GAAD,KACE,kBAAC,IAAD,CACE1I,GAAI,CACFC,SAAS,iBAAD,OAAmBgG,GAC3B5C,MAAO,CACLwF,QAAS,YAIb,4BAAQ3F,UAAU,cAEpB,4BACEA,UAAU,aACV+C,GAAIA,EACJnG,QAAS,SAAAwD,GAAC,OAAI4B,EAAY5B,U,4TC9FtC,IAAMwF,GAAatJ,IAAOC,OAAV,KAEMR,EAAOC,OACH,SAAAQ,GAAK,OAAIA,EAAMW,OAmB1B0I,GATA,SAAArJ,GAAU,IACfW,EAAiBX,EAAjBW,IAAK2I,EAAYtJ,EAAZsJ,QACb,OACE,kBAAC,IAAMvE,SAAP,KACI,kBAACqE,GAAD,CAAYzI,IAAKA,EAAKP,QAAS,SAAAwD,GAAC,OAAE0F,EAAQ1F,Q,sxBCflD,IAAMwF,GAAatJ,IAAOC,OAAV,KAELR,EAAOE,OAaZ8J,GAAazJ,IAAOW,IAAV,KAMElB,EAAOC,MACDD,EAAOE,MAGbF,EAAOG,IAGPH,EAAOE,MACZF,EAAOC,OA0FLgK,GAjFC,SAAAxJ,GAAU,IAChByJ,EAA2BzJ,EAA3ByJ,cAAeN,EAAYnJ,EAAZmJ,QACvB,OACE,kBAACI,GAAD,KACI,WACA,OAAQJ,GACN,IAAK,WACH,OACE,kBAAC,IAAD,CAAM7I,GAAI,CAAEC,SAAS,UACnB,kBAAC,GAAD,CAAYiD,UAAU,WAAtB,YAGN,IAAK,SACH,OACE,kBAAC,IAAMuB,SAAP,KACE,kBAAC,IAAD,CAAMzE,GAAI,CAAEC,SAAS,UACnB,kBAAC,GAAD,CAAYiD,UAAU,WAAtB,WAEF,kBAAC,GAAD,CACEA,UAAU,YACVpD,QAAS,SAAAwD,GAAC,OAAI6F,EAAc7F,KAF9B,WAQN,IAAK,SACH,OACE,kBAAC,IAAMmB,SAAP,KACE,kBAAC,GAAD,CACEvB,UAAU,YACVpD,QAAS,SAAAwD,GAAC,OAAI6F,EAAc7F,KAF9B,WAQN,IAAK,OACH,OACE,kBAAC,IAAMmB,SAAP,KACE,kBAAC,GAAD,CAAcpE,IAAK,6BACnB,kBAAC,IAAD,CACEL,GAAI,CACFC,SAAS,aACToD,MAAO,CACLwF,QAAS,YAIb,kBAAC,GAAD,CAAY3F,UAAU,WAAtB,MAGF,kBAAC,IAAD,CACElD,GAAI,CACFC,SAAS,gBAGX,kBAAC,GAAD,CAAcI,IAAK,sBAAuB2I,QAAS,iBAAI,QAI/D,QACE,OACE,kBAAC,IAAMvE,SAAP,KACE,kBAAC,IAAD,CAAMzE,GAAI,CAAEC,SAAS,UACnB,kBAAC,GAAD,CAAYiD,UAAU,WAAtB,WAEF,kBAAC,GAAD,CACEA,UAAU,YACVpD,QAAS,SAAAwD,GAAC,OAAI6F,EAAc7F,KAF9B,YA/DR,KCtCa8F,G,YACnB,WAAY1J,GAAQ,IAAD,8BACjB,4CAAMA,KAUR2J,aAAe,WACb,EAAKC,aAAaxE,cAAc,EAAKpF,MAAM+B,aAAawE,IAAIjF,MAC1D,SAAAuI,GACE,EAAK/F,SAAL,eAAmB,EAAKH,MAAxB,CAA+BkG,eAEjC,SAAAjI,GAAU,IACAkI,EAAYlI,EAAZkI,QACRjI,QAAQD,MAAMkI,OAlBD,EAuBnBtE,YAAc,SAAA5B,GACZA,EAAEM,iBACF,IAAI/C,EAAI,eAAO,EAAKnB,MAAM+B,cACtBwD,EAAQ,EAAK5B,MAAMkG,OAAOE,MAAK,SAAAxE,GAAK,OAAIA,EAAMgB,KAAO3C,EAAEC,OAAO0C,MAClE,EAAKqD,aACApE,YAAYD,EAAMgB,IAClBjF,MAAK,kBAAI,EAAK0I,YAAYrD,gBAAgBxF,EAAMoE,MAChDjE,MAAK,kBAAK,EAAK0I,YAAY1D,gBAAgBnF,EAAKoF,OAChDjF,MAAK,SAAA2I,GACJ,IAAIC,EAAa,GAOjB,OANAD,EAAQJ,OAAOM,SAAQ,SAAA5E,GAAK,OAAI2E,EAAW9F,KAAKmB,EAAM6E,SAASC,gBAC/DJ,EAAQlC,UAAY,EAAKuC,WAAWxC,mBAAmBoC,EAAY,MACnED,EAAQJ,OAASI,EAAQJ,OAAOU,QAAO,SAACC,EAAKjF,GAE3C,OADAiF,EAAIpG,KAAKmB,EAAMgB,IACRiE,IACP,IACK,EAAKR,YAAYvD,WAAWwD,MAEpC3I,MAAK,kBAAM,EAAKqI,kBAChBhI,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAxClC,EAAKgI,aAAe,IAAIA,GACxB,EAAKa,YAAc,IAAIA,GACvB,EAAKT,YAAc,IAAIA,GACvB,EAAKM,WAAa,IAAIA,GACtB,EAAK3G,MAAQ,CACXkG,OAAQ,IAPO,E,iFA8CjB1H,KAAKwH,iB,+BAGG,IAAD,OACP,OACE,kBAAC,IAAM5E,SAAP,KACE,yBAAKvB,UAAU,yBACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CAAWxC,cAAemB,KAAKnC,MAAMgF,gBAEtC7C,KAAKwB,MAAMkG,OAAOpB,KAAI,SAAAlD,GAAK,OAC1B,kBAAC,GAAD,CACEmF,IAAKnF,EAAMgB,GACXhB,MAAK,eAAOA,EAAP,CAAcC,YAAa,EAAKA,mBAGzC,yBAAKhC,UAAU,uBACb,kBAACmH,GAAD,CAAcxB,QAAQ,gB,GAhEA5E,a,sXCNlC,IAAMqG,GAAa9K,IAAO6C,MAAV,MAIVkI,GAAc/K,IAAO+C,MAAV,MAIXiG,GAAgBhJ,IAAOa,IAAV,KAIGpB,EAAOE,OAsBdqL,GAlBA,SAAA9K,GAAU,IACfkC,EAAmClC,EAAnCkC,QAAS6I,EAA0B/K,EAA1B+K,aAAc5B,EAAYnJ,EAAZmJ,QAC/B,OACE,kBAAC,IAAMpE,SAAP,KACe,aAAZoE,EACC,kBAAC,IAAMpE,SAAP,KACE,kBAAC8F,GAAD,CAAa1H,QAAQ,cAAcK,UAAU,sBAC3C,kBAAC,GAAD,CAAe1C,IAAKoB,KAEtB,kBAAC0I,GAAD,CAAYrE,GAAG,cAAcnD,KAAK,OAAOG,SAAUwH,KAGrD,kBAAC,GAAD,CAAejK,IAAKoB,M,6TC9B5B,IAYe8I,GAZQlL,IAAOW,IAAV,MCMCwK,G,YACnB,WAAYjL,GAAQ,IAAD,8BACjB,4CAAMA,KAYRiD,aAAe,SAAAW,GAAM,IAAD,EACMA,EAAEC,OAAlBR,EADU,EACVA,KAAMC,EADI,EACJA,MACd,EAAKQ,SAAL,eAAmB,EAAKH,MAAxB,eAAgCN,EAAOC,MAftB,EAkBnByH,aAAe,SAAAnH,GACb,IAAMsH,EAAa,IAAIC,SACvBD,EAAWE,OAAO,UAAWxH,EAAEC,OAAOwH,MAAM,IAE5C,EAAKvH,SAAL,eAAmB,EAAKH,MAAxB,CAA+B2H,aAAa,KAC5C,EAAKtB,YAAYnD,gBAAgBqE,GAAY5J,MAC3C,SAAAI,GACE,EAAKoC,SAAL,eACK,EAAKH,MADV,CAEExC,KAAK,eAAM,EAAKwC,MAAMxC,KAAlB,CAAwBe,QAASR,EAAK6J,aAC1CD,aAAa,QAGjB,SAAA1J,GACEC,QAAQD,MAAMA,OAhCD,EAqCnB4J,aAAe,SAAA5H,GAAM,IACbzC,EAAS,EAAKwC,MAAdxC,KACNyC,EAAEM,iBAFgB,IAGVD,EAAY,EAAKjE,MAAjBiE,QACR9C,EAAI,eACC,EAAKwC,MAAMxC,KADZ,CAEFsK,MAAO,EAAK9H,MAAM8H,MAClBC,aAAc,EAAK/H,MAAM+H,aACzBC,SAAU,EAAKhI,MAAMgI,SACrBC,YAAa,EAAKjI,MAAMiI,cAE1B,EAAK5B,YAAYtD,kBAAkBvF,GAClCG,MAAK,kBAAM2C,EAAQG,KAAK,aA/CzB,EAAK4F,YAAc,IAAIA,GACvB,EAAKrG,MAAQ,CACXxC,KAAM,KACNmK,aAAa,EACbG,MAAO,GACPC,aAAc,GACdC,SAAU,GACVC,YAAa,IATE,E,iFAqDjBzJ,KAAK2B,SAAL,eACK3B,KAAKwB,MADV,CAEExC,KAAK,eAAMgB,KAAKnC,MAAM+B,cACtB0J,MAAOtJ,KAAKnC,MAAM+B,aAAa0J,MAC/BH,aAAa,O,+BAGP,IACAnK,EAASgB,KAAKwB,MAAdxC,KACR,OACE,kBAAC,IAAM4D,SAAP,KACG5C,KAAKwB,MAAM2H,YACV,kBAAC,GAAD,MAEAnK,GACE,kBAAC,IAAM4D,SAAP,KACE,4BAAKuD,GAAWnH,EAAK4B,WACrB,8BACE,2BAAOI,QAAQ,SAAf,cACA,2BACEC,KAAK,QACLC,KAAK,QACLC,MAAOnB,KAAKwB,MAAM8H,MAClBlF,GAAG,QACHhD,SAAUpB,KAAKc,eAEjB,kEACA,2BAAOE,QAAQ,gBAAf,0BACA,2BACEC,KAAK,WACLC,KAAK,eACLkD,GAAG,eACHhD,SAAUpB,KAAKc,eAEjB,2BAAOE,QAAQ,YAAf,sBACA,2BACEC,KAAK,WACLC,KAAK,WACLkD,GAAG,WACHhD,SAAUpB,KAAKc,eAEjB,2BAAOE,QAAQ,eAAf,uBACA,2BACEC,KAAK,WACLC,KAAK,cACLkD,GAAG,cACHhD,SAAUpB,KAAKc,eAEjB,kBAAC4I,GAAD,CACE3J,QAASf,EAAKe,QACd6I,aAAc5I,KAAK4I,aACnB5B,QAAQ,YAGZ,kBAACwB,GAAD,CAAclB,cAAetH,KAAKqJ,qB,GA5GXjH,a,4bCLrC,IAAMuH,GAAQhM,IAAO+C,MAAV,MAMLkJ,GAAajM,IAAO6C,MAAV,MAGVqJ,GAAelM,IAAOW,IAAV,MAMZwL,GAAcnM,IAAO4E,EAAV,MA4BFoG,GAxBA,SAAA9K,GAAU,IACfqD,EAA6CrD,EAA7CqD,KAAMJ,EAAuCjD,EAAvCiD,aAAcK,EAAyBtD,EAAzBsD,MAAOiD,EAAkBvG,EAAlBuG,GAAI2F,EAAclM,EAAdkM,UACvC,OACE,kBAAC,IAAMnH,SAAP,KACE,kBAAC+G,GAAD,CAAOK,QAAS5F,EAAIlD,KAAMA,GACvB6I,GAEH,kBAACF,GAAD,KACE,kBAACD,GAAD,CACExF,GAAIA,EACJnD,KAAK,QACLC,KAAMA,EACN+I,KAAM,EACN9I,MAAOA,EACP+I,IAAK,EACLC,IAAK,GACL/I,SAAUN,IAEZ,kBAACgJ,GAAD,KAAc3I,M,+dCnCtB,IAAMsH,GAAa9K,IAAO6C,MAAV,KACPpD,EAAOK,KAWHL,EAAOK,MAGd2M,GAAczM,IAAO4E,EAAV,KACKnF,EAAOC,OAmBdgN,GAbD,SAAAxM,GAAU,IACdqD,EAAwDrD,EAAxDqD,KAAMC,EAAkDtD,EAAlDsD,MAAOL,EAA2CjD,EAA3CiD,aAAckG,EAA6BnJ,EAA7BmJ,QAASjG,EAAoBlD,EAApBkD,YAAaqD,EAAOvG,EAAPuG,GACzD,OACE,kBAAC,IAAMxB,SAAP,KACe,aAAZoE,EACC,kBAACoD,GAAD,KAAcjE,GAAWhF,IAEzB,kBAAC,GAAD,CAAYD,KAAMA,EAAMC,MAAOA,EAAOC,SAAUN,EAAcC,YAAaA,EAAaqD,GAAIA,GAAM,S,iBC5BpGkG,GAAY,CAChBC,MAAO,OACPC,OAAQ,QAGJC,G,YACJ,WAAY5M,GAAQ,IAAD,8BACjB,4CAAMA,KAcR6M,eAAiB,WACf,OAAO,EAAKlJ,MAAMmJ,OAAOrE,KAAI,SAACsE,EAAOC,GACnC,OACE,kBAAC,UAAD,CACEtC,IAAKsC,EACLC,WAAW,EACX1G,GAAIyG,EACJE,SAAU,CACRC,IAAKJ,EAAMK,SACXC,IAAKN,EAAMO,WAEbC,KAAO,CAAEC,IAAK,qBAAsBC,KAAM,CAACf,MAAO,GAAIC,OAAQ,IAAKe,OAAQ,CAACC,EAAG,GAAIC,EAAG,IAAKC,WAAY,CAACnB,MAAO,GAAIC,OAAQ,KAC3HmB,UAAW,SAAAlK,GAAC,OAAI/B,QAAQkM,IAAInK,UAxBlC,EAAKD,MAAQ,CACXmJ,OAAQ,CACN,CAAEK,IAAK,kBAAmBE,KAAM,oBAChC,CAAED,SAAU,UAAWE,WAAY,YACnC,CAAEF,SAAU,iBAAkBE,WAAY,kBAC1C,CAAEF,SAAU,WAAYE,WAAY,aACpC,CAAEF,SAAU,WAAYE,WAAY,aACpC,CAAEF,SAAU,WAAYE,WAAY,eAVvB,E,sEAkCjB,OACE,kBAAC,OAAD,CACEU,OAAQ7L,KAAKnC,MAAMgO,OACnBC,KAAM,EACNC,MAAOzB,GACP0B,cAAe,CAAEhB,IAAK,OAAQE,KAAM,SACpCe,mBAAmB,GAElBjM,KAAK0K,sB,GA3CStI,aAiDR8J,+BAAiB,CAC9BC,OAAQ,2CADKD,CAEZzB,I,oTC5CH,IAAM2B,GAAczO,IAAO0O,KAAV,MAMXC,GAAiB3O,IAAOW,IAAV,MAOCiO,G,YACnB,WAAY1O,GAAQ,IAAD,8BACjB,4CAAMA,KAkBRiD,aAAe,SAAAW,GAAM,IAAD,EACMA,EAAEC,OAAlBR,EADU,EACVA,KAAMC,EADI,EACJA,MACd,EAAKQ,SAAL,eAAmB,EAAKH,MAAxB,eAAgCN,EAAOC,MArBtB,EAwBnBqL,WAAa,SAAA/K,GACXA,EAAEM,iBACF,EAAKJ,SAAL,eAAmB,EAAKH,MAAxB,CAA+BiL,YAAa,EAAKjL,MAAMiL,eA1BtC,EA6BnBC,UAAY,SAAAjL,GACVA,EAAEM,iBACF,EAAKJ,SAAL,eAAmB,EAAKH,MAAxB,CAA+BmL,WAAY,EAAKnL,MAAMmL,cA/BrC,EAkCnB/D,aAAe,SAAAnH,GACb,IAAMsH,EAAa,IAAIC,SACvBD,EAAWE,OAAO,UAAWxH,EAAEC,OAAOwH,MAAM,IAE5C,EAAKvH,SAAL,eAAmB,EAAKH,MAAxB,CAA+B2H,aAAa,KAC5C,EAAK1B,aAAahE,iBAAiBsF,GAAY5J,MAC7C,SAAAI,GACE,EAAKoC,SAAL,eACK,EAAKH,MADV,CAEE4B,MAAM,eAAM,EAAK5B,MAAM4B,MAAlB,CAAyBrD,QAASR,EAAK6J,aAC5CD,aAAa,QAGjB,SAAA1J,GACEC,QAAQD,MAAMA,OAhDD,EAqDnB4J,aAAe,SAAA5H,GACbA,EAAEM,iBADgB,IAEVD,EAAY,EAAKjE,MAAjBiE,QACJsB,EAAK,eACJ,EAAK5B,MAAM4B,MADP,CAEP2D,YAAa,EAAKvF,MAAMuF,YACxB7F,KAAM,EAAKM,MAAMN,OAEf0L,EAAQ,EAAKpL,MAAM4B,MAAMwJ,MAAMC,QAAO,SAAA/I,GAAI,OAAIA,KAC9C8I,EAAM7G,OAAS,GACjB6G,EACGE,MAAK,SAAC1H,EAAG2H,GAAJ,OAAU3H,EAAEnE,KAAO8L,EAAE9L,QAC1B+G,SAAQ,SAAAlE,GAAI,MACG,UAAdA,EAAK7C,KACA6C,EAAKkJ,aAAe,EAAKxL,MAAMyL,cAC/BnJ,EAAKkJ,aAAe,EAAKxL,MAAM0L,6BAEjC9J,EAAMwJ,MACb,EAAKnF,aACFlE,YAAYH,GACZjE,MAAK,WACJyN,EAAM5E,SAAQ,SAAAlE,GAAI,OAAI,EAAKwE,YAAYvE,WAAWD,SAEnD3E,MAAK,kBAAM2C,EAAQG,KAAK,cAE3B2K,EAAQ,CACN,CACEO,UAAW,IAAIC,KACfJ,aAAc,EAAKxL,MAAMyL,cACzBhM,KAAM,SAER,CACEkM,UAAW,IAAIC,KACfJ,aAAc,EAAKxL,MAAM0L,mBACzBjM,KAAM,eAIV,EAAKqH,YACF3E,YAAYiJ,GACZzN,MAAK,SAAAyN,GAGJ,OAFAlN,QAAQkM,IAAIgB,GACZxJ,EAAMwJ,MAAQ,CAACA,EAAM,GAAGxI,GAAIwI,EAAM,GAAGxI,IAC9B,EAAKqD,aAAalE,YAAYH,MAEtCjE,MAAK,kBAAM2C,EAAQG,KAAK,cAlGZ,EAsGnBoL,SAAW,WAAO,IAELC,EACP,EAAKzP,MADP0P,MAASD,OAEX,EAAK7F,aAAa1E,aAAauK,EAAOtK,SAAS7D,MAC7C,SAAAiE,GACE,EAAKzB,SAAL,eACK,EAAKH,MADV,CAEE4B,QACAlC,KAAMkC,EAAMlC,KACZ6F,YAAa3D,EAAM2D,YACnBoC,aAAa,EACb8D,cAAe7J,EAAMwJ,MAAM,GAAGI,aAC9BE,mBAAoB9J,EAAMwJ,MAAM,GAAGI,mBAGvC,SAAAvN,GAAU,IACAkI,EAAYlI,EAAZkI,QACRjI,QAAQD,MAAMkI,OAxHD,EAuMnB6F,aAAe,SAAA/L,GACbA,EAAEM,iBACF,IAAI/C,EAAI,eAAQ,EAAKnB,MAAM+B,cACvBwD,EAAQ,EAAK5B,MAAM4B,MACvB,EAAKqE,aACFpE,YAAYD,EAAMgB,IAClBjF,MAAK,kBAAM,EAAK0I,YAAYrD,gBAAgBxF,EAAMoE,MAClDjE,MAAK,kBAAM,EAAK0I,YAAY1D,gBAAgBnF,EAAKoF,OACjDjF,MAAK,SAAA2I,GACJ,IAAIC,EAAa,GAYjB,OAXAD,EAAQJ,OAAOM,SAAQ,SAAA5E,GAAK,OAC1B2E,EAAW9F,KAAKmB,EAAM6E,SAASC,gBAEjCJ,EAAQlC,UAAY,EAAKuC,WAAWxC,mBAClCoC,EACA,MAEFD,EAAQJ,OAASI,EAAQJ,OAAOU,QAAO,SAACC,EAAKjF,GAE3C,OADAiF,EAAIpG,KAAKmB,EAAMgB,IACRiE,IACN,IACI,EAAKR,YAAYvD,WAAWwD,MAEpC3I,MAAK,kBAAM,EAAKtB,MAAMiE,QAAQG,KAAK,YACnCzC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OA7NhC,EAAKgI,aAAe,IAAIA,GACxB,EAAKI,YAAc,IAAIA,GACvB,EAAKS,YAAc,IAAIA,GACvB,EAAKH,WAAa,IAAIA,GACtB,EAAK3G,MAAQ,CACX4B,MAAO,GACPlC,KAAM,GACN6F,YAAa,GACboC,aAAa,EACb8D,cAAe,EACfC,mBAAoB,EACpBT,YAAY,EACZE,WAAW,EACX3F,QAASnJ,EAAMoK,SAASzG,MAAMwF,SAff,E,4EA6HJhI,GAAO,IAAD,OAEfyO,UAAUC,YACZD,UAAUC,YAAYC,oBAAmB,SAAA5C,GAAQ,OAC/C6C,EAAS,CAAC7C,EAAS8C,OAAO5C,SAAUF,EAAS8C,OAAO1C,eAGtDyC,EANgB,CAAC,WAAY,WAS/B,IAAMA,EAAW,SAAAE,GACf,IAAIC,EAAW,CACb,CACEZ,UAAW,IAAIC,KACfJ,aAAc,EACd/L,KAAM,SAER,CACEkM,UAAW,IAAIC,KACfJ,aAAc,EACd/L,KAAM,eAIN+M,EAAW,CACb9M,KAAM,GACN6F,YAAa,GACbkH,gBAAiB,GACjBC,iBAAkB,GAClBC,oBAAqB,EACrBC,gBAAiB,GACjBC,gBAAiB,GACjBC,SAAU,GACVC,eAAgB,GAChBC,WAAW,EACXzO,QAAS,sBACT6M,MAAO,GACP3E,SAAU,CACRhH,KAAM,QACNiH,YAAa4F,IAIjB,EAAKrG,aACFtE,YAAY6K,GACZ7O,MAAK,SAAAiE,GAEJ,OADA4K,EAAW5K,EACJ,EAAKkF,YAAY3E,YAAYoK,MAErC5O,MAAK,SAAAyN,GAEJ,OADAoB,EAASpB,MAAQ,CAACA,EAAM,GAAGxI,GAAIwI,EAAM,GAAGxI,IACjC,EAAKqD,aAAalE,YAAYyK,MAEtC7O,MAAK,WAIJ,OAHAH,EAAK4G,UAAU3D,KAAK6L,GACpB9O,EAAK0I,OAAOzF,KAAK+L,EAAS5J,IAC1BpF,EAAK4G,UAAY,EAAKuC,WAAWxC,mBAAmB3G,EAAK4G,WAClD,EAAKiC,YAAYvD,WAAWtF,MAEpCG,MAAK,kBAAM,EAAKsI,aAAa1E,aAAaiL,EAAS5J,OACnDjF,MAAK,SAAAsP,GACJ/O,QAAQkM,IAAI6C,GACZ,EAAK9M,SAAL,eACK,EAAKH,MADV,CAEE4B,MAAM,eAAMqL,GACZvN,KAAMuN,EAAavN,KACnB6F,YAAa0H,EAAa1H,YAC1BoC,aAAa,QAGhB3J,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,S,0CAgCQ,WAAtCO,KAAKnC,MAAMoK,SAASzG,MAAMwF,QAC5BhH,KAAK0O,eAAL,eAAyB1O,KAAKnC,MAAM+B,eAEpCI,KAAKqN,a,+BAIC,IAAD,EACuCrN,KAAKwB,MAA3CwF,EADD,EACCA,QAAS5D,EADV,EACUA,MAAOlC,EADjB,EACiBA,KAAM6F,EADvB,EACuBA,YAC9B,OACE,kBAAC,IAAMnE,SAAP,KACG5C,KAAKwB,MAAM4B,OACV,kBAAC,IAAMR,SAAP,KACG5C,KAAKwB,MAAM2H,YACV,kBAAC,GAAD,MAEA,kBAAC,IAAMvG,SAAP,KACE,2BACEvB,UAAWrB,KAAKwB,MAAMiL,WAAa,aAAe,GAClDxO,QAAS+B,KAAKwM,YAEd,4BAAKrG,GAAW/C,EAAM2D,cACtB,2BAAIZ,GAAW/C,EAAM6K,kBACrB,yBAAK5M,UAAU,OACb,+CACA,2BACG+B,EAAM8K,iBACJ5H,KAAI,SAAAlB,GAAC,OAAIe,GAAWf,MACpBqB,KAAK,QAGZ,yBAAKpF,UAAU,OACb,mDACA,2BAAI+B,EAAM+K,oBAAV,UAEF,yBAAK9M,UAAU,OACb,+CACA,2BAAI+B,EAAMgL,kBAEZ,yBAAK/M,UAAU,OACb,yDACA,2BAAI+B,EAAMiL,kBAEZ,yBAAKhN,UAAU,OACb,wCACA,2BAAI+B,EAAMkL,WAEZ,yBAAKjN,UAAU,OACb,gDACA,2BAAI+B,EAAMmL,iBAEZ,yBAAKlN,UAAU,OACb,yCACA,2BAAI+B,EAAMoL,UAAY,MAAQ,QAIjCxO,KAAKwB,MAAMmL,WACV,yBAAKtL,UAAU,eACX,kBAAC,GAAD,CAAUA,UAAU,QACpB,4BAAQA,UAAU,UAAUvD,SAAS,SAArC,aAIN,kBAAC,EAAD,CACEa,IAAI,4BACJC,IAAI,kBACJC,cAAemB,KAAKnC,MAAMgF,eAE5B,kBAACuJ,GAAD,KACE,kBAACuC,GAAD,CACEzN,KAAK,OACLC,MAAOD,EACPJ,aAAcd,KAAKc,aACnBkG,QAASA,EACTjG,YAAY,eAEd,kBAAC2I,GAAD,CACE3J,QAASqD,EAAMrD,QACf6I,aAAc5I,KAAK4I,aACnB5B,QAASA,IAEX,kBAAC2H,GAAD,CACEtN,UAAU,WACVH,KAAK,cACLC,MAAO4F,EACPjG,aAAcd,KAAKc,aACnBkG,QAASA,EACTjG,YAAY,kBAEd,kBAACuL,GAAD,KACE,kBAAC,GAAD,CACE9N,IAAI,sBACJ2I,QAASnH,KAAK0M,YAEhB,kBAAC,GAAD,CACElO,IAAI,uBACJ2I,QAASnH,KAAKwM,aAEhB,kBAAC,GAAD,CACEhO,IAAI,0BACJ2I,QAASnH,KAAKwN,gBAIlB,kBAACoB,GAAD,CACExK,GAAI,cACJlD,KAAM,gBACNC,MAAOnB,KAAKwB,MAAMyL,cAClBnM,aACc,aAAZkG,EAAyBhH,KAAKc,aAAe,iBAAM,IAErDiJ,UAAU,sBAEZ,kBAAC6E,GAAD,CACExK,GAAI,aACJlD,KAAM,qBACNC,MAAOnB,KAAKwB,MAAM0L,mBAClBpM,aACc,aAAZkG,EAAyBhH,KAAKc,aAAe,iBAAM,IAErDiJ,UAAU,gBAGd,kBAACvB,GAAD,CACExB,QAASA,EACTM,cAAetH,KAAKqJ,sB,GAlWGjH,a,SC7B1B,SAASyM,GAAT,GAA2F,IAAzDzM,EAAwD,EAAnE0M,UAAsB9P,EAA6C,EAA7CA,KAAMH,EAAuC,EAAvCA,cAAekQ,EAAwB,EAAxBA,aAAiBC,EAAO,oEACvG,OACC,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAACpR,GACxB,OAAGmB,EACK,kBAACoD,EAAD,eAAWxC,aAAcZ,EAAM6D,aAAchE,GAAmBhB,IAE/D,kBAAC,IAAD,CAAUM,GAAI,CAACC,SAAU2Q,S,ICkGxBG,G,YA7Fb,WAAYrR,GAAQ,IAAD,8BACjB,4CAAMA,KAQRgE,QAAU,SAAA7C,GACR,EAAK2C,SAAL,eAAmB,EAAKH,MAAxB,CAA+BxC,WAVd,EAanBmQ,UAAY,WACc,OAApB,EAAK3N,MAAMxC,MACb,EAAKgD,YACFpC,eACAT,MACC,SAAAH,GACE,EAAK6C,QAAQ7C,MAEf,SAAAS,GACE,EAAKoC,SAAQ,MAGhBrC,OAAM,WACL,EAAKqC,SAAQ,OA1BF,EA+BnB7D,OAAS,SAACuP,GACR,EAAKvL,YAAYhE,SAASmB,MAAK,SAAAiQ,GAC7B,EAAKzN,SAAL,eACK,EAAKH,MADV,CAEExC,KAAM,YAjCV,EAAKgD,YAAc,IAAIlD,EACvB,EAAK0C,MAAQ,CACXxC,KAAM,KACNqQ,MAAM,GALS,E,iFAyCjBrP,KAAKmP,c,+BAGG,IAAD,OACDnQ,EAASgB,KAAKwB,MAAdxC,KACN,OACE,yBAAKqC,UAAU,OACZrC,GACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsQ,OAAK,EACLC,KAAK,SACLN,OAAQ,SAAA1B,GAAK,OAAI,kBAAC,EAAD,iBAAWA,EAAX,CAAkB1L,QAAS,EAAKA,cAEnD,kBAAC,IAAD,CACEyN,OAAK,EACLC,KAAK,UACLN,OAAQ,SAAA1B,GAAK,OAAI,kBAAC,GAAD,iBAAYA,EAAZ,CAAmB1L,QAAS,EAAKA,cAEpD,kBAACgN,GAAD,CAAcS,OAAK,EAACC,KAAK,QAAQvQ,KAAMA,EAAM8P,UAAWvH,GAAM1I,cAAemB,KAAKhC,SAClF,kBAAC6Q,GAAD,CAAcS,OAAK,EAACC,KAAK,yBAAyBvQ,KAAMA,EAAM8P,UAAWvC,GAAa1N,cAAemB,KAAKhC,SAC1G,kBAAC6Q,GAAD,CAAcS,OAAK,EAACC,KAAK,yBAAyBvQ,KAAMA,EAAM8P,UAAWvC,GAAa1N,cAAemB,KAAKhC,SAC1G,kBAAC6Q,GAAD,CAAcS,OAAK,EAACC,KAAK,aAAavQ,KAAMA,EAAM8P,UAAWvC,GAAa1N,cAAemB,KAAKhC,SAC9F,kBAAC6Q,GAAD,CAAcS,OAAK,EAACC,KAAK,WAAWvQ,KAAMA,EAAM8P,UAAWhG,GAASjK,cAAemB,KAAKhC,SACxF,kBAAC6Q,GAAD,CAAcS,OAAK,EAACC,KAAK,cAAcvQ,KAAMA,EAAM8P,UAAWU,GAAW3Q,cAAemB,KAAKhC,SAE7F,kBAAC6Q,GAAD,CAAcS,OAAK,EAACC,KAAK,aAAavQ,KAAMA,EAAM8P,UAAWU,GAAW3Q,cAAemB,KAAKhC,WAG9FgB,GACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsQ,OAAK,EACLC,KAAK,SACLN,OAAQ,SAAA1B,GAAK,OAAI,kBAAC,EAAD,iBAAWA,EAAX,CAAkB1L,QAAS,EAAKA,cAEnD,kBAAC,IAAD,CACEyN,OAAK,EACLC,KAAK,UACLN,OAAQ,SAAA1B,GAAK,OAAI,kBAAC,GAAD,iBAAYA,EAAZ,CAAmB1L,QAAS,EAAKA,cAEpD,kBAAC,IAAD,CACE0N,KAAK,IACLN,OAAQ,SAAA1B,GAAK,OAAI,kBAAC,IAAD,CAAUpP,GAAI,CAACC,SAAU,qB,GArFtCqR,IAAMrN,WCAJsN,QACW,cAA7BC,OAAO1H,SAAS2H,UAEe,UAA7BD,OAAO1H,SAAS2H,UAEhBD,OAAO1H,SAAS2H,SAASrC,MACvB,2DCXNsC,IAASZ,OAAO,kBAAC,IAAD,KAAQ,kBAAC,GAAD,OAAkBa,SAASC,eAAe,SD4H5D,kBAAmBtC,WACrBA,UAAUuC,cAAcC,MAAM9Q,MAAK,SAAA+Q,GACjCA,EAAaC,kB","file":"static/js/main.bebecd92.chunk.js","sourcesContent":["const colors = {\n    green : `#6AA76F`,\n    white : `#FFFFFF`,\n    red : `#A78F6A`,\n    blue: `#1B8ECF`,\n    gray: `#A0A0A0`\n}\n\nexport default colors;","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledButton = styled.button`\n        border: none;\n        background-color: ${colors.green};\n        background-image: ${props => props.btnColor === \"white\" ? \"url(../images/close_w.svg)\" :\"url(./images/close_g.svg)\"};\n        background-position: center;\n        background-repeat: no-repeat;\n        width: 5vw;\n        height: 3vh;\n        margin-right: 1rem;\n        margin-top: 1rem;\n`;\n\nconst CloseBtn = props => {\n    const { btnColor,logout } = props;\n    return (\n            <StyledButton btnColor={btnColor} onClick={logout} />\n    );\n};\n\nexport default CloseBtn;","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledButton = styled.button`\n        border: none;\n        background-color: ${colors.green};\n        background-image: ${props => props.btnColor === \"white\" ? \"url(../images/user_w.svg)\" :\"url(./images/user_g.svg)\"};\n        background-position: center;\n        background-repeat: no-repeat;\n        width: 5vw;\n        height: 3vh;\n        margin-right: 1rem;\n        margin-top: 1rem;\n`;\n\nconst ProfileBtn = props => {\n    const { btnColor } = props;\n    return (\n        <Link to={{pathname: `/profile`}}>\n            <StyledButton btnColor={btnColor} />\n        </Link>\n    );\n};\n\nexport default ProfileBtn;","import React from \"react\";\nimport styled from \"styled-components\";\nimport CloseBtn from \"./StyledCloseBtn\";\nimport ProfileBtn from \"./ProfileBtn\";\n\nconst HeaderWrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: space-between;\n  padding-left: 1rem;\n  box-sizing: border-box;\n`;\n\nconst LogoImg = styled.img`\n  width: 75vw;\n  height: 10vh;\n`;\n\nconst ControlsWrapper = styled.div`\n display:flex;\n flex-direction: column;\n`;\n\nconst PageTitle = props => {\n  return (\n    <HeaderWrapper>\n      <LogoImg src=\"../images/green_care_w.svg\" alt=\"green care logo\" />\n      <ControlsWrapper>\n        <CloseBtn btnColor={\"white\"} logout={props.logoutHandler}/>\n        <ProfileBtn btnColor={\"white\"} />\n      </ControlsWrapper>\n    </HeaderWrapper>\n  );\n};\nexport default PageTitle;\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true    \n    })\n  }\n\n  signup = (user) => {\n    return this.instance.post('/signup', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  login = (user) => {\n    return this.instance.post('/login', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  loggedInUser = () => {\n    return this.instance.get('/loggedin')\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  logout = () => {\n    return this.instance.post('/logout')\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error))\n  }\n\n  upload = (picture) => {\n    return this.instance.post('/upload', picture)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n}\n\nexport default AuthService;","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../globalStyles/colors\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledLogin = styled.div`\n  display: flex;\n  align-items: center;\n  flex-flow: column;\n  width: 100vw;\n  height: 50vh;\n  margin: 0 auto;\n  .button-box {\n    display: flex;\n    flex-direction: column;\n    margin-top: 2rem;\n    button {\n      background: ${colors.white};\n      color: ${colors.green};\n      font-size: 1.2rem;\n      font-weight: 600;\n      border: none;\n      border-radius: 25px;\n      height: 50px;\n      min-width: 230px;\n      max-width: 350px;\n      padding: 10px;\n      margin: .5rem;\n      box-sizing: border-box;\n      input {\n        color: ${colors.white};\n        font-size: 1.2rem;\n        font-weight: 600;\n      }\n    }\n    .btn-green {\n      background: ${colors.green};\n      border: 1px solid ${colors.white};\n    }\n  }\n`;\n\nconst StyledInput = styled.input`\n  color: ${colors.gray};\n  font-size: 1.2rem;\n  border: none;\n  border-radius: 22px;\n  height: 50px;\n  min-width: 230px;\n  max-width: 350px;\n  padding: 10px;\n  margin: 5px;\n  box-sizing: border-box;\n  ::placeholder {\n    color: ${colors.gray};\n  }\n`;\n\nconst StyledLabel = styled.label`\n  font-family: \"Encode Sans\";\n  font-weight: 400;\n  font-size: 2em;\n  color: ${colors.white};\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst Login = props => {\n  const { username, password, handleChange, placeholder } = props;\n  return (\n    <StyledLogin>\n      <StyledLabel htmlFor=\"username\">User name: </StyledLabel>\n      <StyledInput\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        placeholder={placeholder}\n      />\n      <StyledLabel htmlFor=\"password\">Password: </StyledLabel>\n      <StyledInput\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n      />\n      <div className={\"button-box\"}>\n        <button className={\"btn-green\"}>\n          <input type=\"submit\" value=\"Enter\" />\n        </button>\n        <Link to={{pathname:\"/signup\"}}><button>New user</button></Link>\n        \n      </div>\n    </StyledLogin>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LeafIma= styled.img`\n  height: 20vh;\n    margin-top: .5rem;\n  }\n`;\n\nconst LeafLogo = () => (<LeafIma src=\"./images/leaf_w.svg\" alt=\"green care\"/>);\n\nexport default LeafLogo;\n","import React, { Component } from 'react'\nimport PageTitle from '../../fontStyles/PageTitle'\nimport AuthService from '../../services/AuthService';\nimport './Login.css';\nimport StyledLogin from './StyledLogin';\nimport LeafLogo from '../../fontStyles/Leaf';\n\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  state = {\n    username: 'bob',\n    password: 'b'\n  }\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({...this.state, [name]:value})\n  }\n  handleLogin = (e) => {\n    const { setUser, history } = this.props;\n    e.preventDefault()\n    this.authService.login(this.state)\n    .then(\n      (user) => {\n        setUser(user)\n        history.push(\"/main\")\n      },\n      (error) => {\n        console.error(error)\n      }\n    )\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <div className=\"login-wrapper\">\n        <PageTitle />\n        <LeafLogo />\n        <form onSubmit={this.handleLogin}>\n          <StyledLogin username={username} password={password} handleChange={this.handleChange} handleLogin={this.handleLogin} placeholder={\"User name\"}></StyledLogin>\n        </form>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../globalStyles/colors\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledSignup = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: column;\n  width: 100vw;\n  height: 50vh;\n  .button-box {\n    display: flex;\n    flex-direction: column;\n    margin-top: 2rem;\n    button {\n      background: ${colors.white};\n      color: ${colors.green};\n      font-size: 1.2rem;\n      font-weight: 600;\n      border: none;\n      border-radius: 25px;\n      height: 50px;\n      min-width: 230px;\n      max-width: 350px;\n      padding: 10px;\n      margin: .5rem;\n      box-sizing: border-box;\n      input {\n        color: ${colors.white};\n        font-size: 1.2rem;\n        font-weight: 600;\n      }\n    }\n    .btn-green {\n      background: ${colors.green};\n      border: 1px solid ${colors.white};\n    }\n\n    .btn-red {\n      background: ${colors.red};\n      border: 1px solid ${colors.white};\n      color: ${colors.white};\n    }\n  }\n`;\n\nconst StyledInput = styled.input`\n  color: ${colors.gray};\n  font-size: 1.2rem;\n  border: none;\n  border-radius: 22px;\n  height: 50px;\n  min-width: 230px;\n  max-width: 350px;\n  padding: 10px;\n  margin: 5px;\n  box-sizing: border-box;\n  ::placeholder {\n    color: ${colors.gray};\n  }\n`;\n\nconst StyledLabel = styled.label`\n  font-family: \"Encode Sans\";\n  font-weight: 400;\n  font-size: 2em;\n  color: ${colors.white};\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst StyledError = styled.p`\n  font-family: \"Roboto\";\n  font-weight: 300;\n  font-size: 1em;\n  font-style: italic;\n  color: ${colors.white};\n  background-color: ${colors.red} ;\n  padding: 2px 5px;\n  border-radius: 5px;\n`;\n\nconst Signup = props => {\n  const { username, password, passwordR, handleChange, placeholder, error } = props;\n  return (\n    <StyledSignup>\n      <StyledLabel htmlFor=\"username\">New user name: </StyledLabel>\n      <StyledInput\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        placeholder={placeholder}\n      />\n      <StyledLabel htmlFor=\"password\">New password: </StyledLabel>\n      <StyledInput\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n      />\n      <StyledLabel htmlFor=\"passwordR\">Repeat password: </StyledLabel>\n      <StyledInput\n        type=\"password\"\n        name=\"passwordR\"\n        value={passwordR}\n        onChange={handleChange}\n      />\n      {error && <StyledError>{error}</StyledError>}\n      <div className={\"button-box\"}>\n        <button className={\"btn-green\"}>\n          <input type=\"submit\" value=\"Create User\" />\n        </button>\n        <Link to={{pathname:\"/login\"}}>\n          <button className={\"btn-red\"}>Cancel</button>\n        </Link>  \n      </div>\n    </StyledSignup>\n  );\n};\n\nexport default Signup;","import React, { Component } from \"react\";\nimport \"./Signup.css\";\nimport PageTitle from \"../../fontStyles/PageTitle\";\nimport Signup from \"./StyledSignup\";\nimport AuthService from \"../../services/AuthService\";\n\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  state = {\n    username: \"\",\n    password: \"\",\n    passwordR: \"\",\n    error: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n  handleSignUp = e => {\n    e.preventDefault();\n    if (this.state.password === this.state.passwordR) {\n      const { history, setUser } = this.props;\n      this.authService.signup(this.state).then(\n        user => {\n          setUser(user);\n          history.push(\"/\");\n        },\n        error => {\n          this.setState({ ...this.state, error: error });\n        }\n      );\n    } else {\n      this.setState({ ...this.state, error: \"Password don't match\" });\n    }\n  };\n\n  render() {\n    const { username, password, passwordR, error } = this.state;\n    return (\n      <React.Fragment>\n        <PageTitle src=\"./images/green_care_w.svg\" alt=\"green care logo\" logoutHandler={this.props.handleLogout} />\n        <form className=\"form-wrapper\" onSubmit={this.handleSignUp}>\n          <Signup\n            username={username}\n            password={password}\n            passwordR={passwordR}\n            handleChange={this.handleChange}\n            placeholder={\"User name\"}\n            error={error}\n          ></Signup>\n          {/* <label htmlFor=\"username\">Username: </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            required\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type=\"password\"\n            value={password}\n            name=\"password\"\n            required\n            onChange={this.handleChange}\n          />\n          <input type=\"file\" name=\"picture\" onChange={this.handleUpload} />\n          <input type=\"submit\" value=\"Create account\" /> */}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n","import axios from \"axios\";\n\nclass PlantService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/plants`,\n      withCredentials: true\n    });\n  }\n\n  getPlantById = plantId => {\n    return this.instance\n      .get(`/${plantId}`)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  getUserPlants = userId => {\n    return this.instance\n      .get(`/user/${userId}`)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  createPlant = plant => {\n    return this.instance\n      .post(\"/create\", plant)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  deletePlant = plantId => {\n    return this.instance\n      .delete(`/delete/${plantId}`)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  updatePlant = plant => {\n    return this.instance\n      .put(`/update`, plant)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  uploadPlantImage = picture => {\n    return this.instance\n      .post(\"/upload\", picture)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n}\n\nexport default PlantService;\n","import axios from \"axios\";\n\nclass TaskService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/tasks`,\n      withCredentials: true\n    });\n  }\n\n  createTasks = taskArr => {\n    return this.instance\n      .post(\"/multicreate\", taskArr)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  createTask = (plantId, task) => {\n    task.plantId = plantId;\n    return this.instance\n      .post(\"/create\", task)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  updateTask = (task) => {\n    return this.instance\n      .put(\"/update\", task)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  deleteTask = (task) => {\n    return this.instance\n      .put(\"/delete\", task)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n}\n\nexport default TaskService;\n","import axios from 'axios';\n\nclass UserService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/users`,\n      withCredentials: true    \n    })\n  }\n\n  getUsers = () => {\n    return this.instance.get(`/all`)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  getUserByIdDeep = (id) => {\n    return this.instance.get(`/deep/${id}`)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  getUserByIdShallow = (id) => {\n    return this.instance.get(`/shallow/${id}`)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  updateUser = (user) => {\n    return this.instance.put('/update',user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  updateUserProfile = (user) => {\n    return this.instance.put('/update-profile',user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  deleteUserPlant= (user, plant) => {\n    let payload = {user:user, plant: plant}\n    return this.instance.put('/deletePlant',payload)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  uploadUserImage = (picture) => {\n    return this.instance.post('/upload', picture)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n}\n\nexport default UserService;","class GeoService {\n    constructor() {}\n    calcDistance = (lat1, lng1, lat2, lng2) => {\n        const R = 6371; // earth radius in km\n        let dLat = this.toRad(lat2 - lat1);\n        let dLng = this.toRad(lng2 - lng1);\n        lat1 = this.toRad(lat1);\n        lat2 = this.toRad(lat2);\n      \n        let a =\n          Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n          Math.sin(dLng / 2) * Math.sin(dLng / 2) * Math.cos(lat1) * Math.cos(lat2);\n        let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        let d = R * c;\n        return d;\n      }\n      \n    toRad = (value) => {\n        return (value * Math.PI) / 180;\n      }\n      \n    getUserLocationArr = (locations, radius = 0.02) => {\n        let resultArr = [];\n        if (locations.length > 0) {\n          let currentLoc = locations.pop();\n          resultArr.push(currentLoc);\n          while (locations.length > 0) {\n            let nextLoc = locations.pop();\n            if (\n              this.calcDistance(currentLoc[0], currentLoc[1], nextLoc[0], nextLoc[1]) >\n              radius\n            ) {\n              resultArr.push(nextLoc);\n              currentLoc = nextLoc;\n            }\n          }\n        }\n        return resultArr;\n      }\n}\n\nexport default GeoService;","const capitalize = (word) => word.split('').map((e,i)=>i==0?e.toUpperCase():e).join('');\nexport default capitalize;","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./StyledPlantCard.css\";\nimport colors from \"../../globalStyles/colors\";\nimport { Link } from \"react-router-dom\";\nimport capitalize from \"../../globalStyles/utils\"\n\nconst CardContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 2rem 1rem;\n`;\n\nconst PlantPortrait = styled.img`\n  width: 140px;\n  height: 140px;\n  border-radius: 50%;\n  border: 8px solid ${colors.white};\n  box-sizing: border-box;\n`;\n\nconst PlantInfo = styled.div`\n  color: ${colors.white};\n\n  h2 {\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n  p {\n    font-size: 1rem;\n    font-family: \"Roboto\";\n    font-style: italic;\n  }\n`;\n\nconst ControlButtons = styled.div`\n  display: flex;\n  button {\n    border: none;\n    background-color: ${colors.green};\n    background-position: center-top;\n    background-repeat: no-repeat;\n    background-size: cover;\n    width: 2rem;\n    height: 2rem;\n    margin-top: 2rem;\n  }\n  .btn-edit {\n    background-image: url(./images/edit_w.svg);\n  }\n  .btn-delete {\n    background-image: url(./images/trash_w.svg);\n    margin-left: 2rem;\n  }\n`;\n\nconst PlantCard = props => {\n  const { id, picture, name, common_name, deletePlant } = props.plant;\n  return (\n    <CardContainer>\n      <Link\n        to={{\n          pathname: `/plant-detail/${id}`,\n          state: {\n            flavour: \"readonly\"\n          }\n        }}\n      >\n        <PlantPortrait id={id} src={picture}></PlantPortrait>\n      </Link>\n      <div className=\"side-wrapper\">\n        <Link\n          to={{\n            pathname: `/plant-detail/${id}`,\n            state: {\n              flavour: \"readonly\"\n            }\n          }}\n        >\n          <PlantInfo id={id}>\n            <h2>{capitalize(name)}</h2>\n            <p>{capitalize(common_name)}</p>\n          </PlantInfo>\n        </Link>\n        <ControlButtons>\n          <Link\n            to={{\n              pathname: `/plant-update/${id}`,\n              state: {\n                flavour: \"update\"\n              }\n            }}\n          >\n            <button className=\"btn-edit\"></button>\n          </Link>\n          <button\n            className=\"btn-delete\"\n            id={id}\n            onClick={e => deletePlant(e)}\n          ></button>\n        </ControlButtons>\n      </div>\n    </CardContainer>\n  );\n};\n\nexport default PlantCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\n\nconst GenericBtn = styled.button`\n  border: none;\n  background-color: ${colors.green};\n  background-image: url(${props => props.img});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 4rem;\n  height: 4rem;\n  margin-right: 1rem;\n  margin-top: 1rem;\n`;\n\nconst Button = props => {\n  const { img, clicked } = props;\n  return (\n    <React.Fragment>    \n        <GenericBtn img={img} onClick={e=>clicked(e)} />\n    </React.Fragment>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\nimport StyledButton from \"../fontStyles/StyledButton\";\nimport { Link } from \"react-router-dom\";\n\nconst GenericBtn = styled.button`\n  font-family: \"Encode Sans\";\n  color: ${colors.white};\n  font-size: 1.2rem;\n  font-weight: 600;\n  border: none;\n  border-radius: 25px;\n  height: 40px;\n  min-width: 140px;\n  max-width: 350px;\n  padding: 5px 10px 10px;\n  margin: 0.5rem;\n  box-sizing: border-box;\n`;\n\nconst BtnWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  margin-top: 1rem;\n  .btn-green {\n    background: ${colors.green};\n    border: 1px solid ${colors.white};\n  }\n  .btn-red {\n    background: ${colors.red};\n  }\n  .btn-new {\n    background: ${colors.white};\n    color: ${colors.green};\n    font-size: 2.5rem;\n    font-weight: 600;\n    padding: 0;\n    line-height: 1rem;\n    align-self: flex-end;\n  }\n`;\n\nconst Buttons = props => {\n  const { updateHandler, flavour } = props;\n  return (\n    <BtnWrapper>\n      {(() => {\n        switch (flavour) {\n          case \"readonly\":\n            return (\n              <Link to={{ pathname: `/main` }}>\n                <GenericBtn className=\"btn-red\">Go back</GenericBtn>\n              </Link>\n            );\n          case \"update\":\n            return (\n              <React.Fragment>\n                <Link to={{ pathname: `/main` }}>\n                  <GenericBtn className=\"btn-red\">Cancel</GenericBtn>\n                </Link>\n                <GenericBtn\n                  className=\"btn-green\"\n                  onClick={e => updateHandler(e)}\n                >\n                  Update\n                </GenericBtn>\n              </React.Fragment>\n            );\n          case \"create\":\n            return (\n              <React.Fragment>\n                <GenericBtn\n                  className=\"btn-green\"\n                  onClick={e => updateHandler(e)}\n                >\n                  Create\n                </GenericBtn>\n              </React.Fragment>\n            );\n          case \"main\":\n            return (\n              <React.Fragment>\n                <StyledButton img={\"../images/calendar_w.svg\"} />\n                <Link\n                  to={{\n                    pathname: `/plant/new`,\n                    state: {\n                      flavour: \"create\"\n                    }\n                  }}\n                >\n                  <GenericBtn className=\"btn-new\">+</GenericBtn>\n                </Link>\n\n                <Link\n                  to={{\n                    pathname: `/plants-map`\n                  }}\n                >\n                  <StyledButton img={\"../images/map_w.svg\"} clicked={()=>\"\"} />\n                </Link>\n              </React.Fragment>\n            );\n          default:\n            return (\n              <React.Fragment>\n                <Link to={{ pathname: `/main` }}>\n                  <GenericBtn className=\"btn-red\">Cancel</GenericBtn>\n                </Link>\n                <GenericBtn\n                  className=\"btn-green\"\n                  onClick={e => updateHandler(e)}\n                >\n                  Accept\n                </GenericBtn>\n              </React.Fragment>\n            );\n        }\n      })()}\n    </BtnWrapper>\n  );\n};\n\nexport default Buttons;\n","import React, { Component } from \"react\";\nimport \"./Main.css\";\nimport PageTitle from \"../../fontStyles/PageTitle\";\nimport plantService from \"../../services/PlantService\";\nimport taskService from \"../../services/TaskService\";\nimport userService from \"../../services/UserService\";\nimport geoService from \"../../services/GeoService\"\nimport PlantCard from \"../PlantCard/StyledPlantCard\";\nimport ModalButtons from \"../../fontStyles/ModalButtons\";\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.plantService = new plantService();\n    this.taskService = new taskService();\n    this.userService = new userService();\n    this.geoService = new geoService();\n    this.state = {\n      plants: []\n    };\n  }\n\n  updatePlants = () => {\n    this.plantService.getUserPlants(this.props.loggedInUser.id).then(\n      plants => {\n        this.setState({ ...this.state, plants });\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  deletePlant = e => {\n    e.preventDefault();\n    let user = {...this.props.loggedInUser};\n    let plant = this.state.plants.find(plant => plant.id === e.target.id);\n    this.plantService\n        .deletePlant(plant.id)\n        .then(()=>this.userService.deleteUserPlant(user, plant))\n        .then(() =>this.userService.getUserByIdDeep(user.id))\n        .then(newUser =>{\n          let userCoords = [];\n          newUser.plants.forEach(plant => userCoords.push(plant.location.coordinates));\n          newUser.locations = this.geoService.getUserLocationArr(userCoords, 0.002);\n          newUser.plants = newUser.plants.reduce((acc, plant)=>{\n            acc.push(plant.id);\n            return acc\n          },[])\n          return this.userService.updateUser(newUser);\n        })\n        .then(() => this.updatePlants())\n        .catch(error => console.error(error));\n  };\n\n  componentDidMount() {\n    this.updatePlants();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"fixed-top-aux-padding\">\n          <div className=\"fixed-controls up\">\n            <PageTitle logoutHandler={this.props.handleLogout} />\n          </div>\n          {this.state.plants.map(plant => (\n            <PlantCard\n              key={plant.id}\n              plant={{ ...plant, deletePlant: this.deletePlant }}\n            ></PlantCard>\n          ))}\n          <div className=\"fixed-controls down\">\n            <ModalButtons flavour=\"main\" />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\n\nconst InputField = styled.input`\n  display: none;\n`;\n\nconst CustomLabel = styled.label`\n  cursor: pointer;\n`;\n\nconst PlantPortrait = styled.img`\n  width: 178px;\n  height: 178px;\n  border-radius: 50%;\n  border: 8px solid ${colors.white};\n  box-sizing: border-box;\n`;\n\nconst Loader = props => {\n  const { picture, handleUpload, flavour } = props;\n  return (\n    <React.Fragment>\n      {flavour !== \"readonly\" ? (\n        <React.Fragment>\n          <CustomLabel htmlFor=\"file-upload\" className=\"custom-file-upload\">\n            <PlantPortrait src={picture} />\n          </CustomLabel>\n          <InputField id=\"file-upload\" type=\"file\" onChange={handleUpload} />\n        </React.Fragment>\n      ) : (\n        <PlantPortrait src={picture} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Loader;\n","import styled from \"styled-components\";\n\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background-color : rgba(0,0,0,.2);\n  background-image : url(../images/Spinner-1s-200px.svg);\n  background-position: center;\n  background-repeat: no-repeat;\n  z-index : 1000;\n  }\n`;\n\nexport default LoadingOverlay;\n","import React, { Component } from \"react\";\nimport \"./Profile.css\";\nimport ImageLoader from \"../../fontStyles/ImageLoader\";\nimport ModalButtons from \"../../fontStyles/ModalButtons\";\nimport userService from \"../../services/UserService\";\nimport capitalize from \"../../globalStyles/utils\";\nimport LoadingOverlay from \"../../fontStyles/LoadingOverlay\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.userService = new userService();\n    this.state = {\n      user: null,\n      loadingFlag: true,\n      email: \"\",\n      current_pass: \"\",\n      new_pass: \"\",\n      repeat_pass: \"\"\n    };\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleUpload = e => {\n    const uploadData = new FormData();\n    uploadData.append(\"picture\", e.target.files[0]);\n\n    this.setState({ ...this.state, loadingFlag: true });\n    this.userService.uploadUserImage(uploadData).then(\n      data => {\n        this.setState({\n          ...this.state,\n          user: { ...this.state.user, picture: data.secure_url },\n          loadingFlag: false\n        });\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  };\n\n  handleUpdate = e => {\n    let { user } = this.state;\n    e.preventDefault();\n    const { history } = this.props;\n    user = {\n      ...this.state.user,\n      email: this.state.email,\n      current_pass: this.state.current_pass,\n      new_pass: this.state.new_pass,\n      repeat_pass: this.state.repeat_pass\n    };\n    this.userService.updateUserProfile(user)\n    .then(() => history.push(\"/main\"))\n  };\n\n  componentDidMount() {\n    this.setState({\n      ...this.state,\n      user: { ...this.props.loggedInUser },\n      email: this.props.loggedInUser.email,\n      loadingFlag: false\n    });\n  }\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        {this.state.loadingFlag ? (\n          <LoadingOverlay />\n        ) : (\n          user && (\n            <React.Fragment>\n              <h1>{capitalize(user.username)}</h1>\n              <form>\n                <label htmlFor=\"email\">User email</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={this.state.email}\n                  id=\"email\"\n                  onChange={this.handleChange}\n                />\n                <p>If you want to change your password</p>\n                <label htmlFor=\"current-pass\">Enter current password</label>\n                <input\n                  type=\"password\"\n                  name=\"current_pass\"\n                  id=\"current-pass\"\n                  onChange={this.handleChange}\n                />\n                <label htmlFor=\"new-pass\">Enter new password</label>\n                <input\n                  type=\"password\"\n                  name=\"new_pass\"\n                  id=\"new-pass\"\n                  onChange={this.handleChange}\n                />\n                <label htmlFor=\"repeat-pass\">Repeat new password</label>\n                <input\n                  type=\"password\"\n                  name=\"repeat_pass\"\n                  id=\"repeat-pass\"\n                  onChange={this.handleChange}\n                />\n                <ImageLoader\n                  picture={user.picture}\n                  handleUpload={this.handleUpload}\n                  flavour=\"signup\"\n                />\n              </form>\n              <ModalButtons updateHandler={this.handleUpdate} />\n            </React.Fragment>\n          )\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Label = styled.label`\n  font-size: 1.8rem;\n  align-self: flex-start;\n  margin-left: 1rem;  \n`;\n\nconst RangeInput = styled.input`\n`;\n\nconst RangeWrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  align-items: center;\n`;\n\nconst NumberBoard = styled.p`\n  font-size: 2rem;\n`;\n\nconst Loader = props => {\n  const { name, handleChange, value, id, labelText } = props;\n  return (\n    <React.Fragment>\n      <Label forHtml={id} name={name}>\n        {labelText}\n      </Label>\n      <RangeWrapper>\n        <RangeInput\n          id={id}\n          type=\"range\"\n          name={name}\n          step={1}\n          value={value}\n          min={1}\n          max={30}\n          onChange={handleChange}\n        ></RangeInput>\n        <NumberBoard>{value}</NumberBoard>\n      </RangeWrapper>\n    </React.Fragment>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\nimport capitalize from \"../globalStyles/utils\"\n\nconst InputField = styled.input`\ncolor: ${colors.gray};\n  font-size: 1.2rem;\n  border: none;\n  border-radius: 22px;\n  height: 50px;\n  min-width: 230px;\n  max-width: 350px;\n  padding: 10px;\n  margin: 5px;\n  box-sizing: border-box;\n  ::placeholder {\n    color: ${colors.gray};\n  }`;\n  \nconst StaticField = styled.p`\n  background-color: ${colors.green};\n  font-family: \"Encode Sans\"; \n  font-size: 1.7rem;\n  padding: 1rem;\n`;\n\nconst Input = props => {\n  const { name, value, handleChange, flavour, placeholder, id } = props;\n  return (\n    <React.Fragment>\n      {flavour === \"readonly\" ? (\n        <StaticField>{capitalize(value)}</StaticField>\n      ) : (\n        <InputField name={name} value={value} onChange={handleChange} placeholder={placeholder} id={id || null}/>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Input;\n","\n\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\n\nimport React, { Component } from \"react\";\n\nconst mapStyles = {\n  width: \"100%\",\n  height: \"100%\"\n};\n\nclass GmapsMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stores: [\n        { lat: 47.49855629475769, lng: -122.14184416996333 },\n        { latitude: 47.359423, longitude: -122.021071 },\n        { latitude: 47.2052192687988, longitude: -121.988426208496 },\n        { latitude: 47.6307081, longitude: -122.1434325 },\n        { latitude: 47.3084488, longitude: -122.2140121 },\n        { latitude: 47.5524695, longitude: -122.0425407 }\n      ]\n    };\n  }\n\n  displayMarkers = () => {\n    return this.state.stores.map((store, index) => {\n      return (\n        <Marker\n          key={index}\n          draggable={true}\n          id={index}\n          position={{\n            lat: store.latitude,\n            lng: store.longitude\n          }}\n          icon={ { url: './images/daisy.jpg', size: {width: 60, height: 60}, anchor: {x: 15, y: 30}, scaledSize: {width: 30, height: 30}, }}\n          onDragend={e => console.log(e)}\n        />\n      );\n    });\n  };\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={8}\n        style={mapStyles}\n        initialCenter={{ lat: 47.444, lng: -122.176 }}\n        fullscreenControl={false}\n      >\n        {this.displayMarkers()}\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCm0meO5cjbh70YvG6BIQVh5GqRHXHG7Uw\"\n})(GmapsMap);\n\n","import React, { Component } from \"react\";\nimport PageTitle from \"../../fontStyles/PageTitle\";\nimport ImageLoader from \"../../fontStyles/ImageLoader\";\nimport plantService from \"../../services/PlantService\";\nimport userService from \"../../services/UserService\";\nimport taskService from \"../../services/TaskService\";\nimport geoService from \"../../services/GeoService\";\nimport LoadingOverlay from \"../../fontStyles/LoadingOverlay\";\nimport FormRange from \"../../fontStyles/FormRange\";\nimport StyledButton from \"../../fontStyles/StyledButton\";\nimport MutableTextInput from \"../../fontStyles/MutableTextInput\";\nimport ModalButtons from \"../../fontStyles/ModalButtons\";\nimport styled from \"styled-components\";\nimport \"./PlantDetail.css\";\nimport capitalize from \"../../globalStyles/utils\";\nimport GmapsMap from \"../GmapsMap/GmapsMap\";\nimport CloseBtn from \"../../fontStyles/StyledCloseBtn\";\n\nconst FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ButtonsWrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 1rem;\n`;\n\nexport default class PlantDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.plantService = new plantService();\n    this.userService = new userService();\n    this.taskService = new taskService();\n    this.geoService = new geoService();\n    this.state = {\n      plant: {},\n      name: \"\",\n      common_name: \"\",\n      loadingFlag: true,\n      waterInterval: 0,\n      fertilizerInterval: 0,\n      infoToggle: false,\n      mapToggle: false,\n      flavour: props.location.state.flavour\n    };\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  toggleInfo = e => {\n    e.preventDefault();\n    this.setState({ ...this.state, infoToggle: !this.state.infoToggle });\n  };\n\n  toggleMap = e => {\n    e.preventDefault();\n    this.setState({ ...this.state, mapToggle: !this.state.mapToggle });\n  };\n\n  handleUpload = e => {\n    const uploadData = new FormData();\n    uploadData.append(\"picture\", e.target.files[0]);\n\n    this.setState({ ...this.state, loadingFlag: true });\n    this.plantService.uploadPlantImage(uploadData).then(\n      data => {\n        this.setState({\n          ...this.state,\n          plant: { ...this.state.plant, picture: data.secure_url },\n          loadingFlag: false\n        });\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  };\n\n  handleUpdate = e => {\n    e.preventDefault();\n    const { history } = this.props;\n    let plant = {\n      ...this.state.plant,\n      common_name: this.state.common_name,\n      name: this.state.name\n    };\n    let tasks = this.state.plant.tasks.filter(task => task);\n    if (tasks.length > 0) {\n      tasks\n        .sort((a, b) => a.type - b.type)\n        .forEach(task =>\n          task.type === \"WATER\"\n            ? (task.day_interval = this.state.waterInterval)\n            : (task.day_interval = this.state.fertilizerInterval)\n        );\n      delete plant.tasks;\n      this.plantService\n        .updatePlant(plant)\n        .then(() => {\n          tasks.forEach(task => this.taskService.updateTask(task));\n        })\n        .then(() => history.push(\"/main\"));\n    } else {\n      tasks = [\n        {\n          begin_day: new Date(),\n          day_interval: this.state.waterInterval,\n          type: \"WATER\"\n        },\n        {\n          begin_day: new Date(),\n          day_interval: this.state.fertilizerInterval,\n          type: \"FERTILIZER\"\n        }\n      ];\n\n      this.taskService\n        .createTasks(tasks)\n        .then(tasks => {\n          console.log(tasks);\n          plant.tasks = [tasks[0].id, tasks[1].id];\n          return this.plantService.updatePlant(plant);\n        })\n        .then(() => history.push(\"/main\"));\n    }\n  };\n\n  getPlant = () => {\n    const {\n      match: { params }\n    } = this.props;\n    this.plantService.getPlantById(params.plantId).then(\n      plant => {\n        this.setState({\n          ...this.state,\n          plant,\n          name: plant.name,\n          common_name: plant.common_name,\n          loadingFlag: false,\n          waterInterval: plant.tasks[0].day_interval,\n          fertilizerInterval: plant.tasks[1].day_interval\n        });\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  createNewPlant(user) {\n    let locationArr = [40.392351, -3.696842];\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position =>\n        doCreate([position.coords.latitude, position.coords.longitude])\n      );\n    } else {\n      doCreate(locationArr);\n    }\n\n    const doCreate = currentPosition => {\n      let newTasks = [\n        {\n          begin_day: new Date(),\n          day_interval: 0,\n          type: \"WATER\"\n        },\n        {\n          begin_day: new Date(),\n          day_interval: 0,\n          type: \"FERTILIZER\"\n        }\n      ];\n\n      let newPlant = {\n        name: \"\",\n        common_name: \"\",\n        scientific_name: \"\",\n        soils_adaptation: [],\n        temperature_minimun: 0,\n        shade_tolerance: \"\",\n        year_rain_range: \"\",\n        ph_range: \"\",\n        fertilizer_req: \"\",\n        perennial: true,\n        picture: \"../images/daisy.jpg\",\n        tasks: [],\n        location: {\n          type: \"Point\",\n          coordinates: currentPosition\n        }\n      };\n\n      this.plantService\n        .createPlant(newPlant)\n        .then(plant => {\n          newPlant = plant;\n          return this.taskService.createTasks(newTasks);\n        })\n        .then(tasks => {\n          newPlant.tasks = [tasks[0].id, tasks[1].id];\n          return this.plantService.updatePlant(newPlant);\n        })\n        .then(() => {\n          user.locations.push(currentPosition);\n          user.plants.push(newPlant.id);\n          user.locations = this.geoService.getUserLocationArr(user.locations);\n          return this.userService.updateUser(user);\n        })\n        .then(() => this.plantService.getPlantById(newPlant.id))\n        .then(createdPlant => {\n          console.log(createdPlant);\n          this.setState({\n            ...this.state,\n            plant: { ...createdPlant },\n            name: createdPlant.name,\n            common_name: createdPlant.common_name,\n            loadingFlag: false\n          });\n        })\n        .catch(error => console.error(error));\n    };\n  }\n\n  deleteHandle = e => {\n    e.preventDefault();\n    let user = { ...this.props.loggedInUser };\n    let plant = this.state.plant;\n    this.plantService\n      .deletePlant(plant.id)\n      .then(() => this.userService.deleteUserPlant(user, plant))\n      .then(() => this.userService.getUserByIdDeep(user.id))\n      .then(newUser => {\n        let userCoords = [];\n        newUser.plants.forEach(plant =>\n          userCoords.push(plant.location.coordinates)\n        );\n        newUser.locations = this.geoService.getUserLocationArr(\n          userCoords,\n          0.002\n        );\n        newUser.plants = newUser.plants.reduce((acc, plant) => {\n          acc.push(plant.id);\n          return acc;\n        }, []);\n        return this.userService.updateUser(newUser);\n      })\n      .then(() => this.props.history.push(\"/main\"))\n      .catch(error => console.error(error));\n  };\n\n  componentDidMount() {\n    if (this.props.location.state.flavour === \"create\") {\n      this.createNewPlant({ ...this.props.loggedInUser });\n    } else {\n      this.getPlant();\n    }\n  }\n\n  render() {\n    const { flavour, plant, name, common_name } = this.state;\n    return (\n      <React.Fragment>\n        {this.state.plant && (\n          <React.Fragment>\n            {this.state.loadingFlag ? (\n              <LoadingOverlay />\n            ) : (\n              <React.Fragment>\n                <aside\n                  className={this.state.infoToggle ? \"show-aside\" : \"\"}\n                  onClick={this.toggleInfo}\n                >\n                  <h2>{capitalize(plant.common_name)}</h2>\n                  <p>{capitalize(plant.scientific_name)}</p>\n                  <div className=\"row\">\n                    <h3>Soil preference</h3>\n                    <p>\n                      {plant.soils_adaptation\n                        .map(a => capitalize(a))\n                        .join(\", \")}\n                    </p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Temperature minimun</h3>\n                    <p>{plant.temperature_minimun}&#176;C</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Shade tolerance</h3>\n                    <p>{plant.shade_tolerance}</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Yearly precipitation rate</h3>\n                    <p>{plant.year_rain_range}</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>pH range</h3>\n                    <p>{plant.ph_range}</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Fertilizer needs</h3>\n                    <p>{plant.fertilizer_req}</p>\n                  </div>\n                  <div className=\"row\">\n                    <h3>Perennial</h3>\n                    <p>{plant.perennial ? \"Yes\" : \"No\"}</p>\n                  </div>\n                </aside>\n\n                {this.state.mapToggle && (\n                  <div className=\"map-wrapper\">\n                      <GmapsMap className=\"map\"/>\n                      <button className=\"map-btn\" btnColor=\"green\">WOLOLOLO</button>\n                  </div>\n                )}\n\n                <PageTitle\n                  src=\"./images/green_care_w.svg\"\n                  alt=\"green care logo\"\n                  logoutHandler={this.props.handleLogout}\n                />\n                <FormWrapper>\n                  <MutableTextInput\n                    name=\"name\"\n                    value={name}\n                    handleChange={this.handleChange}\n                    flavour={flavour}\n                    placeholder=\"Plant name\"\n                  />\n                  <ImageLoader\n                    picture={plant.picture}\n                    handleUpload={this.handleUpload}\n                    flavour={flavour}\n                  />\n                  <MutableTextInput\n                    className=\"sub-text\"\n                    name=\"common_name\"\n                    value={common_name}\n                    handleChange={this.handleChange}\n                    flavour={flavour}\n                    placeholder=\"Plant species\"\n                  />\n                  <ButtonsWrapper>\n                    <StyledButton\n                      img=\"../images/map_w.svg\"\n                      clicked={this.toggleMap}\n                    />\n                    <StyledButton\n                      img=\"../images/info_w.svg\"\n                      clicked={this.toggleInfo}\n                    />\n                    <StyledButton\n                      img=\"../images/trash_b_w.svg\"\n                      clicked={this.deleteHandle}\n                    />\n                  </ButtonsWrapper>\n\n                  <FormRange\n                    id={\"waterSlider\"}\n                    name={\"waterInterval\"}\n                    value={this.state.waterInterval}\n                    handleChange={\n                      flavour !== \"readonly\" ? this.handleChange : () => \"\"\n                    }\n                    labelText=\"Watering interval\"\n                  />\n                  <FormRange\n                    id={\"fertSlider\"}\n                    name={\"fertilizerInterval\"}\n                    value={this.state.fertilizerInterval}\n                    handleChange={\n                      flavour !== \"readonly\" ? this.handleChange : () => \"\"\n                    }\n                    labelText=\"Fertilizer\"\n                  />\n                </FormWrapper>\n                <ModalButtons\n                  flavour={flavour}\n                  updateHandler={this.handleUpdate}\n                />\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nexport default function PrivateRoute({component: Component, user, logoutHandler, redirectPath, ...rest}) {\n  return (\n   <Route {...rest} render={(props) => {\n    {if(user) {\n      return <Component loggedInUser={user} handleLogout={logoutHandler} {...props}/>\n     } else {\n       return <Redirect to={{pathname: redirectPath}}/>\n     }\n    }\n   }} />\n  )\n}","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport SignUp from \"./components/Signup/Signup\";\nimport Main from \"./components/Main/Main\";\nimport Profile from \"./components/Profile/Profile\"\nimport PlantDetail from \"./components/PlantDetail/PlantDetail\";\nimport AuthService from \"./services/AuthService\";\nimport PrivateRoute from \"./guards/PrivateRoute\";\nimport GoogleMap from \"./components/GmapsMap/GmapsMap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n    this.state = {\n      user: null,\n      flag: false\n    };\n  }\n\n  setUser = user => {\n    this.setState({ ...this.state, user });\n  };\n\n  fetchUser = () => {\n    if (this.state.user === null) {\n      this.authService\n        .loggedInUser()\n        .then(\n          user => {\n            this.setUser(user);\n          },\n          error => {\n            this.setUser(false);\n          }\n        )\n        .catch(() => {\n          this.setUser(false);\n        });\n    }\n  };\n\n  logout = (match) => {\n    this.authService.logout().then(response => {\n      this.setState({\n        ...this.state,\n        user: null\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  render() {\n    let { user } = this.state;\n    return (\n      <div className=\"App\">\n        {user && (\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={match => <Login {...match} setUser={this.setUser} />}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={match => <SignUp {...match} setUser={this.setUser} />}\n            />\n            <PrivateRoute exact path=\"/main\" user={user} component={Main} logoutHandler={this.logout}/>\n            <PrivateRoute exact path=\"/plant-detail/:plantId\" user={user} component={PlantDetail} logoutHandler={this.logout} />\n            <PrivateRoute exact path=\"/plant-update/:plantId\" user={user} component={PlantDetail} logoutHandler={this.logout} />\n            <PrivateRoute exact path=\"/plant/new\" user={user} component={PlantDetail} logoutHandler={this.logout} />\n            <PrivateRoute exact path=\"/profile\" user={user} component={Profile} logoutHandler={this.logout} />\n            <PrivateRoute exact path=\"/plants-map\" user={user} component={GoogleMap} logoutHandler={this.logout} />\n            {/* <PrivateRoute exact path=\"/map-input\" user={user} component={GmapsPlaces} logoutHandler={this.logout} /> */}\n            <PrivateRoute exact path=\"/map-input\" user={user} component={GoogleMap} logoutHandler={this.logout} />\n          </Switch>\n        )}\n        {!user && (\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={match => <Login {...match} setUser={this.setUser} />}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={match => <SignUp {...match} setUser={this.setUser} />}\n            />\n            <Route\n              path=\"/\"\n              render={match => <Redirect to={{pathname: \"/login\"}}/>}\n            />\n          </Switch>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}