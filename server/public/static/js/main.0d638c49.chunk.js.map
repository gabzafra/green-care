{"version":3,"sources":["globalStyles/colors.js","fontStyles/StyledCloseBtn.js","fontStyles/PageTitle.js","services/AuthService.js","components/Login/StyledLogin.js","components/Login/Login.js","components/Signup/StyledSignup.js","components/Signup/Signup.js","services/PlantService.js","services/TaskService.js","components/PlantCard/StyledPlantCard.js","components/Main/Main.js","fontStyles/ImageLoader.js","fontStyles/LoadingOverlay.js","fontStyles/FormRange.js","fontStyles/StyledButton.js","fontStyles/MutableTextInput.js","components/PlantDetail/PlantDetail.js","guards/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["colors","green","white","red","blue","gray","StyledButton","styled","button","props","btnColor","CloseBtn","HeaderWrapper","div","LogoImg","img","PageTitle","src","alt","AuthService","signup","user","instance","post","then","res","Promise","resolve","data","catch","error","console","login","loggedInUser","get","logout","upload","picture","this","axios","create","baseURL","process","withCredentials","StyledLogin","StyledInput","input","StyledLabel","label","Login","username","password","handleChange","placeholder","htmlFor","type","name","value","onChange","className","state","e","target","setState","handleLogin","setUser","history","preventDefault","authService","push","onSubmit","Component","StyledSignup","StyledError","p","Signup","passwordR","SignUp","handleSignUp","Fragment","PlantService","getPlantById","plantId","getUserPlants","userId","createPlant","plant","deletePlant","delete","updatePlant","put","uploadPlantImage","TaskService","createTask","task","updateTask","deleteTask","CardContainer","PlantPortrait","PlantInfo","ControlButtons","PlantCard","id","common_name","to","onClick","Main","updatePlants","plantService","plants","message","find","taskService","map","key","InputField","CustomLabel","Loader","handleUpload","LoadingOverlay","Label","RangeInput","NumberBoard","labelText","forHtml","step","min","max","GenericBtn","Button","handleClick","StaticField","Input","job","FormWrapper","form","ButtonsWrapper","PlantDetail","uploadData","FormData","append","files","loadingFlag","secure_url","getPlant","params","match","waterInterval","fertilizerInterval","MutableTextInput","ImageLoader","FormRange","PrivateRoute","component","redirectPath","rest","render","pathname","App","fetchUser","response","flag","exact","path","React","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d638c49.chunk.js","sourcesContent":["const colors = {\n    green : `#6AA76F`,\n    white : `#FFFFFF`,\n    red : `#A78F6A`,\n    blue: `#1B8ECF`,\n    gray: `#A0A0A0`\n}\n\nexport default colors;","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\n\nconst StyledButton = styled.button`\n        border: none;\n        background-color: ${colors.green};\n        background-image: ${props => props.btnColor === \"white\" ? \"url(./images/close_w.svg)\" :\"url(./images/close_g.svg)\"};\n        background-position: top-center;\n        background-repeat: no-repeat;\n        width: 10vw;\n        height: 5vh;\n        margin-right: 1rem;\n        margin-top: 1rem;\n`;\n\nconst CloseBtn = props => {\n    const { btnColor } = props;\n    return (\n        <StyledButton btnColor={btnColor} />\n    );\n};\n\nexport default CloseBtn;","import React from \"react\";\nimport styled from \"styled-components\";\nimport CloseBtn from \"./StyledCloseBtn\";\n\nconst HeaderWrapper = styled.div`\n  width: 100vw;\n  height: 10vh;\n  display: flex;\n  justify-content: space-between;\n  padding-left: 1rem;\n  box-sizing: border-box;\n`;\n\nconst LogoImg = styled.img`\n  width: 70vw;\n  height: 10vh;\n`;\n\nconst PageTitle = props => {\n  return (\n    <HeaderWrapper>\n      <LogoImg src={props.src} alt={props.alt} />\n      <CloseBtn btnColor={\"white\"} />\n    </HeaderWrapper>\n  );\n};\nexport default PageTitle;\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true    \n    })\n  }\n\n  signup = (user) => {\n    return this.instance.post('/signup', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  login = (user) => {\n    return this.instance.post('/login', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  loggedInUser = () => {\n    return this.instance.get('/loggedin')\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  logout = () => {\n    return this.instance.post('/logout')\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error))\n  }\n\n  upload = (picture) => {\n    return this.instance.post('/upload', picture)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n}\n\nexport default AuthService;","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../globalStyles/colors\";\n\nconst StyledLogin = styled.div`\n  display: flex;\n  align-items: center;\n  flex-flow: column;\n  width: 100vw;\n  height: 50vh;\n  margin: 0 auto;\n  .button-box {\n    display: flex;\n    flex-direction: column;\n    margin-top: 2rem;\n    button {\n      background: ${colors.white};\n      color: ${colors.green};\n      font-size: 1.2rem;\n      font-weight: 600;\n      border: none;\n      border-radius: 25px;\n      height: 50px;\n      min-width: 230px;\n      max-width: 350px;\n      padding: 10px;\n      margin: .5rem;\n      box-sizing: border-box;\n      input {\n        color: ${colors.white};\n        font-size: 1.2rem;\n        font-weight: 600;\n      }\n    }\n    .btn-green {\n      background: ${colors.green};\n      border: 1px solid ${colors.white};\n    }\n  }\n`;\n\nconst StyledInput = styled.input`\n  color: ${colors.gray};\n  font-size: 1.2rem;\n  border: none;\n  border-radius: 22px;\n  height: 50px;\n  min-width: 230px;\n  max-width: 350px;\n  padding: 10px;\n  margin: 5px;\n  box-sizing: border-box;\n  ::placeholder {\n    color: ${colors.gray};\n  }\n`;\n\nconst StyledLabel = styled.label`\n  font-family: \"Encode Sans\";\n  font-weight: 400;\n  font-size: 2em;\n  color: ${colors.white};\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst Login = props => {\n  const { username, password, handleChange, placeholder } = props;\n  return (\n    <StyledLogin>\n      <StyledLabel htmlFor=\"username\">User name: </StyledLabel>\n      <StyledInput\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        placeholder={placeholder}\n      />\n      <StyledLabel htmlFor=\"password\">Password: </StyledLabel>\n      <StyledInput\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n      />\n      <div className={\"button-box\"}>\n        <button className={\"btn-green\"}>\n          <input type=\"submit\" value=\"Enter\" />\n        </button>\n        <button>New user</button>\n      </div>\n    </StyledLogin>\n  );\n};\n\nexport default Login;\n","import React, { Component } from 'react'\nimport PageTitle from '../../fontStyles/PageTitle'\nimport AuthService from '../../services/AuthService';\nimport './Login.css';\nimport StyledLogin from './StyledLogin';\n\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  state = {\n    // username: '',\n    // password: ''\n    username: 'bob',\n    password: '12345678'\n  }\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({...this.state, [name]:value})\n  }\n  handleLogin = (e) => {\n    const { setUser, history } = this.props;\n    e.preventDefault()\n    this.authService.login(this.state)\n    .then(\n      (user) => {\n        setUser(user)\n        history.push(\"/main\")\n      },\n      (error) => {\n        console.error(error)\n      }\n    )\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <div className=\"login-wrapper\">\n        <PageTitle src=\"./images/green_care_w.svg\" alt=\"green care logo\"/>\n        <img src=\"./images/leaf_w.svg\" alt=\"green care\"></img>\n        <form onSubmit={this.handleLogin}>\n          <StyledLogin username={username} password={password} handleChange={this.handleChange} handleLogin={this.handleLogin} placeholder={\"User name\"}></StyledLogin>\n        </form>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../globalStyles/colors\";\n\nconst StyledSignup = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: column;\n  width: 100vw;\n  height: 50vh;\n  .button-box {\n    display: flex;\n    flex-direction: column;\n    margin-top: 2rem;\n    button {\n      background: ${colors.white};\n      color: ${colors.green};\n      font-size: 1.2rem;\n      font-weight: 600;\n      border: none;\n      border-radius: 25px;\n      height: 50px;\n      min-width: 230px;\n      max-width: 350px;\n      padding: 10px;\n      margin: .5rem;\n      box-sizing: border-box;\n      input {\n        color: ${colors.white};\n        font-size: 1.2rem;\n        font-weight: 600;\n      }\n    }\n    .btn-green {\n      background: ${colors.green};\n      border: 1px solid ${colors.white};\n    }\n\n    .btn-red {\n      background: ${colors.red};\n      border: 1px solid ${colors.white};\n      color: ${colors.white};\n    }\n  }\n`;\n\nconst StyledInput = styled.input`\n  color: ${colors.gray};\n  font-size: 1.2rem;\n  border: none;\n  border-radius: 22px;\n  height: 50px;\n  min-width: 230px;\n  max-width: 350px;\n  padding: 10px;\n  margin: 5px;\n  box-sizing: border-box;\n  ::placeholder {\n    color: ${colors.gray};\n  }\n`;\n\nconst StyledLabel = styled.label`\n  font-family: \"Encode Sans\";\n  font-weight: 400;\n  font-size: 2em;\n  color: ${colors.white};\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst StyledError = styled.p`\n  font-family: \"Roboto\";\n  font-weight: 300;\n  font-size: 1em;\n  font-style: italic;\n  color: ${colors.white};\n  background-color: ${colors.red} ;\n  padding: 2px 5px;\n  border-radius: 5px;\n`;\n\nconst Signup = props => {\n  const { username, password, passwordR, handleChange, placeholder, error } = props;\n  return (\n    <StyledSignup>\n      <StyledLabel htmlFor=\"username\">New user name: </StyledLabel>\n      <StyledInput\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        placeholder={placeholder}\n      />\n      <StyledLabel htmlFor=\"password\">New password: </StyledLabel>\n      <StyledInput\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n      />\n      <StyledLabel htmlFor=\"passwordR\">Repeat password: </StyledLabel>\n      <StyledInput\n        type=\"password\"\n        name=\"passwordR\"\n        value={passwordR}\n        onChange={handleChange}\n      />\n      {error && <StyledError>{error}</StyledError>}\n      <div className={\"button-box\"}>\n        <button className={\"btn-green\"}>\n          <input type=\"submit\" value=\"Create User\" />\n        </button>\n        <button className={\"btn-red\"}>Cancel</button>\n      </div>\n    </StyledSignup>\n  );\n};\n\nexport default Signup;","import React, { Component } from \"react\";\nimport \"./Signup.css\";\nimport PageTitle from \"../../fontStyles/PageTitle\";\nimport Signup from \"./StyledSignup\";\nimport AuthService from \"../../services/AuthService\";\n\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  state = {\n    username: \"\",\n    password: \"\",\n    passwordR: \"\",\n    error: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n  handleSignUp = e => {\n    e.preventDefault();\n    if (this.state.password === this.state.passwordR) {\n      const { history, setUser } = this.props;\n      this.authService.signup(this.state).then(\n        user => {\n          setUser(user);\n          history.push(\"/\");\n        },\n        error => {\n          this.setState({ ...this.state, error: error });\n        }\n      );\n    } else {\n      this.setState({ ...this.state, error: \"Password don't match\" });\n    }\n  };\n\n  render() {\n    const { username, password, passwordR, error } = this.state;\n    return (\n      <React.Fragment>\n        <PageTitle src=\"./images/green_care_w.svg\" alt=\"green care logo\"/>\n        <form className=\"form-wrapper\" onSubmit={this.handleSignUp}>\n          <Signup\n            username={username}\n            password={password}\n            passwordR={passwordR}\n            handleChange={this.handleChange}\n            placeholder={\"User name\"}\n            error={error}\n          ></Signup>\n          {/* <label htmlFor=\"username\">Username: </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            required\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type=\"password\"\n            value={password}\n            name=\"password\"\n            required\n            onChange={this.handleChange}\n          />\n          <input type=\"file\" name=\"picture\" onChange={this.handleUpload} />\n          <input type=\"submit\" value=\"Create account\" /> */}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n","import axios from 'axios';\n\nclass PlantService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/plants`,\n      withCredentials: true    \n    })\n  }\n\n  getPlantById = (plantId) => {\n    return this.instance.get(`/${plantId}`)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  getUserPlants = (userId) => {\n    return this.instance.get(`/user/${userId}`)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  createPlant = (plant) => {\n    return this.instance.post('/create', plant)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  deletePlant = (plantId) => {\n    return this.instance.delete(`/delete/${plantId}`)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  updatePlant = (plant) => {\n    return this.instance.put(`/delete`,plant)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  uploadPlantImage = (picture) => {\n    return this.instance.post('/upload', picture)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n}\n\nexport default PlantService;","import axios from \"axios\";\n\nclass TaskService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/plants`,\n      withCredentials: true\n    });\n  }\n\n  createTask = (plantId, task) => {\n    task.plantId = plantId;\n    return this.instance\n      .post(\"/create\", task)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  updateTask = (task) => {\n    return this.instance\n      .put(\"/update\", task)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  deleteTask = (task) => {\n    return this.instance\n      .put(\"/delete\", task)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n}\n\nexport default TaskService;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./StyledPlantCard.css\";\nimport colors from \"../../globalStyles/colors\";\nimport { Link } from \"react-router-dom\";\n\nconst CardContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 2rem 1rem;\n`;\n\nconst PlantPortrait = styled.img`\n  width: 140px;\n  height: 140px;\n  border-radius: 50%;\n  border: 8px solid ${colors.white};\n  box-sizing: border-box;\n`;\n\nconst PlantInfo = styled.div`\n  color: ${colors.white};\n\n  h2 {\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n  p {\n    font-size: 1rem;\n    font-family: \"Roboto\";\n    font-style: italic;\n  }\n`;\n\nconst ControlButtons = styled.div`\n  display: flex;\n  button {\n    border: none;\n    background-color: ${colors.green};\n    background-position: center-top;\n    background-repeat: no-repeat;\n    background-size: cover;\n    width: 2rem;\n    height: 2rem;\n    margin-top: 2rem;\n  }\n  .btn-edit {\n    background-image: url(./images/edit_w.svg);\n  }\n  .btn-delete {\n    background-image: url(./images/trash_w.svg);\n    margin-left: 2rem;\n  }\n`;\n\nconst PlantCard = props => {\n  const { id, picture, name, common_name, deletePlant } = props.plant;\n  return (\n    <CardContainer>\n      <Link to={`/plant-detail/${id}`}>\n        <PlantPortrait id={id} src={picture}></PlantPortrait>\n      </Link>\n      <div className=\"side-wrapper\">\n        <Link to={`/plant-detail/${id}`}>\n          <PlantInfo id={id}>\n            <h2>{name}</h2>\n            <p>{common_name}</p>\n          </PlantInfo>\n        </Link>\n        <ControlButtons>\n          <Link to={`/plant-update/${id}`}>\n            <button className=\"btn-edit\"></button>\n          </Link>\n          <button\n            className=\"btn-delete\"\n            id={id}\n            onClick={e => deletePlant(e)}\n          ></button>\n        </ControlButtons>\n      </div>\n    </CardContainer>\n  );\n};\n\nexport default PlantCard;\n","import React, { Component } from \"react\";\nimport \"./Main.css\";\nimport PageTitle from \"../../fontStyles/PageTitle\";\nimport plantService from \"../../services/PlantService\";\nimport taskService from \"../../services/TaskService\";\nimport PlantCard from \"../PlantCard/StyledPlantCard\";\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.plantService = new plantService();\n    this.taskService = new taskService();\n    this.state = {\n      plants: []\n    };\n  }\n\n  updatePlants = () => {\n    this.plantService.getUserPlants(this.props.loggedInUser.id).then(\n      plants => {\n        this.setState({ ...this.state, plants });\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  deletePlant = e => {\n    e.preventDefault();\n    let plant = this.state.plants.find(plant => plant.id === e.target.id);\n    this.plantService.deletePlant(plant.id).then(\n      () => {\n        this.updatePlants();\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  componentDidMount() {\n    this.updatePlants();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <PageTitle src=\"./images/green_care_w.svg\" alt=\"green care logo\" />\n        {this.state.plants.map(plant => (\n          <PlantCard\n            key={plant.id}\n            plant={{ ...plant, deletePlant: this.deletePlant }}\n          ></PlantCard>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\n\nconst InputField = styled.input`\n  display: none;\n`;\n\nconst CustomLabel = styled.label`\n  cursor: pointer;\n`;\n\nconst PlantPortrait = styled.img`\n  width: 178px;\n  height: 178px;\n  border-radius: 50%;\n  border: 8px solid ${colors.white};\n  box-sizing: border-box;\n`;\n\nconst Loader = props => {\n  const { picture, handleUpload } = props;\n  return (\n    <React.Fragment>\n      <CustomLabel htmlFor=\"file-upload\" className=\"custom-file-upload\">\n        <PlantPortrait src={picture} />\n      </CustomLabel>\n      <InputField id=\"file-upload\" type=\"file\" onChange={handleUpload} />\n    </React.Fragment>\n  );\n};\n\nexport default Loader;\n","import styled from \"styled-components\";\n\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background-color : rgba(0,0,0,.2);\n  background-image : url(../images/Spinner-1s-200px.svg);\n  background-position: center;\n  background-repeat: no-repeat;\n  z-index : 1000;\n  }\n`;\n\nexport default LoadingOverlay;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Label = styled.label`\n    font-size: 2rem\n`;\n\nconst RangeInput = styled.input``;\n\nconst NumberBoard = styled.p``;\n\nconst Loader = props => {\n  const { name, handleChange, value, id, labelText } = props;\n  return (\n    <React.Fragment>\n        <Label forHtml={id} name={name}>{labelText}</Label>\n        <div></div>\n        <RangeInput\n          id={id}\n          type=\"range\"\n          name={name}\n          step={1}\n          value={value}\n          min={1}\n          max={15}\n          onChange={handleChange}\n        ></RangeInput>\n        <NumberBoard>{value}</NumberBoard>\n    </React.Fragment>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\n\nconst GenericBtn = styled.button`\n  border: none;\n  background-color: ${colors.green};\n  background-image: url(${props => props.img});\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 4rem;\n  height: 4rem;\n  margin-right: 1rem;\n  margin-top: 1rem;\n`;\n\nconst Button = props => {\n  const { img, handleClick } = props;\n  return (\n    <React.Fragment>    \n        <GenericBtn img={img} />\n    </React.Fragment>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../globalStyles/colors\";\n\nconst InputField = styled.input`\ncolor: ${colors.gray};\n  font-size: 1.2rem;\n  border: none;\n  border-radius: 22px;\n  height: 50px;\n  min-width: 230px;\n  max-width: 350px;\n  padding: 10px;\n  margin: 5px;\n  box-sizing: border-box;\n  ::placeholder {\n    color: ${colors.gray};\n  }`;\n  \nconst StaticField = styled.p`\n  background-color: ${colors.green};\n  font-family: \"Encode Sans\"; \n  font-size: 1.7rem;\n  padding: 1rem;\n`;\n\nconst Input = props => {\n  const { name, value, handleChange, job, placeholder } = props;\n  return (\n    <React.Fragment>\n      {job === \"readonly\" ? (\n        <StaticField>{value}</StaticField>\n      ) : (\n        <InputField name={name} value={value} handleChange={handleChange} placeholder={placeholder} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport PageTitle from \"../../fontStyles/PageTitle\";\nimport ImageLoader from \"../../fontStyles/ImageLoader\";\nimport plantService from \"../../services/PlantService\";\nimport LoadingOverlay from \"../../fontStyles/LoadingOverlay\";\nimport FormRange from \"../../fontStyles/FormRange\";\nimport StyledButton from \"../../fontStyles/StyledButton\";\nimport MutableTextInput from \"../../fontStyles/MutableTextInput\";\nimport styled from \"styled-components\";\nimport \"./PlantDetail.css\";\n\nconst FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ButtonsWrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport default class PlantDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.plantService = new plantService();\n    this.state = {\n      plant: null,\n      loadingFlag: false,\n      waterInterval: 7,\n      fertilizerInterval: 7\n    };\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleUpload = e => {\n    const uploadData = new FormData();\n    uploadData.append(\"picture\", e.target.files[0]);\n    this.setState({ ...this.state, loadingFlag: true });\n    this.plantService.uploadPlantImage(uploadData).then(\n      data => {\n        this.setState({\n          ...this.state,\n          plant: { picture: data.secure_url },\n          loadingFlag: false\n        });\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  };\n\n  getPlant = () => {\n    const {\n      match: { params }\n    } = this.props;\n    this.plantService.getPlantById(params.plantId).then(\n      plant => {\n        this.setState({ ...this.state, plant });\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  componentDidMount() {\n    this.getPlant();\n  }\n\n  render() {\n    const plant = this.state.plant;\n    return (\n      <React.Fragment>\n        {this.state.plant && (\n          <React.Fragment>\n            {this.state.loadingFlag && <LoadingOverlay />}\n            <PageTitle src=\"../images/green_care_w.svg\" alt=\"green care logo\" />\n            <aside className=\"extend-info\"></aside>\n            <FormWrapper>\n              <MutableTextInput\n                name=\"name\"\n                value={plant.name}\n                handleChange={this.handleChange}\n                job=\"readonly\"\n                placeholder=\"Plant name\"\n              />\n              <ImageLoader\n                picture={plant.picture}\n                handleUpload={this.handleUpload}\n              />\n              <MutableTextInput\n                className=\"sub-text\"\n                name=\"common_name\"\n                value={plant.common_name}\n                handleChange={this.handleChange}\n                job=\"readonly\"\n                placeholder=\"Plant species\"\n              />\n              <ButtonsWrapper>\n                <StyledButton img=\"../images/map_w.svg\" />\n                <StyledButton img=\"../images/info_w.svg\" />\n                <StyledButton img=\"../images/trash_b_w.svg\" />\n              </ButtonsWrapper>\n\n              <FormRange\n                id={\"waterSlider\"}\n                name={\"waterInterval\"}\n                value={this.state.waterInterval}\n                handleChange={this.handleChange}\n                labelText=\"Watering interval\"\n              />\n              <FormRange\n                id={\"fertSlider\"}\n                name={\"fertilizerInterval\"}\n                value={this.state.fertilizerInterval}\n                handleChange={this.handleChange}\n                labelText=\"Fertilizer\"\n              />\n            </FormWrapper>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nexport default function PrivateRoute({component: Component, user, redirectPath, ...rest}) {\n  return (\n   <Route {...rest} render={(props) => {\n    {if(user) {\n      return <Component loggedInUser={user} {...props}/>\n     } else {\n       return <Redirect to={{pathname: redirectPath}}/>\n     }\n    }\n   }} />\n  )\n}","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport SignUp from \"./components/Signup/Signup\";\nimport Main from \"./components/Main/Main\";\nimport PlantDetail from \"./components/PlantDetail/PlantDetail\";\nimport AuthService from \"./services/AuthService\";\nimport PrivateRoute from \"./guards/PrivateRoute\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n    this.state = {\n      user: null,\n      flag: false\n    };\n  }\n\n  setUser = user => {\n    this.setState({ ...this.state, user });\n  };\n\n  fetchUser = () => {\n    if (this.state.user === null) {\n      this.authService\n        .loggedInUser()\n        .then(\n          user => {\n            this.setUser(user);\n          },\n          error => {\n            this.setUser(false);\n          }\n        )\n        .catch(() => {\n          this.setUser(false);\n        });\n    }\n  };\n\n  logout = match => {\n    this.authService.logout().then(response => {\n      this.setState({\n        ...this.state,\n        user: null\n      });\n      match.history.push(\"/login\");\n    });\n  };\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  render() {\n    let { user } = this.state;\n    return (\n      <div className=\"App\">\n        {user && (\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={match => <Login {...match} setUser={this.setUser} />}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={match => <SignUp {...match} setUser={this.setUser} />}\n            />\n            <Route exact path=\"/logout\" render={match => this.logout(match)} />\n            <PrivateRoute exact path=\"/main\" user={user} component={Main}  />\n            <PrivateRoute path=\"/plant-detail/:plantId\" user={user} component={PlantDetail}  />\n          </Switch>\n        )}\n        {!user && (\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={match => <Login {...match} setUser={this.setUser} />}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={match => <SignUp {...match} setUser={this.setUser} />}\n            />\n            <PrivateRoute exact path=\"/\" user={user} component={Main} redirectPath=\"/login\"/>\n          </Switch>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}